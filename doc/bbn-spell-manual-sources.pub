.require "pubpap.dfs[p,ub]" source!file
.single space
.once center
USING THE SPELLING CHECKER/CORRECTOR.

The first question from SPELL is: "Do you want to
augment the dictionary?" If you don't have  an  auxiliary  dictionary
anywhere then type <return> and forget the next paragraph.
.skip
If  you have a dictionary that you want to load then type "Y"
and <return> and you will be asked for the name  of  your  dictionary
file.  The dictionary file must be on disk. The format of the file is
one dictionary entry  (word)  on  a  line;  words  must  be  strictly
alphabetic  characters  and less than 40 letters long. The dictionary
entries need not be in alphabetical order.   After  typing  the  file
name  you  will  be  asked whether you want the new entries marked as
incremental  insertions.     If  the  new  entries  are   marked   as
incremental  then they will be included in an incremental dump of the
dictionary.    To have the new entries marked as incremental type "I"
and <return>, otherwise, type <return>.  (If any of the words in your
auxiliary dictionary are already  in  the  main  dictionary  then  no
second copy of the word will be made.  Hence if your words are marked
as incremental then in a subsequent incremental dump, any words  that
were  already in the dictionary will not be dumped.) After loading an
auxiliary dictionary the program will type the total number of  words
in  the dictionary.  At present there are
about 43,000 words in the dictionary.
Loading  an  auxiliary,  you will have an opportunity to save the new
core image on your disk area (probably not worth it). Also  you  will
get an opportunity to load another auxiliary dictionary.
.skip
Next you will be asked "Do you want normal mode?"  If you type "N" or ? the following choices will be listed:  Pickup, Training mode, Q-training mode or No Suffix testing.
.skip
.ONCE CENTER
The Pickup Feature.
.skip
For Pickup mode after the three file names in the  entry  sequence
(the source, correction and exception files) are specified,
SPELL
will  enter  pickup  mode.   The user will be asked to specify a page
number and, if the file is in SOS format, a line number  for  pickup.
The  effect  is  to suspend spelling checking until the page and line
specified.   When a user has a partially corrected file, this command
will enable him to skip over the portion of the file that has already
been corrected.  The input file will be copied  without  checking  to
the output until the page and line specified, at which point spelling
checking begins.
.skip
.once center
The Training feature.
.skip
In training mode,
instead of correcting the file, Spell will treat  the  file
as  a  training  set.   All  words in the file that are unfamiliar to
Spell will be entered in the dictionary  as  incremental  insertions.
After Spell finishes reading the file, the user has an opportunity to
dump all the words that were inserted this way.  The  resulting  list
of words  may  be  edited  and  any  words which are incorrect may be
deleted.  Then this file can be used as an auxiliary dictionary while
correcting the original source file.
This  feature  is  provided  for  the  purpose  of easing the
problem  of  creating  a  specialized  dictionary   of   jargon   and
infrequently used words.
.skip
Next you will be asked for the name of the file that you want
to check for spelling errors.
If you omit the file name then you will immediately enter the exit  sequence
(see below).
.skip
You will be asked to specify a name for the output file.  The
output file is where the corrected version of the input goes.  If you
omit this name then no corrections will be made.
Misspellings found will still be listed on the controlling terminal and in the exception file--see below.
.skip
You  will be asked to name an exception file.  This file will
contain all the lines on which exceptions were found and the rejected
words.  If you omit the name
then no such file will be created.

After you have specified all the files, the program will 
respond  with  "working..."  and  start  checking  the input file for
spelling errors.
.skip
When the spelling checker encounters a word that isn't in the
dictionary, it will type the page number, the line on which the  word
was  found  and  the word itself.  If no output file was given, the program simply makes a list of these errors.  If an output file for corrections was specified, the very first time this happens a
message that explains the choices you have will be typed.
.skip
These choices are:
.skip
A	Accept this word, this one time.
.skip
I	Accept this word and insert it  in  the  dictionary  so  that
subsequent  occurrences  of this word will be recognized and accepted.
Words that are inserted this way are marked as incremental insertions
and they may be dumped to form an auxiliary dictionary.
.skip
R	Replace  this  word.   Type "R" <return> and the program will
ask you for the replacement word.  If the  replacement  word  is  not
already  in  the dictionary, the program will give you an opportunity
to insert it.
.skip
X	Accept this word and finish.  The word will be accepted. Then
the  remainder  of  the input file will be copied without checking to
the output file.
.skip
W	Save my incremental insertions.  After you type "W"  <return>
you  will  be asked for a file name.  Then an incremental dump of the
dictionary will be written into the file.  After the dump is complete
you may then decide what to do with the excepted word.
.skip
D	Display  the  line and offending word again. The line that is
displayed will not have any corrections shown in it. If  a  line  has
more than  one  error, the line will only be typed once.   Subsequent
errors on that line will cause only the particular word to be  typed,
unless this command is used.
.skip
S	If  this  choice  is  offered  then  the spelling checker has
discovered several words that could be possible corrections  of  this
word.   If you type "S" <return> then you will enter a mode where you
can look at the words that were found  by  the  program  and  (optionally)
select one of the words from the list.
.skip
When  you  enter this selection submode for the first time an
explanation will be typed.  The first word in the  list  of  possible
corrections  will be typed followed by an asterisk. Then you have the
following choices:
.stoptext

	Y<cr>      Use this word as the correction.
	<cr>       Show the next possible choice.  When you exhaust
	           the choices you are returned to the outer mode,
	           and asked again.
	^<cr>      Back up in the list.
	<altmode>  Escape from this submode and return to the outer
	           command mode.
.starttext
.skip
In  general,  when  a  word  is  found  that  is  not  in the
dictionary a brief message, either "Type A,I,R,X,W  or  D"  or  "Type
A,I,R,X,W,D  or  S"  will  be  typed  to  remind  you of the possible
choices.   In the special case that the  program  finds  exactly  one
possible  correction  for the word, then the message "I guess <word>.
Type C to make this correction or A,I,R,X,W or D" will be typed.   If
you type  "C" <return>  then the indicated substitution will be made,
otherwise you have the usual choices.
.skip
When the input file is  exhausted, the  correction  file  and
exception  file  are  closed  and  all I/O channels are released. The
program types "Finished."
.skip
The exit sequence is entered next.  The user is given several
options.  They are:
.narrow 8,8
.skip
E	Exit now.
.skip
S	Save this core image
.skip
C	Go back and correct another file.
.skip
A	Augment the dictionary and correct another file.
.skip
D	Complete  dump of the dictionary to disk.
.skip
I	Incremental dump of the dictionary to disk.   All  the  words
that  were inserted while running the program are dumped to the disk.
The user specifies a file name (the  default  is  WORDS.LST).    This
incremental dump is in a format suitable for editing or for use as an
auxiliary dictionary.  The words in this dump are not in alphabetical
order.    These  words  will appear in groups sorted by the first two
letters of the word and by the length of the word.  Otherwise, within
a group the words will appear in last in - first out order.
.skip
X	This command is used to get a trace count of the program.  It
is for diagnostic purposes only.
.widen
.skip
.once center
How to use multiple dictionaries
.skip
Spell  has  a  set of features whereby the user can cause the
creation of several disjoint incremental dictionaries.  In this  way,
the   user   may  collect  several  dictionaries  of  special  terms.
Internally,  all dictionary  entries  are  considered  equivalent  as
regards  searches  for  words.   The distinction between dictionaries
has its greatest impact when doing incremental dumps (the  I  command
during  the  exit  sequence  or  the W command while in the middle of
execution).  When an incremental dump  is  requested,  the  user  may
specify  a  number, e.g. W9, which selects the particular incremental
dictionary to dump.  In this example, dictionary #9 will be dumped.
.skip
Dictionary 0 is the main dictionary.  Words cannot  be  added
to this dictionary, except by reading an auxiliary file.  In general,
words  that  are  inserted  incrementally  are  marked  as  being  in
dictionary  #1.   All  words  that  are incremental insertions in the
dictionary  will  be  marked  in  dictionary  #1,  unless  the   user
specifies otherwise.
.skip
The following places are where the  user  may  specify  which
dictionary to add to:
.narrow 8,8
.skip
1.	When loading an auxiliary  dictionary,  if  the  user
responds  with  "Inn"  to  the  question about marking new entries as
incremental, then the new entries will be marked in dictionary number
nn (where nn is interpreted as decimal and should be less than 32).
.skip
2.	After  a word in the file being corrected has been rejected by SPELL because it is not in the dictionary, type "Inn" to insert
the word in dictionary number nn.
.skip
3.	After replacing a word, if the replacement is not  in
the  dictionary  then  type  "Inn"  to  insert  the  replacement into
dictionary nn.
.widen
.skip
When requesting an incremental dump, the user may specify the
particular dictionary to dump.  This is allowed in two cases:
.narrow 8,8
.skip
1.	After some word has been rejected, the command  "Wnn"
will cause dictionary number nn to dumped.
.skip
2.	During  the  exit  sequence,  the  command "Inn" will
cause dictionary number nn to be dumped.
.widen
.skip
In  all  five cases above, if nn is either 0 or omitted, then
it will be taken as being 1.
.skip
Caution:  There is no provision in Spell for remembering which
dictionary  numbers  have  been  used.    Therefore,  it  remains the
individual user's responsibility to remember the numbers of  all  the
dictionaries  that he creates.  (Forgetting the number will mean that
the forgotten dictionary cannot be dumped incrementally.  The  words
in  a  forgotten dictionary will still be available, but the only way
to actually get them dumped out is to dump the entire dictionary).
.skip
.once center
ABNORMAL CONDITIONS
.skip
While the program is running  it  is  possible  that  certain
abnormal conditions may obtain.  The usual response of the program is
to type some sort of error message.
.skip
The following is a list of the error messages in SPELL,  with
an indication of the severity of the error.
.skip
HUH?	The  user  has  typed something illegal.   He will be
given another chance, usually  after  reviewing  the  list  of  valid
responses.
.skip
DEFAULT NAME IS WORDS.LST	The  user  has  typed <return> when a
name for a dictionary output file was requested.  The name  Words.Lst
is used.
.skip
Default name is SPELL.DMP	The  user  has  typed <return> when a
name for a core dump file was requested. The name Spell.Dmp is used.
.skip
ILLEGAL DICTIONARY ENTRY: <word>	This error occurs if an entry
in  a  dictionary  file exceeds 40 (decimal) characters.  The word is
ignored.
.skip
0 LENGTH WORD AT HASHCP		Somebody just asked  to  compute  the
hash address of an empty word.  The program continues, but there is a
possibility of great evilness.
.skip
HASHING ERROR	Somebody asked for the  hash  address
of  a  word  that  doesn't  begin  with  letters  as  the  first  two
characters. The program halts.
.skip
ILLEGAL CHARACTER IN SCAN.	This is a message  from  the  routine
that reads file names.  You will be asked to try retyping the name.
.skip
CAN'T GET THERE FROM HERE	This   means  that  from  the  select
submode you typed ^ to see the previous choice and you  were  at  the
first choice. The first choice is repeated.
.skip
DEVICE DATA ERROR (OUTPUT)	This message means that while writing
a file, something screwed up.  The program halts.
.skip
DEVICE ERROR (INPUT	The input file is screwed up in  some
way.  The program halts.
.skip
INIT FAILED ON DEVICE DSK:	This  indicates  tremendous confusion
external to this program.  The program halts.
.skip
FILE NOT FOUND. DSK:<filename>	The  indicated  file  could  not   be
found. The user gets to specify some other file.
.skip
ENTER FAILED ON: <file name>	An  enter  uuo failed while trying to
select the indicated file for output.  The user may  specify  another
name.
.skip
INSUFFICIENT CORE AVAILABLE.  I GIVE UP.	Program requires more
core, but none is available.  The program exits.
.skip
NULL TERM ILLEGAL.	The user typed <return> where a  file
name  is  needed.   The  user  has another opportunity to specify the
name.
.skip
INTERNAL CONFUSION IN THE  SPELLING  CHECKER.	Called  from  location
<loc>.  The  spelling  checker  has  discovered  a  (possible) bug in
itself.   The program halts, but the user may type continue.   Please
note  the  location  mentioned  and the circumstances that evoked the
message.
.skip
DICTIONARY NUMBER TOO LARGE. MAXIMUM IS 31.	This  message   means
that  the  user  attempted  to  select  for  insertion  or  dumping a
dictionary beyond the range of allowed numbers.  The  user  will  get
another chance to do the right thing.
.skip
