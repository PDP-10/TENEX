^^
.TITLE TENEX USER'S GUIDE      JANUARY 1973
.NUMBER 83
.SUBTITLE IDDT
THROW OUT THIS BLANK
.PAGE
.SKIP 1
.spacing 1
.CENTER
^^IDDT\\
.SKIP 2
1.	^INTRODUCTION

.SKIP 1
.PARAGRAPH
	^^IDDT \\IS A NEW DEBUGGER FOR
^^TENEX\\ PROGRAMS.  ^IT HAS MANY OF THE SAME COMMANDS AS THE STANDARD
^^DDT10X (SDDT\\ AND ^^UDDT)\\ \\AND ORDINARILY MAY BE USED WITHOUT REGARD TO THE FACT THAT
IT IS A DIFFERENT DEBUGGER.  ^THE USER IS DIRECTED TO THE ^^DDT\\
SECTION OF THE ^^DEC\\SYSTEM-10 ^^ASSEMBLY LANGUAGE HANDBOOK\\
FOR INFORMATION REGARDING THE BASIC FEATURES AND USE OF ^^DDT\\.


.PARAGRAPH
	^THE PRIMARY FEATURE OF ^^IDDT\\ IS THAT IT OPERATES ON USER
PROGRAMS WHICH RUN IN AN INFERIOR FORK UNDER ^^IDDT\\.  ^THUS, AN ERRANT
USER PROGRAM CANNOT DESTROY THE DEBUGGER OR ITS SYMBOL TABLE BECAUSE
THE DEBUGGER IS IN A TOTALLY DIFFERENT ADDRESS SPACE.  ^THIS RELATION
BETWEEN THE PROGRAM BEING DEBUGGED AND ^^IDDT\\ IS MUCH THE SAME AS THE RELATION
 BETWEEN CURRENT USER PROGRAMS (INCLUDING ^^IDDT\\)
AND THE ^^EXEC\\.  ^BECAUSE OF THIS, ^^IDDT\\ MUST SIMULATE MANY OF THE SERVICES
ORDINARLY PROVIDED BY THE ^^EXEC\\, SUCH AS ^^@GET, @LOADER, @RUN, \\ETC.
.PARAGRAPH

	^THE FOLLOWING
DESCRIBES THE NEW FEATURES IN ^^IDDT\\ AND HOW THEY MAY BE USED FOR
DEBUGGING.  ^SOME OF THE FEATURES ARE BOUND TO CHANGE, AND OTHERS
WILL BE ADDED.
.SKIP 2


2.	^USING ^^IDDT\\
.PARAGRAPH

	^^IDDT\\ MAY BE CALLED INTO SERVICE EITHER BEFORE OR AFTER PROGRAMS
HAVE BEEN LOADED INTO MEMORY.
^THIS IS DONE BY TELLING THE ^^EXEC\\
.SKIP 1
.INDENT 5
^^	@IDDT\\
.SKIP 1
.PARAGRAPH
^THIS COMMAND CAUSES THE ^^EXEC\\ TO SPLICE A FORK
CONTAINING ^^IDDT\\ IN BETWEEN ITSELF AND THE PROGRAM TO BE DEBUGGED.
^THIS OPERATION IS DONE IN A WAY THAT PRESERVES THE STATE OF THE
USER'S PROGRAM INCLUDING ITS FORK STRUCTURE.  ^IT IS POSSIBLE TO
_^^C OUT OF A RUNNING PROGRAM AND GET ^^IDDT\\.  ^IF THIS IS DONE,
A ^^$P\\ (^PROCEED) COMMAND WILL RESUME RUNNING THE USER
PROGRAM.
.SKIP 1
.PARAGRAPH
^THE ^^EXEC\\ COMMAND _   ^^"NO IDDT"\\_ 
WILL UNSPLICE THE FORK CONTAINING ^^IDDT\\ IN THE EVENT THE USER
WISHES TO CONTINUE HIS PROGRAM WITHOUT HAVING AN ^^IDDT\\ ABOVE
IT.
.PARAGRAPH
^A FAIRLY COMMON PRACTICE IS TO
GET ^^IDDT\\ FIRST AND USE IT TO LOAD THE PROGRAM TO BE DEBUGGED.
^ONE OF THREE ^^IDDT\\ COMMANDS MAY BE USED TO LOAD THE OBJECT PROGRAM:
$^L  (RUN THE ^^LOADER\\ IN THE USER FORK), ;^L  (^LOADGO OF NAMED FILE), OR
;^Y ^YANK THE NAMED FILE).  ^THE FIRST OF THESE IS ESSENTIALLY THE
SAME AS THE  ^^EXEC\\ COMMAND,  @^^LOADER\\.  ^THE SECOND IS COMPARABLE
TO @^^RUN\\, WHILE THE LAST IS SIMILAR TO @^^GET\\.
.SKIP 2


3.	^SYMBOL ^TABLE ^CONSIDERATIONS
.PARAGRAPH

	^WHEN INITIALLY STARTED, AND AFTER SUCCESSFUL EXECUTION
OF A ;^L OR ;^Y COMMAND, ^^IDDT\\ WILL OBTAIN A NEW SYMBOL
TABLE IF IT EXISTS.  ^IT DOES THIS BY COPYING (AND SOMETIMES
SHARING) PAGES OF THE USER FORK.  ^THUS, THOSE USER PROGRAMS WHICH
NEED ACCESS TO THEIR OWN SYMBOLS WILL BEHAVE THE SAME, AND ^^IDDT\\
WILL HAVE ITS OWN COPY OF THE SYMBOL TABLE WHICH IS PROTECTED FROM
THE USER.
.PARAGRAPH
	^THE $^L COMMAND CAUSES ^^IDDT\\ TO RUN THE ^^LOADER\\ IN
THE USER'S ADDRESS SPACE.  ^UPON COMPLETION, THE ^^LOADER\\
RETURNS CONTROL TO ^^IDDT\\.  ^AT THIS POINT ^^IDDT\\ WILL HAVE
THE ^^LOADER\\'S SYMBOL TABLE.  ^IN ORDER TO SWITCH TO THE
SYMBOLS OF THE PROGRAM WHICH WAS LOADED, THE ;^S COMMAND SHOULD
BE TYPED.  ;^S TELLS ^^IDDT\\ TO LOOK FOR A STANDARD SYMBOL TABLE
POINTER IN LOCATION 116 (.^^JBSYM\\).  ^IF THE USER HAS MERGED
IN A FILE WHICH CONTAINS ITS OWN SYMBOLS, HE MAY SWITCH TO THAT
TABLE BY TYPING _ A;^S_  WHERE "A" IS THE ADDRESS
OF THE LOCATION CONTAINING A POINTER TO THE NEW TABLE.

.PARAGRAPH
	;^O ^OBTAINS A SYMBOL FILE DIRECTLY INTO ^^IDDT\\ WITHOUT MODIFYING
THE USER'S MEMORY.  ^THE OLD SYMBOL TABLE IS REPLACED, AND A NEW
ENTRY VECTOR IS TAKEN ONLY IF THERE WAS NO OLD ONE.  ^THIS MAKES IT
POSSIBLE TO DEBUG ONE FILE WITH SYMBOLS OBTAINED FROM A DIFFERENT FILE.
.PARAGRAPH
	^SYMBOLS MAY BE WRITTEN OUT ON A SPECIFIED FILE BY USING THE
;^W COMMAND.  ^THIS SAVES THE SYMBOLS IN A WAY THAT THEY MAY
BE OBTAINED LATER WITH THE ;^O COMMAND.  ^ALONG WITH THE MAIN SYMBOL
TABLE, THE UNDEFINED SYMBOL TABLE IS SAVED IN SYMBOL FILES.
^ONE SHOULD BE CAREFUL THAT SYMBOL FILES AND CORE IMAGE (;^U) FILES
ARE KEPT PAIRED IF ANY UNDEFINED SYMBOLS EXIST.  ^EXECUTING
AN ^^GET  JSYS\\  ON A SYMBOL FILE WILL GET BOTH TABLES.
^THE DEFAULT FILE EXTENSION FOR SYMBOL FILES WRITTEN BY ^^IDDT\\
IS _ _.^^SYMBOLS\\.

.SKIP 1

^NOTE:  ^SYMBOLS ADDED TO OR DELETED FROM ^^IDDT\\'S SYMBOL TABLE
BY COMMANDS TO ^^IDDT\\ WILL NOT BE SEEN BY THE USER PROGRAM.

.PAGE
4.	^^EXEC\\-LIKE ^FEATURES

.PARAGRAPH
	^FOR CONVENIENCE, THE ^^EXEC\\ HAS SEVERAL COMMANDS WHICH
PROVIDE THE SAME SERVICES AS SOME ^^EXEC\\ COMMANDS.  ^THESE ARE:

.TAB STOPS 5 21
.RIGHT MARGIN 70
.NOFILL
^^
.SKIP 2
	;A		TYPES THE USER'S ADDRESS SPACE. (MEMSTAT)
.SKIP 1

	;F		DOES A FORKSTAT ON THE USER FORK.  (THIS
			FEATURE WILL BE OPERATIONAL AS SOON
			AS JSYS 166 IS IMPLEMENTED.)
	
.SKIP 1
	;Y		@GET

.SKIP 1
	;M		@MERGE

.SKIP 1
	;L		@RUN

.SKIP 1
	$$G		@START

.SKIP 1
	$$1G		@REENTER

.SKIP 1
	$$\\N^^G		@START AT\\ N-^^TH ENTRY VECTOR LOCATION

.SKIP 1
	$P		@CONTINUE

.SKIP 1
	;L		@LOADER

.SKIP 1
	;U		@SSAV 0 777     (I.E. "UNGET")

.SKIP 1
	;O		OBTAIN SYMBOL FILE -- NO EXEC EQUIVALENT
.SKIP 1
	;W		WRITE SYMBOL FILE -- NO EXEC EQUIVALENT
.SKIP 1

	;H		@QUIT (HALT, RETURN TO EXEC)


.LEFT MARGIN 0
.RIGHT MARGIN 60
.SKIP 1
.FILL
;W, ;M, ;Y, ;O, ;L, \\AND^^ ;U \\ASK FOR A FILE NAME
FROM THE USER. ^THE DEFAULT EXTENTION WILL BE _ _.^^SAV\\ _ OR
_ _.^^SYMBOLS\\ _ AS REQUIRED.
.PAGE
5.	^ACCESS ^CONTROL
.SKIP 1
.PARAGRAPH

.PARAGRAPH 5
^AN ^^EXEC\\-LIKE FEATURE HAS BEEN INCLUDED IN ^^IDDT\\ WHICH HAS NO ANALOGY
IN THE CURRENT ^^EXEC\\.  ^THIS IS THE  $^U  COMMAND ^^(UNPROTECT\\),
WHICH ALLOWS THE USER TO MANUALLY CHANGE THE PROTECTION ON VARIOUS
PAGES OF HIS FORK.   ^THIS COMMAND HAS SEVERAL FORMS:
.SKIP 1
.RIGHT MARGIN 70
.NOFILL

.TAB STOPS 5 22
	A<B$N^^U	 CHANGE PROTECTION ON PAGES\\ A
			^^THROUGH \\B^^ INCLUSIVE\\

	A$N^^U		CHANGE\\ PROTECTION OF PAGE A

	$N^^U		CHANGE PROTECTION OF THE CURRENT PAGE
			(WHERE	POINT "." IS)\\
.RIGHT MARGIN 60

.SKIP 1
.FILL
^N IS ALWAYS A THREE-BIT NUMBER (0-7).  ^THE 4-BIT MEANS ALLOW READ
ACCESS, THE 2-BIT SHOULD BE ON TO ALLOW WRITE ACCESS, AND THE 1-BIT
FOR EXECUTE ACCESS.  ^IF ^N IS NOT SPECIFIED AT ALL, IT WILL BE TAKEN AS
7. ^THUS,  THE COMMAND _ $^U_   FREES UP THE CURRENT PAGE, GIVING IT
READ, WRITE AND EXECUTE ACCESS.
.PARAGRAPH 5

$^U CHANGES THE PROTECTION ON PAGES OF THE USER'S FORK. ^IT
DOES NOT AFFECT THE PROTECTION OF A FILE PAGE WHICH MIGHT BE
MAPPED INTO THAT FORK.  ^BECAUSE IT IS SOMETIMES CONVENIENT TO
CHANGE THE CONTENTS OF FORK PAGES WHICH HAVE WRITE-PROTECTED
FILES MAPPED INTO THEM,  $^U COMMANDS WHICH ASK FOR WRITE ACCESS
WILL EITHER GET IT, OR WILL GET WRITE-COPY ACCESS.
.PARAGRAPH
^WHILE ^^IDDT\\ IS RUNNING, IT TEMPORARILY CHANGES THE ACCESS OF
EACH PAGE THAT IT MAPS TO HAVE READ, WRITE, AND EXECUTE
ACCESS.  ^THE USER'S ACCESS IS RESET WHEN THE PAGE IS MAPPED OUT.
^THIS ALLOWS ^^IDDT\\ TO INSERT BREAKPOINTS, RETRIEVE TRAPPING
INSTRUCTIONS, ETC. ^THE $^U COMMAND ALLOWS THE USER TO PROTECT
PAGES FROM HIS OWN PROGRAM BY EFFECTING A PERMANENT CHANGE IN
THE PAGE ACCESS.
.SKIP 2


6.	^RUBOUT
.PARAGRAPH 5

^^IDDT\\  ARMS THE ^^RUBOUT\\ BUTTON AS AN INTERRUPT CHARACTER.
^IF A USER PROGRAM HAS BEEN STARTED UNDER ^^IDDT\\,  PRESSING ^^RUBOUT\\ WILL
GRACEFULLY SUSPEND THAT PROCESS AND GIVE CONTROL TO ^^IDDT\\  WHICH
THEN TYPES A MESSAGE OF THE FORM   
.SKIP 1
.NOFILL
	^^XXX:FOO+5/   MOVE A,DAT+21\\
.FILL
.SKIP 1
^THE INTERRUPT IS UNDERSTOOD TO HAVE OCCURRED IMMEDIATELY BEFORE THIS
INSTRUCTION, AND THAT IF A $^P  (PROCEED) COMMAND IS TYPED, THIS
INSTRUCTION WILL BE THE NEXT ONE EXECUTED BY THE USER.

.PARAGRAPH
^^RUBOUT\\'S TYPED WHILE IN ^^IDDT\\ BEHAVE MUCH THE SAME AS THEY DO
IN NORMAL ^^DDT\\'S.  ^THAT IS, THE CURRENT COMMAND IS ABORTED. ^THIS
IS PARTICULARLY CONVENIENT FOR STOPPING LONG SEARCHES (^^$W, $N
\\AND^^ $^E COMMANDS)\\, WITH ^^IDDT\\ BECAUSE IT IS AN INTERRUPT AND DOES NOT HAVE
TO BE READ BY A ^^PBIN\\ TO INITIATE ACTION AS IT DOES WITH OLD-STYLE ^^DDT\\'S.
^^RUBOUT\\'S TYPED WHILE ^^IDDT\\ IS IN CONTROL CAUSE THE TERMINAL
OUTPUT BUFFER TO BE CLEARED.

.SKIP 2
7.	"^^GO\\" ^COMMANDS
.PARAGRAPH
^^IDDT\\ HAS SEVERAL VARIATIONS OF THE STANDARD $^G COMMAND
AVAILABLE.  ^^GO\\ COMMANDS WITH TWO ^^ALTMODES\\, SUCH
AS $$^G,  ^^FOO$$G\\, AND $$2^G, CAUSE THE USER'S PSEUDO INTERRUPT
SYSTEM TO BE CLEARED BEFORE THEY TAKE EFFECT.  ^IF THERE IS A
NUMBER BETWEEN THE ^^ALTMODE\\(S) AND THE  ^G, THIS NUMBER IS TAKEN
AS AN INDEX INTO THE ENTRY VECTOR OF THE USER'S FORK, AND
THE PROGRAM IS RESTARTED AS INDICATED BY THE CORRESPONDING
ENTRY VECTOR ELEMENT.  ^THUS, $$0^G  IS THE SAME AS THE
^^EXEC\\ COMMAND ^^"START"\\, WHILE $$1^G IS EQUIVALENT TO "^^REENTER".
T\\HE COMMAND  $$^G  IS AN ABREVIATION FOR $$0^G.

.PARAGRAPH
^ORDINARY ^^GO\\ COMMANDS STILL EXIST.  ^THEY LOOK LIKE  ^^FOO$G\\
AND  ^^BEGIN$$G.  T\\HE USER'S PROGRAM COUNTER IS STORED IN THE
"^^GO\\" REGISTER, WHICH IS NAMED $^G.  ^THIS CAN BE EXAMINED BY
COMMANDS SUCH AS   $^G/ .


.SKIP 2
8.	^CONTROL-^T
.PARAGRAPH
^THE USER MAY WISH TO DEBUG PROGRAMS (SUCH AS ^^TECO\\) WHICH
ASSIGN ^^RUBOUT\\ AS THEIR OWN TERMINAL INTERRUPT CHARACTER.  ^SO THAT
THE USER ALWAYS HAS A WAY TO GET BACK TO ^^IDDT\\,  ^^IDDT\\ HAS AN ALTERNATE
^^RUBOUT\\ OR "^^ESCAPE\\" CHARACTER.  ^INITIALLY THIS IS CONTROL-^T.  ^IT MAY
BE CHANGED BY USING THE ;^E COMMAND, WHICH ASKS THE USER TO TYPE IN
A NEW ESCAPE CHARACTER.  ^ALMOST ANY CONTROL CHARACTER WILL DO
INCLUDING NULL.

.PARAGRAPH
^THE ^^ESCAPE\\ CHARACTER BEHAVES EXACTLY AS ^^RUBOUT\\ DOES, BUT
ITS ONLY REAL USE IS TO CAUSE A TRANSITION FROM THE USER'S
PROGRAM TO ^^IDDT\\.  ^ONCE ^^IDDT\\ IS RUNNING, IT TEMPORARILY ACQUIRES
THE ^^RUBOUT\\ TERMINAL CODE FROM THE USER.

.PARAGRAPH
^IF THE ^^ESCAPE\\ CHARACTER IS CHANGED FROM _^^T TO SOMETHING ELSE,
THE ^^EXEC\\ WILL AUTOMATICALLY RESUME HANDLING _^^T INTERRUPTS IN THE
NORMAL WAY.

.PAGE
9.	^INTERFACE WITH THE ^^EXEC\\

.PARAGRAPH
^THE ^^EXEC\\ COMMAND ^^"FORK\\ N" MAY BE USED TO SWITCH THE
^^EXEC\\'S ATTENTION BETWEEN THE FORK CONTAINING ^^IDDT\\
AND THE ONE CONTAINING THE USER'S PROGRAM.  ^THIS MAY BE DONE FOR
THE PURPOSE OF DOING A ^^"MEMSTAT"\\ OR _^^T.  ^THE ^^EXEC\\
EXAMINE AND DEPOSIT COMMANDS (/ AND _\) ALSO PERTAIN TO
THE CURRENTLY SELECTED FORK.
.PARAGRAPH
^REGARDLESS OF WHICH FORK HAS BEEN SELECTED, A ^^"CONTINUE"\\ WILL
ALWAYS RESUME A _ _^^C _ .  ^IF THE USER HAS RETURNED TO THE ^^EXEC\\
BY TYPING ;^H TO ^^IDDT\\, ^^IDDT\\ MAY BE RESUMED BY A "^^CONTINUE\\".
^A ^^HALTF\\ IN THE USER'S PROGRAM WILL RETURN TO ^^IDDT\\.  ^IT MAY
BE CONTINUED BY A $^P TO ^^IDDT\\.


.SKIP 2
10.	^ZERO-ING CORE

.PARAGRAPH
^^THE $$Z COMMAND \\BEHAVES THE SAME AS IT DOES WITH OLD ^^DDT\\
EXCEPT THAT IF IT IS USED TO ZERO WHOLE PAGES, THEY ARE ^^PMAP\\-ED OUT
OF EXISTENCE, RATHER THAN BEING ACTUALLY CLEARED.   ^IF SUCH A PAGE
IS BROUGHT INTO EXISTENCE AGAIN BY A REFERENCE, IT WILL BE CLEARED
BY ^^TENEX\\ WHEN CREATED.

.PARAGRAPH
^IF A $$^Z COMMAND IS USED TO CLEAR ANY WORD(S) BETWEEN 700000
AND 712777, COMPATIBILITY CODE FOR THE USER IS DISMISSED.  ^ORDINARY
REGISTER OPERATIONS LIKE SLASH CAN BE USED TO EXAMINE OR MODIFY
 THE COMPATIBILITY CODE (^^PA1050\\) AS USUAL.

.PARAGRAPH

^THE ^ZERO COMMAND HAS BEEN GENERALIZED SO THAT IT CAN FILL CORE
WITH A SPECIFIC NUMBER.  ^TO FILL LOCATIONS 100 THROUGH 177 WITH
THE NUMBER 3, THE USER WOULD TYPE _ 100<177>$$3^Z.

.PAGE
11.	^INTERNAL ^REGISTERS

.PARAGRAPH
^^IDDT \\MAINTAINS SEVERAL "INTERNAL REGISTERS" WHICH MAY BE
MANIPULATED AS IF THEY WERE IN THE USER'S ADDRESS SPACE.  ^THESE
ARE LISTED BELOW, AND WILL BE DESCRIBED IN DETAIL IN
SUBSEQUENT SECTIONS.
.RIGHT MARGIN 70
.NOFILL
.TAB STOPS 5 12
.NOFILL
.SKIP 4
.SPACING 2
^^	$G	CONTAINS  FLAGS,,PC  FOR THE USER PROGRAM

	$M	MASK FOR SEARCHES

	$X	LOCATION FOR SPECIAL ^^EXECUTE

	$W	PAGER TRAP STATUS WORD AT MEMORY VIOLATION

	$W+1	PAGER WRITE DATA AT MEMORY VIOLATION

	$I	INTERRUPT CHANNELS WITH BREAKS WAITING

	$I+1	INTERRUPT CHANNELS ASSIGNED FOR USER

	$I+2	BREAKS IN PROGRESS WORD

	$I+3	0 IF USER'S INTERRUPT SYSTEM IS OFF. NON-0 OTHERWISE.

	$I+4	IDDT'S FORK HANDLE ON USER

	$I+5	SIXBIT OF SAVED USER SUBSYSTEM NAME\\
.SPACING 1
		(^THIS MAY BE MADE INACCESSIBLE IN THE FUTURE!)
.SKIP 1
	$N^B+K^^	BREAKPOINT REGISTERS.\\  N IS BETWEEN 1 AND 8
		INCLUSIVE (I.E., ^^IDDT\\ HAS EIGHT BREAKPOINTS), K IS
		BETWEEN 0 AND 6.  ^THUS THERE ARE SEVEN REGISTERS
		OF INFORMATION ASSOCIATED WITH EACH OF THE
		BREAKPOINTS.
.SKIP 1
.RIGHT MARGIN 60
.FILL
^AS AN EXAMPLE OF AN INTERNAL REGISTER REFERENCE, CONSIDER
LOOKING AT THE PROCEED COUNT OF BREAKPOINT 3:

.SKIP 1
^^		$3B+2/	105	3

.SKIP 1
T\\HE USER CHANGED THE PROCEED COUNT FROM 105 TO 3.

.PARAGRAPH
^^IDDT\\'S CURRENT LOCATION MAY BE INTERNAL TO ^^IDDT\\.
^THIS ALLOWS THE USER TO USE LINEFEED AND UP-ARROW TO LOOK AT INTERNAL
REGISTERS.  ^^IDDT\\ HAS SPECIAL ADDRESS PRINTING ROUTINES THAT
PRINT THINGS LIKE $^I+3  INSTEAD OF THIS ADDRESS IN
TERMS OF USER DEFINED SYMBOLS.

.PARAGRAPH
^ATTEMPTS TO DEFINE ADDRESS TAGS WHEN "POINT" IS AT AN ^^IDDT\\
INTERNAL REGISTER WILL BE GIVEN ^^IDDT\\'S UBIQUITOUS "?" ERROR.
^ALSO, ^^IDDT\\ WILL NOT ALLOW EXPRESSIONS WITH MORE THAN ONE MENTION
OF AN INTERNAL SYMBOL NAME.  ^THUS,  $^M+3  IS ALLOWED, BUT $^I+$^M IS NOT.



.SKIP 2
12.	^THE ^USER ^PROGRAM ^P^C

.PARAGRAPH 5
^THE INTERNAL REGISTER $^G CONTAINS THE USER'S^^ PC\\ AND ^^FLAGS\\.
^THIS IS DEFINED TO ALWAYS POINT AT THE NEXT EXECUTABLE INSTRUCTION.
^THE PROCEED COMMAND ($^P) SIMPLY STARTS THE USER AT THE ADDRESS
IN $^G.  ^ILLEGAL INSTRUCTION TRAPS BACK UP THE USER'S ^^PC\\ SO THAT IT
POINTS AT THE OFFENDING INSTRUCTION, IN HOPES THAT HE WILL REPAIR
IT AND PROCEED.  ^IN SUCH A CASE, THE REPAIRED INSTRUCTION WILL
BE EXECUTED FIRST.

.PARAGRAPH
$^G IS SETUP FROM THE ENTRY VECTOR AFTER EVERY ;^Y, ;^L,
AND ;^S COMMAND.  ^THUS, THE USER CAN ;^Y (YANK) A FILE AND
IMMEDIATELY START IT WITH A $^P.

.PARAGRAPH
^BIT 5 OF THE "^^GO\\" WORD $^G IS THE USER-MODE BIT
WHICH WILL NORMALLY BE ON IF $^G IS EXAMINED.  ^IT MAY BE OFF DUE TO AN
INTERRUPT OUT OF A ^^JSYS\\ OR AFTER AN ILLEGAL INSTRUCTION.
^BECAUSE THIS BIT IS ESSENTIAL TO THE RESTARTING OF THE USER'S FORK,
IT IS NOT LEFT ENTIRELY UNDER HIS CONTROL.  ^IN PARTICULAR, THE USER-MODE
FLAG MAY BE TURNED ON BY CHANGING THE CONTENTS OF $^G, BUT IT MAY NOT
BE TURNED OFF.  ^THIS MEANS THAT IF A ^^JSYS\\ (SUCH AS ^^GTJFN\\) HAS BEEN
INTERRUPTED, THE USERMODE FLAG TURNED ON, AND $^P TYPED, THAT THE
INTERRUPTED ^^JSYS\\ WILL BE RE-EXECUTED, RATHER THAN RESUMED.


.SKIP 2
13.	^SAVING A ^CORE ^IMAGE

.PARAGRAPH 5
^THE ;^U COMMAND ASKS FOR A FILE NAME AND THEN DOES AN
^^SSAVE\\ FROM PAGE 0 THROUGH PAGE 777 ON THIS FILE.
^THE ENTRY VECTOR WILL BE COPIED IF IT EXISTS.  ^IF NO ENTRY
VECTOR HAS BEEN DECLARED FOR THE FORK, ^^IDDT\\ WILL SET A
LENGTH ONE ENTRY VECTOR AT "."  .  ^A MESSAGE IS TYPED TO
THIS EFFECT.

.SKIP 2
14.	^SINGLE ^INSTRUCTION ^EXECUTES

.PARAGRAPH
^WHEN THE USER TYPES AN INSTRUCTION FOLLOWED BY $^X, ^^IDDT\\
PUSHES DOWN SEVERAL WORDS OF STATE INFORMATION, PLANTS THE INSTRUCTION
IN THE USER'S ADDRESS SPACE FOLLOWED BY THREE BREAKPOINTS, AND RESTARTS
THE USER AT THIS SPECIAL LOCATION.  ^WHEN THE INSTRUCTION COMPLETES,
^^IDDT\\ TYPES THE PROPER NUMBER OF $-SIGNS TO INDICATE HOW MANY TIMES
THE INSTRUCTION SKIPPED, AND POPS BACK THE SAVED STATE INFORMATION.
^THE STATE INFORMATION CURRENTLY INCLUDES THE
PROGRAM COUNTER ($^G), AND WHICH BREAKPOINT (IF ANY) THE
USER WAS STOPPED AT.  
^THIS MAKES IT POSSIBLE TO HIT A BREAKPOINT, EXECUTE AN INSTRUCTION
(WHICH MIGHT BE A ^^PUSHJ\\ TO A SUBROUTINE), AND THEN, UPON COMPLETION
OF THE $^X, DO A $^P TO PROCEED THE 
BREAKPOINT.

.PARAGRAPH
^^IDDT\\'S $^X REGISTER POINTS IN
THE USER'S ADDRESS
SPACE TO THE FOUR WORDS WHICH WILL BE USED FOR $^X COMMANDS.  $^X INITALLY
CONTAINS 777774 SO THAT THE TOP FOUR WORDS ARE USED.  ^THE USER IS FREE
TO CHANGE THE CONTENTS OF $^X.
.PARAGRAPH
^IF A ^^RUBOUT\\ HAS INTERRUPTED THE PROGRAM BEING DEBUGGED
WHILE IT WAS IN THE MIDDLE OF A ^^JSYS\\ -- USUALLY A "LONG" ^^JSYS\\
LIKE ^^SOUT\\ OR ^^PBIN\\ -- AND THEN AN INSTRUCTION EXECUTED WITH THE
$^X COMMAND, A $^P WILL NOT RESUME  THE ORIGINAL SEQUENCE BACK
IN THE MIDDLE OF THE INTERRUPTED ^^JSYS\\.  ^FLAG BIT 5 WILL BE
OFF IF THE INTERRUPT CAME OUT OF A ^^JSYS\\.  ^A PROCEED ($^P)
IMMEDIATELY AFTER A ^^RUBOUT\\, WITH NO INTERMEDIATE $^X WILL
ALWAYS RESUME EXACTLY AT THE INTERRUPT POINT
HOWEVER.
.SKIP 2
15.	^BREAKPOINTS
.PARAGRAPH
^ASSOCIATED WITH EACH BREAKPOINT ARE SEVEN INTERNAL REGISTERS.
^THE FIRST FOUR OF THESE ARE THE SAME AS THOSE IN OLDER ^^DDT\\'S, WHILE
THE LAST THREE HAVE BEEN ADDED.  ^TAKING BREAKPOINT THREE AS AN EXAMPLE:
.RIGHT MARGIN 70
.NOFILL

.SKIP 1
.TAB STOPS 5 13
^^	$3B/	TRACEVALUE,,LOCATION

.SKIP 1
	$3B+1/	0  OR CONDITIONAL BREAK SKIP

.SKIP 1
	$3B+2/	PROCEED COUNT (>0 \\FOR NORMAL, <0 FOR AUTO, 0 FOR NONE)
^^

.SKIP 1
	$3B+3/	0 OR STRING POINTER (\\FED TO ^^IDDT\\ WHEN THIS ^^BPT\\ BREAKS)
		***^NOT IMPLEMENTED YET***

.SKIP 1
^^	$3B+4/	SAVED INSTRUCTION WHILE USER IS RUNNING

.SKIP 1
	$3B+5/	0 OR ELSE -1 FOR AUTOPROCEED MODE

.SKIP 1
	$3B+6/	ASCII NAME OF THIS BREAKPOINT, USUALLY "$3B"
\\


.PARAGRAPH
.FILL
\\
.RIGHT MARGIN 60
.PARAGRAPH 5
^USUALLY THESE VALUES ARE CHANGED ONLY BY SETTING AND
CLEARING BREAKPOINTS WITH THE $^B COMMAND.  IF HE WISHES, THE USER
MAY CHANGE THESE QUANTITIES.  ^FOR INSTANCE, IF HE
WANTS HITS ON BREAKPOINT THREE TO PRINT AS
^^
.SKIP 1
		HELP>>	FOO+23
.SKIP 1
\\
HE WOULD TYPE THE FOLLOWING:
^^
.SKIP 1
		$3B+6!	"/HELP/

.SKIP 2
\\
^THIS STORES THE ^^ASCII\\ STRING FOR THE NEW NAME IN THE PRINT NAME
CELL OF BREAKPOINT THREE.

.PARAGRAPH
^PROCEEDING AFTER A BREAKPOINT HIT HAPPENS MUCH IN THE SAME
WAY AS A SINGLE INSTRUCTION EXECUTE COMMAND ($^X).  ^AGAIN FOUR WORDS OF
MEMORY ARE WRITTEN INTO.  ^HOWEVER, IN THIS CASE THE FOUR WORDS
ARE THE INSTRUCTION AT THE BREAK LOCATION AND THREE
^^JRST\\'S TO THE THREE LOCATIONS FOLLOWING THE BREAK LOCATION.  ^THE
^^JRST\\'S ACCOUNT FOR POSSIBLE SKIPS BY THE BREAK INSTRUCTION.

.PARAGRAPH
^IF A BREAKPOINT IS HIT, AND THE USER CHANGES THE CONTENTS
OF $^G, AND THEN PROCEEDS (WITH $^P), THE BREAK INSTRUCTION
IS NOT EXECUTED.  ^CONTROL SIMPLY RESUMES AT THE NEW LOCATION
GIVEN BY $^G.  ^OLD ^^DDT\\'S EXECUTE THE INSTRUCTION UNDER THE BREAKPOINT,
AND THEN TRANSFER CONTROL TO THE NEW PLACE.


.SKIP 2
16.	^^JSYS\\ ^TYPEOUT ^FORMAT

.PARAGRAPH
^WHEN ^^IDDT\\ ATTEMPTS TO PRINT AN OPCODE 104 INSTRUCTION
SYMBOLICALLY, IT FIRST LOOKS FOR AN EXACT MATCH IN
THE USER'S SYMBOLS.  ^IF ONE IS FOUND, THE CORRESPONDING USER-SUPPLIED
NAME IS PRINTED.  ^OTHERWISE, ^^IDDT\\ CHECKS ITS OWN
INTERNAL ^^JSYS\\ SYMBOL TABLE (HOPEFULLY, THE SAME AS ^^JSYS\\'S DEFINED
IN ^^<SYSTEM>STENEX.MAC\\) FOR AN EXACT MATCH.  ^IF NONE IS FOUND IN EITHER PLACE,
THE INSTRUCTION WILL PRINT AS   ^^JSYS\\ 501,  I.E., "^^JSYS\\" AND ADDRESS.
.SKIP 2
17.	^OTHER ^FEATURES
.PARAGRAPH
^THE SEARCH COMMANDS ($^W, $^N, AND $^N) HAVE BEEN GENERALIZED
TO TAKE AN ARGUMENT WHICH SPECIFIES THE MAXIMUM NUMBER OF "FINDS" THAT
SHALL OCCUR BEFORE THE SEARCH WILL TERMINATE.  ^AN EXAMPLE IS:
.SKIP 1
.NOFILL
^^		FOO<BAR>QQZZ$5E
\\
.SKIP 1
.FILL
^THIS COMMAND WILL STOP AFTER TYPING FIVE INSTRUCTIONS LYING BETWEEN
LOCATIONS "^^FOO\\" AND "^^BAR\\" WHICH HAVE AN EFFECTIVE
ADDRESS OF "^^QQZZ\\".  
.PARAGRAPH
^INTERNAL REGISTER $^I+4 CONTAINS THE FORK HANDLE THAT ^^IDDT\\
USES TO REFERENCE THE USER.  ^THIS REGISTER IS WRITEABLE.

.PARAGRAPH
$^Q HAS THE VALUE OF THE LAST QUANTITY TYPED, AS ALWAYS.
$$^Q HAS THIS VALUE WITH HALVES SWAPPED.  ^THUS, ($$^Q)= WILL
TYPE THE SAME VALUE AS $^Q= WILL.

.PARAGRAPH
$^V IS THE VALUE OF THE LEFT HALF OF THE LAST QUANTITY TYPED.
$$^V IS THE SAME WITH THE SIGN EXTENDED.  ^THUS, ASSUMING THE LAST VALUE
TYPED TO BE  -3,,^^FOO ,  $V=\\  WOULD YIELD  0,,-3  WHEREAS, $$^^V=\\ WOULD
TYPE -3.
