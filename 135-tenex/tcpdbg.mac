	search	prolog
	ttitle	tcpdbg

	t1=1
	t2=2
	t3=3
	t4=4
	p1=5
	p2=6
	p3=7
	p4=10

	p=17

	intern	tcpdbi,tcpdbo,tcp32i,tcp32o,tcp36i,tcp36o
	extern	impinp,impoup

	rescd

tcpdbi::	0			;0 if no debug
tcpdbo::	0			;0 if no debug

	define	save4t,<
	push	p,t1
	push	p,t2
	push	p,t3
	push	p,t4
>

	define	rest4t,<
	pop	p,t4
	pop	p,t3
	pop	p,t2
	pop	p,t1
>

	define	save4p,<
	push	p,p1
	push	p,p2
	push	p,p3
	push	p,p4
>

	define	rest4p,<
	pop	p,p4
	pop	p,p3
	pop	p,p2
	pop	p,p1
>
	subttl	36 bit input/output routines

tcp36i::
	save4t				;save some ac's
	save4p
	move	p1,impinp		;get pointer
	hrroi	t1,[asciz/
36 Bit TCP input header follows:
/]
	psout
t36i1:
	hrroi	t1,[asciz/	/]	;tab
	psout
	movei	t1,.priou		;cty
	movei	t3,^d8			;octal
	move	t2,(p1)		;get header stuff
	nout	
	jfcl
	hrroi	t1,[asciz/
/]					;crlf
	psout
	aobjn	p1,t36i1		;loop until done
	rest4p
	rest4t				;restore ac's
	ret				;return

tcp36o::
	save4t				;save some ac's
	save4p
	move	p1,impoup		;save pointer
	hrroi	t1,[asciz/
36 Bit TCP output header follows:
/]
	psout
	jrst	t36i1			;join common code
	subttl	32 bit input/output routines

tcp32i::
	save4t			;save some ac's
	save4p
	move	p2,impinp		;save pointer
	hrroi	t1,[asciz/
Input datagram follows:
/]
	psout
t32i1:
	move	p1,[point 8,0]		;make p1 an 8 bit pointer
	hrr	p1,(p2)			;build byte pointer
	move	p2,(p2)			;get length
	lsh	p2,-4			;shift the 16 bit address
	andi	p2,177777		;save only 16 bits
	movns	p2,p2			;build aobjn pointer
	movei	p3,-4			;counter for crlf
t32i2:
	movei	t1,.priou		;cty
	ildb	t2,p1			;grab byte
	movei	t3,^d8			;octal
	nout
	jfcl
	hrroi	t1,[asciz/	/]	;tab
	psout
	aosl	p3			;skip if four bytes
	jrst	[hrroi	t1,[asciz/
	/]				;cr-tab
		psout
		movei	p3,-4		;reset counter
		jrst	.+1]		;rejoin common code
	aobjn	p2,t32i2		;loop
	hrroi	t1,[asciz/
/]
	psout
	rest4p
	rest4t				;restore ac's
	ret

tcp32o::
	save4t				;save some ac's
	save4p
	move	p2,impoup		;save pointer
	hrroi	t1,[asciz/
Output datagram follows:
/]
	psout
	jrst	t32i1			;join common code
	end
