;<BATCH>VACCT.MAC;1     2-SEP-75 12:50:01    EDIT BY LIEB
;SEPARATED INTO A SEPARATE ASSEMBLY
	TITLE VACCT
	SUBTTL JIM LIEB, SUMEX PROJECT STANFORD MED. SEPT 75


	SEARCH STENEX

INTERN $VACCT,$GDACC

;THESE ROUTINES ONLY FOR 131 TENEX

;ROUTINES TO EMULATE VACCT AND GDACC JSYS'S	
;
;$VACCT CALLED W/ PUSHJ P,$VACCT
;	1/USER #, -1 MEANS SELF (CONN DIR)
;	2/ACCT DESIGNATOR, 5B2+NUMBER OR DSP
;
;RETURNS	+1	FAIL TO MATCH
;		+2	USER ACCT PAIR MATCH
;			OR UACHK UNRUNNABLE
;			OR WHEEL /OPERATOR
;
;$GDACC CALLED W/ PUSHJ P,$GDACC
;	1/ E FOR STRING ACCT (DSP)
;	2/ USER ACCT #, -1 FOR SELF (CONN DIR)
;
;RETURNS	+1	FAILURE DOESN'T RETURN CODES
;		+2	SUCCESS ACCOUNT STRING POINTER IN AC1
;
; AC DEFINITIONS
P=17


$VACCT:	PUSH	P,1		;USER NUMBER
	PUSH	P,2		;ACCOUNT DESIGNATOR
	PUSH	P,3
	MOVEI	1,400000	;THIS FORK
	RPCAP
	TRNE	3,1B18+1B19	;WHEEL OR OP?
	JRST [	POP	P,3	
		JRST $VACC2]	;SKIP RETURN
	POP	P,3
	MOVE	2,-1(P)		;GET USER NUMBER
	SETZM	UACBLK
	MOVE	1,[UACBLK,,UACBLK+1]
	BLT	UACBLK+17	;CLEAR AC ARG BLOCK
	CAME	2,[-1]		;SELF?
	JRST $VACC1		;NO
	PUSH	P,3
	PUSH	P,4
	GJINF			;GET JOB INFO CONN DIR IN 2
	POP	P,4
	POP	P,3
$VACC1:	HRROI	1,UACBLK	;FIRST 8 AC'S CONTAIN DIRST
	DIRST
	JRST $VAFXT		;DO FAIL RETURN
	MOVE	1,0(P)		;GET ACCT DESG
	CAML	1,[500000,,0]
	CAMLE	1,[577777,,-1]	;IS IT NUMERIC?
	JRST $VASTR		;NO STRING
	MOVEM	1,UACBLK+10	;NUMERIC DESIG IN AC10
	MOVEI	1,UACBLK	;POINT TO ARG BLOCK
	MOVEI	2,1		;START AT NUMERIC ENTRY POINT
	PUSHJ	P,RUNUAC
	JRST $VACC2		;FORK FAILED TO RUN
	JRST $VACC3		;FORK RAN, CHECK RESULT
;
$VASTR:	MOVEI	2,[POINT 7,UACBLK+10] ;POINT TO AC10-17 FOR ACCT STRING
	TLC	1,-1		;DSP?
	TLCN	1,-1		;SKIP IF NOT DSP
	HRLI	1,440700	;CONVERT TO STRING POINTER
	PUSH	P,3
	PUSH	P,4
	MOVNI	4,^D39		;WE ONLY TAKE 39 CHARS
$VALUP:	ILDB	3,1
	IDPB	3,2
	CAIE	3,0		;SKIP IF NULL BYTE
	AOJL	4,$VALUP	;GET 39 CHARS MAX
	POP	P,4
	POP	P,3
	MOVEI	1,UACBLK	;POINT TO AC BLOCK
	MOVEI	2,2		;ENTRY POINT FOR STRING
	PUSHJ	P,RUNUAC
$VACC2:	AOSA	-2(P)		;RUN FAILED SAY OK
$VACC3:	CAIE	1,0		;FIND A MATCH?
$VAFXT:	JRST [	POP	P,2	
		POP	P,1
		POPJ	P,]
	JRST $VACC2		;FOUND MATCH, DO SKIP RETURN
$GDACC:	PUSH	P,1		;DSP FOR ACCT
	PUSH	P,2		;USER NUMBER
	SETZM	UACBLK
	MOVE	1,[UACBLK,,UACBLK+1]
	BLT	1,UACBLK+17	;CLEAR AC ARG BLOCK
	CAME	2,[-1]		;SELF?
	JRST $GDAC1		;NO
	PUSH	P,3
	PUSH	P,4
	GJINF			;GET CONN DIR NUM IN 2
	POP	P,4
	POP	P,3
$GDAC1:	HRROI	1,UACBLK	;POINT TO AC0-7	FOR DIRST
	DIRST
	JRST $GDFXT		;DO FAIL RETURN
	MOVEI	1,UACBLK	;POINT TO AC BLOCK
	SETZ	2,		;0 ENTRY POINT FOR DEFAULT
	PUSHJ	P,RUNUAC
	CAIA			;NON-SKIP IF FORK FAILED
	CAIE	1,0		;DID WE FIND DEFAULT?
	JRST $GDFXT		;NO, NON-SKIP
	PUSH	P,3
	PUSH	P,4
	MOVNI	3,^D39		;39 CHARS MAX
	HRRZ	2,UACBLK+2	;GET POINTER REL TO AC BLOCK
	ADD	2,[POINT 7,UACBLK] ;MAKE IT A USEFULL POINTER
	MOVE	4,-3(P)		;GET USERS POINTER
	HRLI	4,440700	;MAKE E A POINTER
$GDACL:	ILDB	1,2
	IDPB	1,4
	CAIE	1,0		;SKIP IF  A NULL
	AOJL	3,$GDACL
	POP	P,4
	POP	P,3
	AOS	-2(P)		;DO SKIP RETURN
$GDFXT:	POP	P,2
	POP	P,1
	POPJ	P,


;RUNS UACHK PROGRAM DOES NON-SKIP RETURN ON PROGRAM FAILURE
;	1/ POINTER TO AC ARG BLOCK
;	2/ ENTRY VECTOR OFFSET
;	   0=DEFAULT, 1=NUMERIC CHECK, 2=STRING CHECK

RUNUAC:	PUSH	P,1		;ARG POINTER
	PUSH	P,2		;ENTRY VECTOR
	MOVSI	1,(1B2+1B17)	;OLD FILE, SHORT FORM
	HRROI	2,[ASCIZ /<SYSTEM>UACHK.SAV/]
	GTJFN
	JRST [	POP	P,2
		POP	P,1
		POPJ	P, ]	;DO FAIL RETURN IF CANT FIND FILE
	PUSH	P,1		;JFN
RUNUA1:	MOVSI	1,(1B1)		;SET CAP DONT START
	CFORK
	JRST [	MOVEI	1,^D1000
		DISMS		;TRY AGAIN IN 1 SEC
		JRST RUNUA1]
	PUSH	P,1		;FORK HANDLE
	MOVSI	1,0(1)		;MOVE HANDLE TO LH
	HRR	1,-1(P)		;AND PUT JFN IN RH
	GET
	MOVE	1,(P)
	MOVE	2,-3(P)		;GET POINTER TO ARG BLOCK
	SFACS			;LOAD ACS
	MOVE	2,-2(P)		;GET VECTOR OFFSET
	SFRKV			;START IT
	WFORK			;WAIT FOR IT
	FFORK			;FREEZE IT
	MOVE	2,-3(P)		;POINT TO ARG BLOCK
	RFACS			;COPY BACK THE ACS
	RFSTS			;GET FORK STATUS
	TLZ	1,(1B0)		;KILL THE FREEZE BIT
	CAME	1,[2,,0]
	TLOA	2,-1		;INVOL TERMINATE
	TLZ	2,-1		;CLEAN HALT
	POP	P,1		;GET FORK HANDLE
	KFORK			;GET RID OF IT
	POP	P,1		;GET THE JFN
	RLJFN			;RELEASE IT
	JFCL			;SHOULDNT HAPPEN!!??
	MOVE	1,-1(P)		;POINT TO BLOCK
	MOVE	1,1(1)		;WE WANT THE AC1
	CAIL	2,0		;INVOL TERMINATE?
	CAILE	1,0		;OR PROGRAM ERROR?
	SOS	-2(P)		;DO NON-SKIP
	POP	P,2
	SUB	P,[1,,1]	;POP STACK AGAIN
	AOS	(P)
	POPJ	P,

;STORAGE REQUIRED

UACBLK:	BLOCK 20		;AC ARG BLOCK


	END 

