;ORIGINAL CODE BY LARSON@ECL
;ADDITIONS BY LIEB@SUMEX
;ADDITIONS BY MOUTON@SRI
;ADDITIONS BY UNTULIS@SRI
;additions of 131 stuff by lieb@sumex
;ADDITIONS BY RINDFLEISCH@SUMEX (3/76)
;IMSSS LINE LABEL OPTIONS BY RON ROBERTS@IMSSS (8/76)

MAJORV==2	;VERSION 2 IS THE MULTIFORK
MINORV==7

TNX131==1	;1=WE HAVE TO LIVE WITH 1.31 TENEX
LPTLOG==0	;LOG FILE DEFAULT IS CTL.LOG
STRACT==1   	;STRING ACCOUNTS
NOTDEF==0	;DEFAULT = NOTIFY IF 1 ELSE MESSAGE
IMSLOG==1	;ACTIVATE IMSSS LOG LABEL STUFF - ADDS TO Q ENTRY LENGTH
SEEJBS==1	;ALLOWS MORTALS TO SEE ALL JOBS IN THE Q
FDBSEQ==0	;IF 0, USE THE FILE JOB-SEQUENCE.LOCK FOR DETERMINING
		;NEXT JOB NUMBER, OTHERWISE THE Q FDB USER WORD
SKUSER==1	;FORCE BATCH JOBS TO QUEUE 2
SRISYS==1	;CHOICE IN GETTING LOAD AV
SRIPTY==0	;FIND PSEUDOTTY'S AT SRI
DUMPFG==-1	;0 = DON'T DUMP, -1 = DUMP IMAGE
SUMEX==1	;SET'S <DEL> TO DELETE CHAR AND USES DELCH JSYS FOR
		;DISPLAYS IN SUBMIT
IMSSS==0	;IMSSS PARAMETER CONVENTIONS

IFN	SUMEX,<
PTYRNG==-10,,101	;RANGE OF PTY'S AT SUMEX
	>
IFN	IMSSS,<
PTYRNG==-15,,330	;RANGE OF PTY'S AT IMSSS
STRACT==0
NOTDEF==1
	>

GDDT==0		; DON'T GET DDT
IFNDEF	DBGFIL,<
DBGFIL==0	; DEBUG FILE
	>

DEFRTM==^D60*^D60*^D1000	;DEFAULT RUNTIME IS 60 MIN
DEFETM==^D6*^D60*^D60*^D1000	;DEFAULT CONNECT TIME IS 6 HRS
DEFLLN==^D1000			;DEFAULT LOG LINES IS 1000
STPRM==^D6*^D3600		;Start of prime time (6:00)
ENDPRM==^D18*^D3600		;End of prime time (18:00)
MAXJBS==2			;Maximum # of jobs/user during prime time
MAXRST==3			;Maximum # of job restarts
MBTRST==2			;MAXIMUM NUMBER OF BUG-GENERATED BATCH
				;RESTARTS PER DAY
NJOBS==^D90			;TABLE SIZE FOR JOBDIR - JOBS IN SYSTEM
MXCHG==^D20			;MAX # OF JOBS THAT CAN CHANGE #'S AT ONCE
NQJBS==^D511			;NUMBER OF JOB SLOTS IN QUEUE, LEQ 777(OCTAL)
NJBWRD==<NQJBS/^D36>+1		;NUMBER OF WORDS IN JOB ENTRY BIT TABLE
MXILIN==0			;NUMBER OF INFERIOR ILLEGAL INSTRUCTION
				;TRAPS BEFORE FATALITY
IMPHLT==^D10*^D60		;INTERVAL BEFORE AN IMPENDING HALT TO
				;UNLOAD JOBS - 10 MIN
DAYSIZ==<^D10000/5>		;NUMBER OF WORDS MAXIMUM IN DAYFILE

IFN TNX131, <MAXLA==4.0>	;If under TENEX 131, maximum load average
				;to start batch job (unless a wheel)

IFE DBGFIL, <DBUGFG==1>	;RELOAD INSTEAD OF RESTART
IFN DBGFIL, <DBUGFG==2>	;RELOAD FROM <BATCH>TBATCON.SAV

;QUEUE ENTRY FORMAT DESCRIPTIONS
;THE FOLLOWING ARE THE DISPLACEMENTS FOR THE DIFFERENT
;DATA FIELDS IN A QUEUE ENTRY

QQQ==0					;START VALUE FOR COUNTER

	DEFINE	QE(NAM,LEN<1>)<
NAM==QQQ				;ASSIGN VALUE
QQQ==QQQ+LEN				;ADJUST COUNTER
	>				;END MACRO

	QE(USRDIR)			;DIRECTORY NUMBER OF USER TO LOG
					;JOB IN UNDER
IFE	STRACT,<
	QE(USRACT)			;ACCT # TO USE WITH LOGIN
	>
IFN	STRACT,<
	QE(USRACT,8)			;ACCT STRING TO USE WITH LOGIN ***SRI-AIC***
	>
	QE(PRIOR)			;PRIORITY FLAG (.LE.0 - BATCH)
	QE(STRTED)			;ID OF THE BATCON WHO STARTED IT
	QE(JOBSTT)			;TIME THIS BATCH JOB WAS STARTED
	QE(RESTRT)			;USER RESTART COUNT
	QE(ENTERD)			;TIME JOB SUBMITTED
	QE(AFTER)			;TIME JOB MUST RUN AFTER
	QE(LOADAV)			;LOAD AVERAGE BELOW WHICH JOB CAN BE STARTED
	QE(ETIME)			;MAXIMUM ELAPSED TIME JOB CAN RUN
	QE(RTIME)			;MAXIMUM CPU TIME JOB CAN RUN
	QE(LOGLNS)			;MAX # LINES JOB CAN WRITE ON LOG FILE
	QE(MESAG)			;SEND MESSAGE TO SUBMITTER FLAG
	QE(NOTFY)			;SEND NOTIFY MESSAGE TO SUBMITTER
	QE(BJOBNO)			;BATCH-JOB NUMBER
	QE(CTLFIL,^D26)			;NAME (<DIR>NAM.EXT;VERS) OF CTL FILE
	QE(LOGFIL,^D26)			;NAME OF LOG FILE
IFN	IMSLOG,<
	QE(LINLAB)			;LINE LABELING PARAMETERS
					; =  0  LABEL EACH LINE AT START
					; = -1  SUPPRESS ALL LABELS
					; = 0,,400000  LABEL AT SUBSYS CHANGE
					; = T(LABELS),,C(LINES)  LABEL AT
					;     SUBSYS CHANGES OR IF MORE THAN
					;     T(LABELS) SEC SINCE LAST LABEL
					;     OR IF MORE THAN C(LINES) LOG
					;     LINES SINCE LAST LABEL
	>	;END OF IMSLOG CONDITIONAL

QESIZE==QQQ				;LENGTH OF A QUEUE ENTRY

	PURGE	QE,QQQ			;DON'T NEED THESE ANYMORE

COMCOD==PRIOR				;INDEX TO COMMAND CODE
COMNAM==USRACT				;INDEX TO COMMAND STRING
COMPAR==STRTED				;INDEX TO COMMAND PARAMETER


;FLAGS AND MACROS FOR SUBMIT AND CONTROL COMMAND DISPATCH

ENASEE==(1B0)			;MUST BE ENABLED TO SEE
ENADO==(1B1)			;MUST BE ENABLED TO DO
WHLSEE==(1B2)			;MUST BE A WHEEL/OPER TO SEE
WHLDO==(1B3)			;MUST BE A WHEEL/OPER TO DO

CQQ==0
DEFINE	TE(ADR,STR,FLAGS<0>)<
CQQ==CQQ+1
	[ASCIZ \STR\]
	FLAGS,,ADR
>

;FOLLOWING IS A CONTROL COMMAND AND DISPATCH LIST FOR BATCON AND THE
;OPERATOR CONTROL PROGRAM BATCTL

DEFINE	CTLLST<	
CQQ==0
	TE(.AFTER,<AFTER>,WHLSEE!WHLDO)		;AFTER DATE AND TIME
	TE(.CLEAR,<CLEAR>,WHLSEE!WHLDO)		;CLEAR BATCON AND NO ENTRY
	TE(.DEFER,<DEFER>,WHLSEE!WHLDO)		;STOP AND DEFER JOB (PARAM)
	TE(.BDUMP,<DUMP>,WHLSEE!WHLDO)		;SNAPSHOT DUMP OF BATCON
	TE(.ENTFG,<ENTFLG>,WHLSEE!WHLDO)	;SET ENTFLG = PARAM
	TE(.EXIT,<EXIT>,WHLSEE!WHLDO)		;EXIT BATCTL
	TE(.FREEZ,<FREEZE>,WHLSEE!WHLDO)	;FREEZE FORK RUNNING JOB (PARAM)
	TE(.GOTO,<GOTO>,WHLSEE!WHLDO)		;GOTO BATCON ADDRESS (PARAM)
	TE(.BHALT,<HALT>,WHLSEE!WHLDO)		;FREEZE BATCON INFERIOR FORKS
						;AND SET NO ENTRY
	TE(.RUNIN,<IN>)				;DO BATCTL TASK IN XXX HRS, MIN, OR SEC
	TE(.LIST,<LIST>,WHLSEE!WHLDO)		;LIST CONTROL COMMAND PARAMETERS
	TE(.MELT,<MELT>,WHLSEE!WHLDO)		;MELT FORK RUNNING JOB (PARAM)
	TE(.PURGE,<PURGE>,WHLSEE!WHLDO)		;PURGE JOB (PARAM) FROM Q
	TE(.BRLOD,<RELOAD>,WHLSEE!WHLDO)	;RELOAD BATCON
	TE(.RESET,<RESET>,WHLSEE!WHLDO)		;RESET JOB (PARAM) IN Q
	TE(.BRSTR,<RESTART>,WHLSEE!WHLDO)	;RESTART BATCON
	TE(.BRESM,<RESUME>,WHLSEE!WHLDO)	;RESUME HALTED BATCON
	TE(.START,<START>,WHLSEE!WHLDO)		;START JOB (PARAM)
	TE(.BSTAT,<STATUS>,WHLSEE!WHLDO)	;STATUS OF BATCON ON TTY0
	0					;END OF LIST

MCTLCD==CQQ-1
>


	LALL				;NOW WE WANT TO SEE EXPANSIONS
;AC DEFINITIONS
ZZ==0
A==1
B==2
C==3
D==4
E==5
F==6
P=17

FDBVER==7			;VERSION NUMBER IN FDB
FDBUSW==24			;USER SETTABLE WORD

;OPDEFS
OPDEF	QOPENF	[PUSHJ P,.OPENF]		;RETRIES OPENING FILES

;MACRO DEFINITIONS
	DEFINE OPENM<
;ROUTINE TO OPEN A FILE
;ON ENTRY	A  = VALID JFN
;		B  = OPENF BIT SPECIFICATIONS
;
;RETURNS	+1  NON-TIME OUT ERROR (CODE IN A)
;		+2  FILE BUSY TIME OUT
;		+3  OPEN SUCCESSFUL
;
;IF THE FILE IS BUSY, A 3 SEC DELAY IS ISSUED AND THE OPEN RETRIED UP
;TO 20 TIMES

	PUSH	P,C			;GET A REGISTER FOR COUNTING
	PUSH	P,A			;SAVE JFN
	MOVEI	C,^D20			;MAXIMUM NUMBER OF RETRIES
OPENF1:	HRRZ	A,0(P)			;PUT JFN IN A
	OPENF				;TRY IT
	JRST	OPENF4
	SKIPGE	DETSW			;IS JOB DETACHED?
	JRST	OPENF2			;YES, JUST RETURN +3
	CAIL	C,^D20			;ANY BUSY CYCLES?
	JRST	OPENF2			;NO, RETURN +3
	HRROI	A,[ASCIZ /GO]
/]
	PSOUT				;YES, FINISH BUSY MSG
	MOVE	A,0(P)			;RESTORE SUCCESSFUL JFN

OPENF2:	AOS	-2(P)			;SKIP RETURN +3
	AOS	-2(P)

OPENF3:	POP	P,C			;CLEAR JFN FROM STACK
	POP	P,C			;RESTORE REG C

	POPJ	P,			;RETURN TO CALLER

OPENF4:	CAIE	A,OPNX9			;BUSY?
	JRST	OPENF3			;NO, RETURN +1
	SKIPGE	DETSW			;YES, ARE WE DETACHED?
	JRST	OPENF6			;YES, JUST WAIT A BIT
	CAIE	C,^D20			;NO, IS THIS THE FIRST CYCLE?
	JRST	OPENF5			;NO, JUST PUT ANOTHER "-"
	HRROI	A,[ASCIZ /   [BUSY/]
	PSOUT
OPENF5:	MOVEI	A,"-"
	PBOUT

OPENF6:	MOVEI	A,^D3000		;3 SECOND DELAY
	DISMS
	SOJG	C,OPENF1		;TRY AGAIN IF ANY RETRIES LEFT

OPENF7:	AOS	-2(P)			;TIME OUT - RETURN +2
	JRST	OPENF3

	>


	DEFINE CRSHUS<			;;STRING POINTERS OF PERSONS TO RECEIVE CRASH MESSAGES
IFE DBGFIL,<
IFN SUMEX,<
	POINT 7,[ASCIZ /RINDFLEISCH/]
	POINT 7,[ASCIZ /KAHLER/]
	POINT 7,[ASCIZ /COWER/]
	>	;END OF SUMEX
IFN IMSSS,<
	POINT 7,[ASCIZ /RON/]
	POINT 7,[ASCIZ /SCHULZ/]
	POINT 7,[ASCIZ /OPER/]
	>	;END OF IMSSS
	>	;END OF DBGFIL

IFN DBGFIL,<
IFN SUMEX,<
	POINT 7,[ASCIZ /RINDFLEISCH/]
	>	;END OF SUMEX
IFN IMSSS,<
	POINT 7,[ASCIZ /RON/]
	>	;END OF IMSSS
	>	;END OF DBGFIL
	>	;END OF CRSHUS
