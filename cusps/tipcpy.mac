;<SOURCES>TIPCPY.MAC;2     8-AUG-75 11:15:03    EDIT BY LIEB
;ADDED RUTGERS,ALOHA, AND TYMSHARE
;<LEVIN>TIPCPY.MAC;14    15-FEB-73 13:20:31	EDIT BY LEVIN
;<LEVIN>TIPCPY.MAC;13    15-FEB-73 13:15:20	EDIT BY LEVIN
;<LEVIN>TIPCPY.MAC;8    25-OCT-72 14:36:22	EDIT BY LEVIN
;EDITED TO PROVIDE PAGING AND HEADING OPTIONS
	TITLE	TIPCPY
	SUBTTL	BOB THOMAS, MODIFIED BY J. B. LEVIN

;PROGRAM TO COPY AN ASCII FILE TO A TIP PORT

	EXTERN	NTGJFN,NTOPNF

MLON
SEARCH STENEX

; -- DEFINE AC'S
AC0==0
AC1=1
AC2=2
AC3=3
AC4=4
AC5=5
AC6=6	;LINE POSITION
AC7=7	;PAGE POSITION
AC10=10
AC11=11
AC12=12
AC13=13
AC14=14
AC15=15
AC16=16
AC17=17
P=17

TIPCPY:	RESET
	MOVE	P,[XWD -30,STACK]
TIPCP1:	HRROI	AC1,[ASCIZ /
TIP NAME: /]				;READ TIP NAME
	PSOUT
	SETZ	AC1,
	HRROI	AC2,M1
	PUSHJ	P,INEDIT
	JRST	XTP1
	JRST	TIPCP1
	PUSHJ	P,GETTIP
	JRST	XTP1
	MOVEM	AC1,TIPNUM

TIPCP2:	HRROI	AC1,[ASCIZ /
TIP PORT #: /]				;READ PORT NUMBER
	PSOUT
	HRRZI	AC1,100
	HRRZI	AC3,^D10
	NIN
	JRST	XTP2
	LSH	AC2,^D16
	ADDI	AC2,2			;CORRESPONDING SOCKET IS
	MOVEM	AC2,TIPSKT		;(2*PORT)0002

TIPC7A:	HRROI	AC1, [ASCIZ /
FORMFEED OVER PERFORATIONS? /]
	PSOUT
	SETZM	FORMFG
	HRRZI	AC1,100
	CFIBF
	PBIN
	CAIN	AC1,"N"
	JRST	TIPC7B
	CAIE	AC1,"Y"
	JRST	XTP7A
	SETOM	FORMFG
TIPC7B:	HRROI	AC1,[ASCIZ /
HEADINGS? /]
	PSOUT
	SETZM	HEADFG
	HRRZI	AC1,100
	CFIBF
	PBIN
	CAIN	AC1,"N"
	JRST	TIPCP7
	CAIE	AC1,"Y"
	JRST	XTP7B
	SETOM	HEADFG
TIPCP7:	HRROI	AC1,[ASCIZ /
FILE: /]				;READ FILE NAME
	PSOUT
	HRLZI	AC1,120003
	MOVE	AC2,[XWD 100,101]
	GTJFN
	JRST	XTP3
	MOVEM	AC1,FILJFN
	SETZM	PAGENO
	SETZM	PAGSEG
	HRRZI	AC1,37
	PBOUT
	PBOUT

	MOVEI	AC2,101			;GET JFN FOR TIP CONNECTION
	MOVE	AC3,TIPNUM
	MOVE	AC4,TIPSKT
	PUSHJ	P,NTGJFN
	JRST	XTP4
	MOVEM	AC1,TIPJFN

	MOVE	AC2,[XWD 102400,100000]	;OPEN TIP CONNECTION
	HRRZI	AC3,^D10000		;PORT ASSUMED IN "WILD" STATE
	HRRZI	AC4,^D500
	PUSHJ	P,NTOPNF
	JRST	XTP5

	MOVE	AC1,FILJFN
	MOVE	AC2,[XWD 70000,200000]
	OPENF
	JRST	XTP6

	HRRZ	AC1,TIPJFN		;PRINT HEADER
	HRRZI	AC2,14			;SEND FORM FEED
	BOUT
	HRRZI	AC6,5

TIPCP8:	PUSHJ	P,OUTHED
	SOJG	AC6,TIPCP8
	HRRZ	AC1,FILJFN		;DETERMINE LENGTH OF FILE
	SETO	AC2,
	SFPTR
	JRST	.+1			;SFPTR "CAN'T" FAIL
	RFPTR
	SETZ	AC3,			;IF RFPTR FAILS DON'T READ
	MOVE	AC3,AC2
	SETZ	AC2,
	SFPTR
	JRST	.+1			;SFPTR "CAN'T FAIL"

	JUMPE	AC3,TIPCP9
	JRST	GOTFF		;TOP OF NEW PAGE.

TIPCLP:	HRRZ	AC1,FILJFN		;READ CHAR FROM FILE
	BIN
	CAIN	AC2,37			;IF NL SEND CR LF
	JRST	[ HRRZ AC1,TIPJFN
		  HRRZI 2,15
		  BOUT
		  HRRZI 2,12
		  BOUT
		  PUSHJ P,PAGTST
		  JRST TIPCL1 ]
	CAIN	AC2,15			;CR?
	JRST	[ HRRZ AC1,TIPJFN
		  BOUT
		  SETZ AC6,
		  HRRZ AC1,FILJFN
		  BIN
		  CAIE AC2,12
		  AOJ AC6,
		  HRRZ AC1,TIPJFN
		  BOUT
		  CAIN AC2,12
		  PUSHJ P,PAGTST
		  JRST TIPCL1 ]
	CAIN	AC2,11			;INTERPRET TABS INTO SPACES
	JRST	TIPTAB
	CAIN	AC2,14
	JRST	GOTFF			;TIME FOR NEW PAGE
	HRRZ	AC1,TIPJFN
	AOJ	AC6,
	BOUT				;SEND CHAR TO TIP
TIPCL1:	SOJG	AC3,TIPCLP		;REPEAT UNTIL EOF

TIPCP9:	HRRZ	AC1,TIPJFN
	HRRZI	AC2,14			;FORM FEED AT END OF FILE
	BOUT
	HRRZI	AC2,21			;EMPTY CONNECTION BUFFER
	MTOPR
	HRRZ	AC1,FILJFN		;CLOSE THE FILE
	CLOSF
	JRST	.+1
	HRRZI	AC1,^D5000		;WAIT TO ALLOW TIP TO
	DISMS				;PRINT LAST OF FILE
	HRRZ	AC1,TIPJFN
	CLOSF				;CLOSE CONNECTION TO THE TIP
	JRST	.+1

	HRROI	AC1,[ASCIZ /

AGAIN ? /]
	PSOUT
TIPCP3:	HRRZI	AC1,100
	CFIBF
	PBIN
	CAIN	AC1,"N"
	JRST	TIPCP6
	CAIN	AC1,"Y"
	JRST	TIPCP7
	HRROI	AC1,[ASCIZ / ? /]
	PSOUT
	JRST	TIPCP3

TIPCP6:	RESET
	HALTF
	JRST	TIPCPY

TIPTAB:	MOVE	AC2,AC6			;CHANGE TABS INTO SPACES
	ANDI	AC2,7
	HRRZI	AC4,10			;"TAB STOPS" AT 0,10,20,...
	SUB	AC4,AC2
	SOJL	AC4,.+6
	HRRZI	AC2," "
	HRRZ	AC1,TIPJFN
	BOUT
	AOJ	AC6,
	JRST	.-5
	JRST	TIPCL1

OUTHED:	PUSH	P,AC1
	PUSH	P,AC2
	PUSH	P,AC3
	HRRZ	AC1,TIPJFN
	HRRZI	AC2,";"
	BOUT
	HRRZI	AC2," "
	BOUT
	HRRZ	AC2,FILJFN
	MOVE	AC3,[2B2+2B5+1B8+1B11+2B14+1B24+1B32+1B35]
	JFNS
	SKIPN	PAGENO
	JRST	OUTHX
	HRRZI	AC3,20
	HRRZI	AC2," "
	BOUT
	SOJG	AC3,.-1
	HRROI	AC2,[ASCIZ /PAGE /]
	SOUT
	HRRZ	AC2,PAGENO
	HRRZI	AC3,^D10
	NOUT
	JRST	4,
	SKIPN	PAGSEG
	JRST	OUTHX
	HRRZI	AC2,":"
	BOUT
	HRRZ	AC2,PAGSEG
	NOUT
	JRST	4,
OUTHX:	HRRZI	AC2,15
	BOUT
	HRRZI	AC2,12
	BOUT
	HRRZI	AC2,15
	BOUT
	HRRZI	AC2,12
	BOUT
	POP	P,AC3
	POP	P,AC2
	POP	P,AC1
	POPJ	P,

PAGTST:	SETZ	AC6,			;CLEAR CHAR CNT
	AOS	AC7,LINENO			;GOOSE LINE CNT
	CAIG	AC7,^D58
	POPJ	P,
	SKIPN	FORMFG
	POPJ	P,
	AOS	PAGSEG
	POP	P,			;POP THE RETURN
GOTFF0:	SETZ	AC6,
	SETZM	LINENO
	HRRZ	AC1,TIPJFN
	HRRZI	AC2,14
	BOUT
	SKIPE	HEADFG
	PUSHJ	P,OUTHED
	JRST	TIPCL1

GOTFF:	SETZM	PAGSEG			;NEW PAGE, NO SEGMENT NO.
	AOS	PAGENO
	JRST	GOTFF0

XTP1:	HRROI	AC1,[ASCIZ / ? /]
	PSOUT
	HRRZI	AC1,100
	CFIBF
	JRST	TIPCP1
XTP2:	HRROI	AC1,[ASCIZ / ? /]
	PSOUT
	HRRZI	AC1,100
	CFIBF
	JRST	TIPCP2
XTP3:	HRROI	AC1,[ASCIZ / ? /]
	PSOUT
	HRRZI	AC1,100
	CFIBF
	JRST	TIPCP7
XTP4:	HRROI	AC1,[ASCIZ /
CAN'T GET JFN FOR TIP CONNECTION
/]
XTP4A:	PSOUT
	RESET
	HALTF
XTP5:	HRROI	AC1,[ASCIZ /
CAN'T OPEN TIP CONNECTION
/]
	JRST	XTP4A
XTP6:	HRROI	AC1,[ASCIZ /
CAN'T OPEN FILE
/]
	JRST	XTP4A
XTP7A:	HRROI	AC1,[ASCIZ / ? /]
	PSOUT
	JRST	TIPC7A
XTP7B:	HRROI	AC2,[ASCIZ / ? /]
	PSOUT
	JRST	TIPC7B

GETTIP:	MOVE	AC4,AC2
	HRRZI	AC10,TIPLST
GETTP1:	SKIPN	0(AC10)
	JRST	GETTP3
	MOVE	AC2,AC4
	HRRI	AC1,0(AC10)
	HRLI	AC1,440700
	PUSHJ	P,STREQ
	CAIA
	JRST	GETTP2
	ADDI	AC10,4
	JRST	GETTP1

GETTP2:	MOVE	AC1,3(AC10)
	AOS	0(P)
GETTP3:	POPJ	P,

TIPLST:
	ASCIZ /ALOHA-TIP/
	0
	244
	ASCIZ /AMES-TIP/
	0
	220
	ASCIZ /ARPA-TIP/
	0
	234
	ASCIZ /BBN-TESTIP/
	236
	ASCIZ /CCA-TIP/
	0
	237
	ASCIZ /ETAC-TIP/
	0
	224
	ASCIZ /GWC-TIP/
	0
	230
	ASCIZ /ICCC-TIP/
	0
	241
	ASCIZ /MITRE-TIP/
	0
	221
	ASCIZ /NBS-TIP/
	0
	223
	ASCIZ /NOAA-TIP/
	0
	231
	ASCIZ /RADC-TIP/
	0
	222
	ASCIZ /RUTGERS-TIP/
	0
	256
	ASCIZ /SAAC-TIP/
	0
	232
	ASCIZ /TYMSHARE-TIP/
	0
	253
	ASCIZ /USC-TIP/
	0
	227
	ASCIZ /UTAH-TIP/
	0
	204

	0


M1:	ASCIZ	/
TYPE ONE OF THE FOLLOWING:

ALOHA-TIP
AMES-TIP
ARPA-TIP
BBN-TESTIP
CCA-TIP
ETAC-TIP
GWC-TIP
ICCC-TIP
MITRE-TIP
NBS-TIP
NOAA-TIP
RADC-TIP
RUTGERS-TIP
SAAC-TIP
TYMSHARE-TIP
USC-TIP
UTAH-TIP

TIP NAME: /

LINENO:	0
PAGENO:	0
PAGSEG:	0
FORMFG:	0
HEADFG:	0
TIPNUM:	0
TIPSKT:	0
TIPJFN:	0
FILJFN:	0

STACK:	BLOCK	30


;PROGRAM TO ACCEPT INPUT STRINGS FROM THE TTY ALLOWING THE USER
;TO DO EDITTING WITH ^A, ^R, RUBOUT AND TO USE ALTMODE
;FOR COMPLETION.
;COMMA, SPACE AND NEWLINE TERMINATE THE STRING

;INEDIT:
;ACCEPTS IN AC1 FLAGS,,PTR
;		FLAGS:
;		  BIT 0 - ON => DON'T ECHO / OFF => USE ECHO DEFAULT
;		  BIT 1 - ON => RAISE LOWER CASE / OFF DON'T
;		  BIT 2 - ON => DON'T RECOG ON EOL/ OFF DO
;               PTR=ADDRESS OF ROUTINE USED FOR COMPLETION
;               IF PTR=0 THEN ALTMODE COMPLETION IS NOT USED AND INPUT
;               OF ALTMODE MERELY RINGS THE TERMINAL BELL.
;           AC2 0/PTR TO "HELP" STRING FOR ALTMODE
;RETURNS +1 IF STRING IS NOT FOUND BY THE SEARCH ROUTINE.
;RETURNS +2 IF STRING INCLUDED RUBOUT
;RETURNS +3 IF STRING IS FOUND BY SEARCH ROUTINE
;           OR IF NO SEARCH ROUTINE IS SPECIFIED

;INSTR:
;SAME AS INEDIT WITH ADDITIONAL PARAMETER
;ACCEPTS IN AC3 ADDITIONAL TERMINATION CHARACTER

;RETURNS WITH AC1 CONTAINING # OF CHARACTERS INPUT FROM TTY
;             AC2 CONTAINING STRING POINTER TO CHARACTER STRING.
;             AC3 CONTAINING TERMINATING CHARACTER
;             AC10 POINTING TO ENTRY FOUND BY SEARCH ROUTINE

;THE ROUTINE PASSED TO INEDIT/INSTR IS ASSUMED TO:
;ACCEPT IN AC1 PTR TO STRING TO BE VERIFIED
;          AC2 CHARACTER COUNT
;RETURN + 1 IF COMPLETE FAILURE
;       + 2 IF AMBIGUOUS
;       + 3 IF UNIQUE WITH AC10 POINTING TO ENTRY FOUND BY SEARCH
;                          AC11 CONTAINING PTR TO "REST" OF STRING



;INEDIT AND INSTR NOW JUST CALL GTSTR.

INSTR:	HRL	AC3,AC3
	CAIA

INEDIT:	SETZ	AC3,
	HRR	AC3,AC1			;AC3_ADDR OF SEARCH ROUTINE
	PUSH	P,AC4
	HRLZI	AC4,INBUFF		;SET GTSTR FLAGS IN AC4
	TRO	AC4,11			;JFN PAIR
	TLNN	AC1,400000		;DEFAULT ECHO
	TRO	AC4,2			;YES.
	TLNE	AC1,200000		;RAISE?
	TRZ	AC4,10			;NO
	TLNN	AC1,100000
	TRO	AC4,4			;RECOG ON EOL
	MOVE	AC1,AC4
	MOVE	AC4,AC2			;AC4_PROMPT PTR
	MOVE	AC2,[XWD 100,101]	;AC2_JFN PAIR
	SETZ	AC4,
	PUSHJ	P,GTSTR
	SOS	-1(P)
	SOS	-1(P)
	MOVE	AC10,AC3		;SET UP ACS FOR RETURN
	HLRZ	AC3,AC1
	HRRZ	AC1,AC1
	MOVE	AC2,[POINT 7,INBUFF]
	AOS	-1(P)
	AOS	-1(P)
	POP	P,AC4
	POPJ	P,


BUFSIZ==^D20

IFNDEF TWOSW < INBUFF: BLOCK BUFSIZ >

IFDEF TWOSW <
RELOC
AL INBUFF,BUFSIZ
RELOC >

;PROGRAM TO ACCEPT INPUT STRINGS AND DO RECOGNITION
;WILL DO EDITTING WITH ^A, ^R, RUBOUT AND TO USE ALTMODE
;FOR COMPLETION.
;COMMA, SPACE AND NEWLINE TERMINATE THE STRING

;ACCEPTS IN AC1 PTR,,FLAGS:
;		PTR - TO BUFFER TO STORE STRING COLLELCTED
;               FLAGS:
;                BIT 35 ON => AC2 - JFN PAIR / OFF => AC2 - STR PTR
;                BIT 34 ON => ECHO / OFF => DON'T ECHO
;		 BIT 33 ON => RECOG ON EOL / OFF => EXACT MATCH ON EOL
;		 BIT 32 ON => NO RAISE / OFF => RAISE
;		 BIT 31 ON => DON'T IGNORE LEADING SPACES /OFF => DO
;           AC2 (STRING PTR)/(INJFN,,OUTJFN) AS SPECIFYED BY BIT 35 OF AC1
;           AC3 SPECIAL TERM CHAR,,ADDRESS OF SEARCH ROUTINE
;           AC4 PTR TO PROMPT STRING
;RETURNS +1 IF STRING IS NOT FOUND BY THE SEARCH ROUTINE.
;RETURNS +2 IF STRING INCLUDED RUBOUT
;RETURNS +3 IF STRING IS FOUND BY SEARCH ROUTINE
;           OR IF NO SEARCH ROUTINE IS SPECIFIED

;RETURNS WITH AC1 CONTAINING TERM CHAR,,# OF CHARACTERS IN STRING
;             AC2 CONTAINING UPDATED STRING POINTER (IF APPROPRIATE)
;             AC3 POINTING TO ENTRY FOUND BY SEARCH ROUTINE /
;                 STRING PTR TO STRING READ IF SEARCH ROUTINE UNSPEC


;THE ROUTINE PASSED TO GTSTR IS ASSUMED TO:
;ACCEPT IN AC1 PTR TO STRING TO BE VERIFIED
;          AC2 (0/-1),, CHARACTER COUNT
;               -1 => TRY EXACT MATCH, 0 => TRY TO RECOGNIZE
;RETURN + 1 IF COMPLETE FAILURE
;       + 2 IF AMBIGUOUS
;       + 3 IF UNIQUE WITH AC1 POINTING TO "REST" OF STRING
;                          AC2 POINTING TO ENTRY FOUND


	INTERN	GTSTR

	ECH==2		;ECHO FLAG
	REC==4		;EOL RECOG FFLAG
	RAZ==10		;RAISE FLAG
	IGSP==20	;IGNORE SPACES FLAG


GTSTR:	PUSH	P,AC0			;SAVE USER'S ACS
	HRLI	AC0,AC1
	HRRI	AC0,1(P)
	ADDI	P,16
	BLT	AC0,0(P)

	HRRZ	AC5,AC3			;AC5=PTR TO SEARCH ROUTINE (OR 0)
	HRRZ	AC14,AC1		;AC14_FLAGS
	MOVS	AC13,AC1		;SET UP PTR TO BUFFER
	HRLI	AC13,440700
	MOVEM	AC13,STRBPT		;SAVE PTR TO USER'S BUFFER
	TRNE	AC1,1			;BIT 35 ON?
	JRST	GTSTR1			;YES
	MOVE	AC10,AC2		;NO
	HLRZ	AC2,AC2
	CAIN	AC2,-1
	HRLI	AC10,440700
	SETO	AC6,			;AC6 < 0 => STRING PTR IN AC2
	SETZ	AC11,
	JRST	GTSTR2
GTSTR1:	HLRZ	AC7,AC3			;AC7=SPECIAL TERM CH
	HLRZ	AC10,AC2		;AC10=INJFN
	HRRZ	AC11,AC2		;AC11=OUTJFN
	SETZ	AC6,			;AC6 = 0 => ECHO AND JFNS IN AC2
	TRNE	AC1,2			;BIT 34 ON?
	CAIA				;YES
	AOJ	AC6,			;AC6 > 0 => DON'T ECHO AND JFNS
	HRRZ	AC1,AC11
	RFCOC
	MOVEM	AC2,TTYCOC
	MOVEM	AC3,TTYCOC+1
	TLO	AC2,10			;SEND CODE FOR BELL
	TLZ	AC2,140000		;IGNORE ^A
	TLZ	AC3,600000		;IGNORE ^R
	TRZ	AC3,600000		;IGNORE ALTNODE
	SFCOC				;ON OUTPUT TO JFN
	HRRZ	AC1,AC10
	RFMOD
	MOVEM	AC2,TTYMOD
	TRNN	AC14,ECH
	TRZ	AC2,6000		;FORCE ECHO IF REQUESTED
	TRO	AC2,770000		;WAKEUP ON EVERYTHING
	PUSHJ	P,ISALNM		;UNLESS TERM CHAR NOT ALPAHNUM.
	 TRZ	AC2,10000
	SFMOD
GTSTR2:	MOVE	AC12,AC4

GTSTST:	SETZ	AC3,			;AC3 HOLDS CHAR COUNT
	TRNE	AC14,IGSP		;IGNORE SPACES
	JRST	GTSTS4			;NO

GTSTS1:	MOVE	AC1,AC10
	BIN				;IGNORE LEADING SPACES IN INPUT
	MOVE	AC10,AC1
	CAIN	AC2," "
	JRST	GTSTS3
	CAIE	AC2,33
	JRST	GTSTS5
	JUMPE	AC4,GTSTS5		;ALT MODE BUT NO PROMPT
	JUMPE	AC12,GTSTS2
	JUMPN	AC6,.+4
	MOVE	AC1,AC11
	MOVE	AC2,AC12
	SOUT
	SETZ	AC12,
	JRST	GTSTS1

GTSTS2:	HRRZI	AC2,7
GTSTS3:	JUMPN	AC6,GTSTS1
	HRRZ	AC1,AC11
	BOUT
	JRST	GTSTS1

GTSTS5:	MOVE	AC4,STRBPT		;AC4=PTR TO CHAR BUFF
	JRST	GTSTLP+2

GTSTS4:	MOVE	AC4,STRBPT

GTSTLP:	MOVE	AC1,AC10
	BIN				;READ A CHARACTER
	MOVE	AC10,AC1
	JUMPE	AC2,DONL		;END OF ASCIZ STRING
	CAIN	AC2,177			;RUBOUT
	JRST	DORUB
	CAIN	AC2,22			;CONTROL R - RETYPE
	JRST	DOCNTR
	CAIN	AC2,1			;CONTROL A - DELETE CHAR
	JRST	DOCNTA
	CAIN	AC2,37			;NEWLINE - ENDS STRIN
	JRST	DONL
	CAIN	AC2,15			;CARRIARE RETURN -MUST BE
	JRST	DOCR			;FOLLOWED BY LINE FEED = NEWLINE
	CAIN	AC2," "			;SPACE - TERMINATES STRING
	JRST	DOSP
	CAIN	AC2,33			;ALTMODE - USED WITH SEARCH
	JRST	DOALT			;ROUTINE FOR STRING COMPLETION
	CAIN	AC2,6			;CONTROL F - USED AS ALTMODE
	JRST	DOCNTF
	CAIN	AC2,","			;COMMA - ENDS STRING
	JRST	DOCOMA
	CAMN	AC2,AC7			;USER SPECIFIED TERMINATOR
	JRST	DOUTRM

DOCH:	MOVE	AC10,AC1
	TRNN	AC14,RAZ
	PUSHJ	P,RAISE
	IDPB	AC2,AC4
	AOJ	AC3,
	JRST	GTSTLP

DORUB:	JUMPN	AC6,RET2
	HRRZ	AC1,AC11
	HRROI	AC2,[ASCIZ /XXX/]
	SETZ	AC3,
	SOUT
	JRST	RET2

DOCNTR:	JUMPN	AC6,GTSTLP
	MOVE	AC13,AC4
	SETZ	AC2,
	IDPB	AC2,AC13		;MAKE STRING ASCIZ FOR ECHO
	HRRZ	AC1,AC11
	HRRZI	AC2,37
	BOUT
	JUMPE	AC3,RNGBEL
	MOVE	AC2,STRBPT
	MOVE	AC12,AC3
	SETZ	AC3,
	SOUT
	MOVE	AC3,AC12
	JRST	GTSTLP

DOCNTA:	JUMPL	AC6,DOCH
	JUMPN	AC6,DOCNA1
	HRRZ	AC1,AC11
	JUMPE	AC3,RNGBEL
	HRRZI	AC2,"\"
	BOUT
DOCNA1:	LDB	AC2,AC4
	SKIPN	AC6
	BOUT
	SETZ	AC1,
	DPB	AC1,AC4
	MOVE	AC4,STRBPT
	SOJE	AC3,GTSTLP
	MOVE	AC1,AC3
	IBP	AC4
	SOJG	AC1,.-1
	JRST	GTSTLP

DOALT:	PUSH	P,AC2			;REMEMBER ALT
DOALT2:	JUMPE	AC5,[ POP P,
		      JRST RNGBEL ]
	MOVE	AC13,AC4
	SETZ	AC2,
	IDPB	AC2,AC13		;MAKE ASCIZ STRING FOR SEARCH
	MOVE	AC1,STRBPT
	MOVE	AC2,AC3
	PUSHJ	P,@AC5
	JRST	[ POP P,
		  JRST RET1 ]

	JRST	[ POP P,
		  JRST RNGBEL ]
	MOVE	AC12,AC1
	MOVEM	AC2,ENTPTR
	JUMPE	AC3,.+3
	LDB	AC2,AC12
	JUMPE	AC2,DOALT1
	JUMPG	AC6,DOALT0
	JUMPN	AC6,.+3
	HRRZ	AC1,AC11
	CAIA
	MOVE	AC1,AC10
	MOVE	AC2,AC12
	SETZ	AC3,
	SOUT
	JUMPE	AC7,.+3
	MOVE	AC2,AC7
	BOUT
	JUMPE	AC6,DOALT0
	MOVE	AC10,AC1
DOALT0:	ILDB	AC2,AC12
	JUMPE	AC2,DOALT1
	IDPB	AC1,AC4
	AOJ	AC3,
	JRST	.-4
DOALT1:	JUMPN	AC1,.+4
	MOVE	AC1,AC10
	HRRZI	AC2," "
	BOUT
	POP	P,AC7			;AC7 = ALT OR ^F
	MOVE	AC2,ENTPTR
	JRST	RET3

DONL:	MOVE	AC7,AC2
	JUMPE	AC5,RET3
	MOVE	AC13,AC4
	SETZ	AC2,
	IDPB	AC2,AC13		;MAKE STRING ASCIZ
	MOVE	AC1,STRBPT
	SETZ	AC2,
	TRNN	AC14,REC
	SETO	AC2,			;TRY FOR EXACT MATCH
	HRR	AC2,AC3			;TRY FOR EXACT MATCH
	PUSHJ	P,@AC5
	JRST	RET1
	JRST	RET1
	MOVEM	AC2,ENTPTR
	JRST	RET3

DOSP=DONL

DOCR:	BIN
	MOVE	AC10,AC1
	CAIE	AC2,12			;LINE FEED
	JRST	.+4
	HRRZI	AC7,37
	JUMPE	AC5,DOCR1
	JRST	DONL
	JUMPL	AC6,.+3
	HRRZ	AC1,AC11
	BOUT
	JRST	RET1
DOCR1:	JUMPL	AC6,.+3
	HRRZ	AC1,AC11
	BOUT
	HRRZI	AC2,37
	JRST	RET3

DOCNTF:	PUSH	P,AC2			;REMEMBER ^F
	JRST	DOALT2			;AND HANDLE LIKE ALT

DOCOMA=DONL

DOUTRM=DONL

RNGBEL:	JUMPN	AC6,GTSTLP
	MOVE	AC1,AC11
	HRRZI	AC2,7
	BOUT
	JRST	GTSTLP

RET3:	SETZ	AC2,
	IDPB	AC2,AC4			;MAKE COLLECTED STRING ASCIZ
	AOS	-17(P)
RET2:	AOS	-17(P)
RET1:	JUMPGE	AC6,.+3
	MOVE	AC2,AC10
	JRST	RET11
	MOVE	AC1,AC10
	MOVE	AC2,TTYMOD
	SFMOD
	PUSH	P,AC3
	MOVE	AC1,AC11		;RESTORE COC
	MOVE	AC2,TTYCOC
	MOVE	AC3,TTYCOC+1
	SFCOC
	POP	P,AC3
	HRL	AC2,AC10
	HRR	AC2,AC11
RET11:	HRR	AC1,AC3
	HRL	AC1,AC7
	JUMPN	AC5,.+3
	MOVE	AC3,STRBPT
	CAIA
	MOVE	AC3,ENTPTR
	HRLI	AC0,-12(P)		;RESTORE STACK
	HRRI	AC0,4
	BLT	AC0,AC16
	SUBI	P,16
	POP	P,AC0
	POPJ	P,

IFNDEF TWOSW <
STRBPT:	BLOCK	1
TTYMOD:	BLOCK	1
TTYCOC:	BLOCK	2
ENTPTR:	BLOCK	1
>

IFDEF TWOSW <
RELOC
AL STRBPT
AL TTYMOD
AL TTYCOC,2
AL ENTPTR
RELOC
>

ISALNM:	CAIGE	AC7,"0"			;ROUTINE TO SKIP IF CAHR IN AC7
	POPJ	P,			;IS ALPHANUMERIC
	CAIG	AC7,"9"
	JRST	ISANSK
	CAIGE	AC7,"A"
	POPJ	P,
	CAIG	AC7,"Z"
	JRST	ISANSK
	CAIGE	AC7,"a"
	POPJ	P,
	CAIG	AC7,"z"
ISANSK:	AOS	0(P)
	POPJ	P,


RAISE:	CAIL	AC2,"a"			;RAISE LOWER TO UPPER
	CAILE	AC2,"z"
	POPJ	P,
	SUBI	AC2,40
	POPJ	P,

;SEARCH ROUTINE FOR USE BY GTSTR
;TO BE USED FOR LINKED LISTS KEPT SORTED IN ALPHABETIC ORDER
;ACCEPTS IN AC1 PTR TO STRING
;           AC2 (0/-1),,CHAR COUNT
;               0=> TRY TO RECOGNIZE, -1 => TRY EXACT MATCH
;RETURNS + 1 IF STRING CAN'T POSSIBLY MATCH
;        + 2 IF AMBIGUOUS
;        + 3 IF UNIQUE MATCH WITH AC1=PTR TO REST OF STRING
;                                 AC2=PTR TO TABLE ENTRY
;THE LOCATION LNKINF IS ASSUMED TO CONTAIN: NAME OFFSET,,ROOT NODE PTR

	INTERN	LNKFND,LNKINF

LNKFND:	PUSH	P,AC4
	PUSH	P,AC10
	PUSH	P,AC11
	PUSH	P,AC12
	PUSH	P,AC13
	MOVE	AC4,AC1
	HRRZ	AC10,LNKINF
	JUMPL	AC2,LNKFN1

	SETZM	MATSW
LNKLP:	HLRZ	AC11,LNKINF
	ADD	AC11,AC10
	HRLI	AC11,440700
	PUSHJ	P,COMPAR
	JRST	.+7
	SKIPE	MATSW
	JRST	LNKRT2
	SETOM	MATSW
	MOVE	AC12,AC10
	MOVE	AC13,AC11
	JRST	LNKNXT

	SKIPE	MATSW
	JRST	LNKRT3
LNKNXT:	HRRZ	AC10,0(AC10)
	JUMPE	AC10,LNKRT
	MOVE	AC1,AC4
	JRST	LNKLP

LNKRT:	SKIPN	MATSW
	JRST	LNKRT1
LNKRT3:	MOVE	AC1,AC13
	MOVE	AC2,AC12
LNKRT0:	AOS	-5(P)
LNKRT2:	AOS	-5(P)
LNKRT1:	POP	P,AC13
	POP	P,AC12
	POP	P,AC11
	POP	P,AC10
	POP	P,AC4
	POPJ	P,

LNKFN1:	MOVE	AC1,AC4
	HLRZ	AC2,LNKINF
	ADD	AC2,AC10
	HRLI	AC2,440700
	PUSHJ	P,STREQ
	JRST	LNKFN2
	MOVE	AC12,AC10
	HRRZ	AC10,0(AC10)
	JUMPE	AC10,LNKFN3		;NO MORE ENTRIES => EXACT
	MOVE	AC1,AC4
	HLRZ	AC2,LNKINF
	ADD	AC2,AC10
	HRLI	AC2,440700
	PUSHJ	P,STREQ
	CAIA
	JRST	LNKRT2
LNKFN3:	MOVE	AC2,AC12
	JRST	LNKRT0

LNKFN2:	HRRZ	AC10,0(AC10)
	JUMPE	AC10,LNKRT1
	JRST	LNKFN1


IFNDEF TWOSW <
MATSW:	BLOCK	1
LNKINF:	BLOCK	1
>

IFDEF TWOSW <
RELOC
AL MATSW
AL LNKINF
RELOC
>

COMPAR:	PUSH	P,AC3
	ILDB	AC3,AC1
	JUMPE	AC3,MAT
	ILDB	AC2,AC11
	JUMPE	AC2,NOMAT
	CAME	AC3,AC2
	JRST	NOMAT
	JRST	COMPAR+1
MAT:	AOS	-1(P)
NOMAT:	POP	P,AC3
	POPJ	P,

;STRING EQUAL AND MOVE STRING ROUTINES

STREQ:	PUSH	P,AC3			;IS STRING PTED TO BY AC1
	PUSH	P,AC4			;EQUAL TO STRING PTED TO BY AC2
	SETZ	AC3,
	SETZ	AC4,
STREQ1:	ILDB	AC3,AC1
	ILDB	AC4,AC2
	CAME	AC3,AC4
	JRST	STREQ2
	CAIE	AC3,0
	JRST	STREQ1
	AOS	-2(P)
STREQ2:	POP	P,AC4
	POP	P,AC3
	POPJ	P,

END	TIPCPY
