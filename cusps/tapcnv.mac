;<BOKOR>TAPCNV.MAC;1    12-JUL-73 13:41:27	EDIT BY BOKOR
	TITLE TAPCNV
	SUBTTL J. BURCHFIEL SEPT 9,1971
	;EDITED BY SRS   6NOV73

	;VERSION==3

	;READS A CARD IMAGE FILE WHICH WAS PROCESSED
	;BY MTACPY.

	SEARCH STENEX

	A=1	;JFN
	B=2
	C=3
	D=4


	BUFSIZ=^D100

	CHAR=2		;CHARACTER
	BITCNT=3	;BIT COUNT
	CHRCNT=4	;CHAR COUNT
	UNPACK=5	;BYTE ASSEMBLY REGISTER
	WRDBUF=6	;WORD INPUT BUFFER
	TYPE=7		;0=EBCDIC,1=BCL,2=BCD 026,3=BCD 029
	OPTR=10		;PTR INTO OUTPUT BUFFER
	P=17

BEG:	RESET
	MOVE P,[IOWD ^D10,STK]

	MOVEI A,400000		;THIS FORK
	MOVE B,[XWD LEVTAB,CHNTAB]
	SIR			;PSEODOINTERRUPT SYSTEM
	MOVSI B,(1B10)		;CATCHES END OF FILE
	AIC
	EIR

L1:	HRROI A,[ASCIZ /
TAPE IMAGE FILE = /]
	PSOUT
	MOVSI A,120003
	MOVE B,[XWD 100,101]
	GTJFN
	JRST L1
	MOVEM A,INJFN
	MOVEI B,(A)		;JFN
	HRROI A,FILSTR
	MOVE C,[	EXP  1B2+1B5+1B8+1]
	JFNS
	HRROI B,[ASCIZ/.RECSIZ/]
	SETZ C,
	SOUT

	MOVSI A,100001		;OLD FILE, USE STRING
	HRROI B,FILSTR
	GTJFN
	SKIPA
	JRST OPEN2

NOFILE:	MOVEI A,101
	HRROI B,FILSTR
	SETZ C,
	SOUT
	HRROI B,[ASCIZ /  -  FILE NOT FOUND.
/]
	SOUT

L3:	HRROI A,[ASCIZ/
RECORD SIZE FILE = /]
	PSOUT
	MOVSI A,120003
	MOVE B,[XWD 100,101]
	GTJFN
	JRST L3


OPEN2:	MOVEM A,SIZJFN
	MOVE B,[XWD 070000,200000]
	OPENF
	PUSHJ P,ERR

L2:	HRROI A,[ASCIZ /
OUTPUT FILE = /]
	PSOUT
	MOVE B,INJFN
	HRROI A,DEVSTR
	MOVSI C,(1B2)		;WRITE DEVICE
	JFNS
	HRROI A,DIRSTR
	MOVSI C,(1B5)		;WRITE DIRECTORY
	JFNS
	HRROI A,NAMSTR
	MOVSI C,(1B8)		;WRITE NAME
	JFNS
	HRROI A,[ASCIZ /ASCII/]
	MOVEM A,EXTPTR
	MOVSI A,460002		;NEW, CONFIRM
	MOVEM A,JBLOCK
	MOVE A,[XWD 100,101]
	MOVEM A,JBLOCK+1
	MOVEI A,JBLOCK
	SETZ B,
	GTJFN
	JRST L2
	MOVEM A,OUTJFN
	MOVE B,[XWD 070000,100000]
	OPENF
	PUSHJ P,ERR
	MOVE A,INJFN
	MOVE B,[XWD 440000,200000]
	OPENF
	PUSHJ P,ERR
	SETZM RECBIT		;BITS REMAINING IN CURRENT RECORD
	SETZM BUFBIT		;BITS REMAINING IN CURRENT BUFFER

Q1:	HRROI A,[ASCIZ /
BCL OR BCD OR EBCDIC?:/]
	PSOUT
	PBIN
	CAIN A,"E"
	JRST EBCDIC
	CAIE A,"B"
	JRST Q1

Q1A:	PBIN
	CAIE A,"C"
	JRST Q1
	PBIN
	CAIN A,"L"
	JRST BCL
	CAIE A,"D"
	JRST Q1

BCD:	MOVEI A,37
	PBOUT
	MOVEI ^D6
	MOVEM BYTSIZ

Q2:	HRROI A,[ASCIZ/
026 OR 029 CODE? :/]
	PSOUT
	PBIN
	CAIE A,"0"
	JRST Q2
	PBIN
	CAIE A,"2"
	JRST Q2
	PBIN
	CAIN A,"6"
	JRST %026
	CAIE A,"9"
	JRST Q2

%029:	MOVEI A,37
	PBOUT
	MOVEI TYPE,3
	JRST LINELP

%026:	MOVEI 1,37
	PBOUT
	MOVEI TYPE,2
	JRST LINELP

EBCDIC:	MOVEI B,5
	PBIN
	SOJG B,.-1
	MOVEI A,37
	PBOUT
	MOVEI ^D8
	MOVEM BYTSIZ
	SETZ TYPE,
	JRST LINELP

BCL:	MOVEI A,37
	PBOUT
	MOVEI ^D6
	MOVEM BYTSIZ
	MOVEI TYPE,1


LINELP:	MOVE A,[XWD OBUF,OBUF+1]	;CLEAN OUTPUT BUFFER
	SETZM OBUF
	BLT	A,BUFEND
	MOVE OPTR,[POINT 7,OBUF]	;INIT POINTER
;	MOVEI CHRCNT,^D80	;CONVERT 80 CHARS

CHARLP:	MOVE BITCNT,BYTSIZ
	PUSHJ P,RDBYTE		;GET NEXT BYTSIZ BITS
	PUSHJ P,@CNVTAB(TYPE)	;CONVERT CHAR TO ASCII
	IDPB CHAR,OPTR
	CAIE CHAR,40		;IS IT A SPACE
	MOVEM OPTR, OPTRSV	;NO, SAVE PTR FOR TRAILING BLANK SUPRESS
	SOJG CHRCNT,CHARLP

	MOVE OPTR,OPTRSV	;BACK UP TO LAST NONBLANK CHAR
	MOVEI B,15
	IDPB B,OPTR
	MOVEI B,12		;AND OUTPUT AS ONE LINE
	IDPB B,OPTR
	SETZ B,
	IDPB B,OPTR
	MOVE A,OUTJFN
	HRROI B,OBUF
	SETZ C,
	SOUT

	JRST LINELP

RDBYTE:	CAMLE BITCNT,RECBIT	;THAT MANY BITS LEFT IN RECORD?
	PUSHJ P,NEWREC		;NO, ADVANCE TO NEXT RECORD
	SUBM BITCNT,RECBIT	;YES, ACCOUNT THEM
	MOVNS RECBIT
	PUSHJ P,GET		;GET THE BITS INTO B
	POPJ P,

NEWREC:	AOS RECNO
	MOVE BITCNT,RECBIT	;FLUSH REMAINING BITS IN THIS RECORD
	PUSHJ P,GET
	PUSHJ P,RECSIZ		;GET SIZE OF NEXT RECORD IN BITS
	MOVEM BITCNT,RECBIT
	MOVE BITCNT,BYTSIZ	;RESTORE C
	POPJ P,

GET:	SETZ UNPACK,		;BITS SHIFT INTO UNPACK FROM WRDBUF
	CAMLE BITCNT,BUFBIT	;THAT MANY LEFT IN BUFFER?
	PUSHJ P,NEWWD		;NO, GET ANOTHER WORD
	SUBM BITCNT,BUFBIT
	MOVNS BUFBIT
	LSHC UNPACK,(BITCNT)
	MOVEI CHAR,(UNPACK)
	POPJ P,

NEWWD:	SUB BITCNT,BUFBIT	;USE REMAINING BUFFER BITS
	LSHC UNPACK,@BUFBIT
	MOVE A,INJFN
	BIN
	MOVE WRDBUF,B		;THEN GET ANOTHER 36
	MOVEI ^D36
	MOVEM BUFBIT		;NOW HAVE 36 IN BUFFER
	POPJ P,

RECSIZ:	MOVE A,SIZJFN

L4:	BIN
	CAIL B,"0"
	CAILE B,"9"
	JRST L4
	BKJFN
	PUSHJ P,ERR
	MOVEI C,^D10
	NIN
	PUSHJ P,ERR
	CAIN TYPE,1
	CAIN B,^D80	;80 CHARS IN BCL RECORD
	JRST RECS2		;NORMAL RECORD

	PUSH P,B
	HRROI A,[ASCIZ /
CHECK RECORD NUMBER /]
	PSOUT
	MOVEI A,101
	MOVE B,RECNO
	MOVEI C,^D10
	NOUT
	PUSHJ P,ERR
	HRROI A,[ASCIZ /. IT IS MISSING /]
	MOVE B,(P)
	CAIL B,^D80
	HRROI A,[ASCIZ /. IT HAS EXTRA /]
	PSOUT
	MOVEI A,101
	MOVE B,(P)
	SUBI B,^D80
	MOVM B,B
	MOVEI C,^D10
	NOUT
	PUSHJ P,ERR
	HRROI A,[ASCIZ / CHARS.
/]
	PSOUT
	POP P,B

RECS2:	CAILE	B,BUFSIZ*5
	MOVEI	B,BUFSIZ*5	;TRUNCATE

	MOVEM	B,CHRCNT	;USE RECORD SIZE FROM NAME.RECSIZ
	IMULI B,6
	MOVE BITCNT,B
	POPJ P,

CNVTAB:	EBCCNV
	BCLCNV
	BCD026
	BCD029

EBCCNV:	SUBI CHAR,100
	SKIPGE CHAR
	SETZ CHAR,
	IDIVI CHAR,5
	LDB CHAR,ASCPT2(CHAR+1)
	POPJ P,

ASCPT2:	N==6
	REPEAT 5, <	POINT 7,ASCTB2(CHAR),N
			N==N+7 >

	;EBCDIC TO ASCII CONVERSION TABLE

ASCTB2:	ASCII/ .........[.<(+_&.........]$*)/
	ASCII\;.-/.........,%.>?..........:#\
	ASCII/@'="........................../
	ASCII/............................../
	ASCII/........\ABCDEFGHI......!JKLMN/
	ASCII/OPQR........STUVWXYZ......0123/
	ASCII/456789....../


BCLCNV:	IDIVI CHAR,5
	LDB CHAR,ASCPTR(CHAR+1)
	POPJ P,

ASCPTR:	N==6
	REPEAT 5, <	POINT 7,ASCTAB(CHAR),N
			N==N+7	>



	;BCL TO ASCII CONVERSION TABLE

ASCTAB:	ASCII\0123456789#@?:>'+ABCDEFGHI.[&(<_*JKLMNOP\
	ASCII\QR$*-);< /STUVWXYZ,%#=]"\




BCD026:	IDIVI CHAR,5
	LDB CHAR,ASCPT3(CHAR+1)
	POPJ P,

ASCPT3:	N==6
	REPEAT 5,<	POINT 7,ASCTB3(CHAR),N
			N==N+7 >

	;BCD 026 TO ASCII CONVERSION TABLE

ASCTB3:	ASCII! 1234567890=':>% /STUVWXYZ#,(&\@-JKLMNOP!
	ASCII\QR!$*];^+ABCDEFGHI?.)[<_\

BCD029:	IDIVI CHAR,5
	LDB CHAR,ASCPT4(CHAR+1)
	POPJ P,

ASCPT4:	N==6
	REPEAT 5,<	POINT 7,ASCTB4(CHAR),N
			N==N+7 >

	;BCD 029 TO ASCII CONVERSION TABLE

ASCTB4:	ASCII! 1234567890#@'=" /STUVWXYZ],%_>?-JKLMNOP!
	ASCII/QR!$*);\&ABCDEFGHI[.<(+^/

LEVTAB:	EXP SAVRET,0,0
CHNTAB:	REPEAT ^D10,< Z >
	XWD 1,EOFINT
	REPEAT ^D25,< Z >

EOFINT:	MOVEI A,ENDUP
	MOVEM A,SAVRET
	DEBRK
	HALTF

ENDUP:	MOVE A,INJFN
	CLOSF
	PUSHJ P,ERR
	MOVE A,SIZJFN
	CLOSF
	PUSHJ P,ERR
	MOVE A,OUTJFN
	CLOSF
	PUSHJ P,ERR
	HRROI A,[ASCIZ /
DONE.
/]
	PSOUT
	HALTF

ERR:	MOVEI A,101
	MOVE B,[XWD 400000,-1]
	SETZ C,
	ERSTR
	HALTF
	HALTF
	HALTF

	LIT

JBLOCK:	0
	0
	POINT 7,DEVSTR
	POINT 7,DIRSTR
	POINT 7,NAMSTR
EXTPTR:	0
	0
	0
	0

FILSTR:	BLOCK 40
DEVSTR:	BLOCK 10
DIRSTR:	BLOCK 10
NAMSTR:	BLOCK 10
EXTSTR:	BLOCK 10
OBUF:	BLOCK	BUFSIZ
BUFEND=.-1
OPTRSV:	BLOCK 1
BYTSIZ:	BLOCK 1
RECBIT:	BLOCK 1
BUFBIT:	BLOCK 1
SAVRET:	BLOCK 1
INJFN:	BLOCK 1
SIZJFN:	BLOCK 1
OUTJFN:	BLOCK 1
RECNO:	BLOCK 1
STK:	BLOCK ^D10
PATCH:	BLOCK ^D20

	END BEG
