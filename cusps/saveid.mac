;<HEATHMAN>RSTORE.MAC;1   11-NOV-74 23:30:00    EDIT BY HEATHMAN
;converted to RP03's on a KI10
;<SOURCES>RSTORE.MAC;3    27-JUL-74 20:23:13	EDIT BY LYNCH
; FIXED BUG IN SECTOR COUNTER LOOP!
;<OP>RSTORE.MAC;3     5-JUL-74 13:49:01	EDIT BY OP
;<OP>RSTORE.MAC;3     5-JUL-74 13:47:22	EDIT BY OP
;<OP>RSTORE.MAC;2     5-JUL-74 13:46:01	EDIT BY OP
;<LYNCH>RSTORE.MAC;13    21-JUN-74 10:40:52	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;12    18-JUN-74 17:53:07	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;11    18-JUN-74 14:05:47	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;10    18-JUN-74 13:41:21	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;9    18-JUN-74 11:19:50	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;8    18-JUN-74 11:07:44	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;7    18-JUN-74 09:54:00	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;6    18-JUN-74 01:33:26	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;5    18-JUN-74 00:46:16	EDIT BY LYNCH
;<LYNCH>RSTORE.MAC;3    17-JUN-74 23:54:59	EDIT BY LYNCH
	SUBTTL SAVEID
; PROGRAM TO RESTORE THE DISK INDEX BLOCK FROM DECTAPE
; assemble with general offline utility package <MON>OFFMON.MAC
;
;GENERAL PARAMETERS
;
;ADDRESSES OF BUFFERS
NIDPAG=22		;TOTAL NUMBER OF <SYSTEM>INDEX.;1 PAGES, INCLUDING
			;XB
ADRTAB=40000		;TABLE OF DISK ADDRESS FOR PAGES IN GUDBUF
MAPTAB=40400		;TABLE OF FILE PAGE NUMBERS FOR <SYSTEM>INDEX.;1
GUDBUF=41000		;START OF <SYSTEM>INDEX.;1, XB AND DATA
IDXB=41000		;XB GETS PUT BEFORE <SYSTEM>INDEX.;1 DATA
GUDID=42000		;<SYSTEM>INDEX.;1 DATA
BADBUF=GUDBUF+1000*NIDPAG	;BUFFER TO STORE OLD (BAD) <SYSTEM>INDEX.;1, XB AND
			;DATA

IDADR:	451520		;ADDRESS OF <SYSTEM>INDEX.;1 XB
PAGENM:	-1		; POINTER TO POSITION IN PAGE TABLE
INBUF:	BADBUF-1		; START READING BAD STUFF IN HERE (+1 FOR IOWD FORMAT)
OUTBUF:	GUDBUF-1		; FIND GOOD COPY HERE AND WRITE IT OUT TO DISK

	EXTERN DDT
	REPEAT 0,<
ASSEMBLY INSTRUCTIONS
@MACRO
*SAVEID_OFFMON,SAVEID
*LINK10!
*EDDT
*SAVEID
*/GO
@SAVE 20 (TO) 777777 (ON) SAVEID.SAV
@
	THE PROGRAM SAVEID.SAV IS THE PROGRAM THAT RUNS UNDER TENEX TO 
GET THE CURRENT INDEX BLOCKS AND COPY THEM TO ITS OWN CORE IMAGE.
IT THEN SAVES THE WHOLE PROGRAM AND DATA ONTO DECTAPE CALLED RSTORE.SAV.
RSTORE.SAV IS THE PROGRAM THAT YOU BOOT IN WHEN THE FILE SYSTEM HAS BEEN
SMASHED. IT HAS EXEC DDT AND YOU USUALLY SAY   START$G WHEREUPON IT
SPENDS ABOUT 30 SECONDS GETTING THE OLD SMASHED VERSION OF THE INDEX
AND COPYING IT TO CORE FOR LATER ANALYSIS, AND IT PUTS THE GOOD
RECENT COPY OF THE INDEX BLOCK THAT IT HAS IN ITS CORE IMAGE ONTO 
THE DISK PACK.  YOU SHOULD SAVE THE CORE IMAGE FOR ANALYSIS BY USING
THE DECTAPE BOOTIN /D(UMP) FEATURE.
    THE EDDT.REL FILE CAN USUALLY BE FOUND IN <MON>. COPY TO YOUR
OWN DIRECTORY (THANKS TO LINK10 NOT KNOWING ABOUT TENEX)
THE START INSTRUCTION STARTS THE PROGRAM AT INIT WHICH SETS UP THINGS FOR 
EDDT AND READS IN THE CURRENT INDEX BLOCKS FROM THE RUNNING SYSTEM. 
MAKE SURE THAT NO ONE IS DOING A CRDIR JSYS (CREATE COMMAND) SO THAT
NO GARBAGE COLECTION IS HAPPENING DURING THE 'COPY' OPERATION.
WHEN THE PROGRAM EXITS IT HAS SAVED ITSELF ON DECTAPE
SO THAT WHEN YOU BOOTIN AND START IT AGAIN ITS ENTRY POINT IS AT 
THE STANDALONE DISK RESTORE POINT.  IT WILL READ THE BAD COPY FROM THE 
CURRENT DISK AND PUT THE IMAGE OF THE INDEX BLOCK THAT HAS BEEN STORED
IN ITS INTERNAL BUFFERS BACK OUT ON THE DISK.  HOPEFULLY YOU WILL THEN
BE ABLE TO BRING UP TENEX TO THE POINT WHERE YOU CAN
USE BSYS (MAYBE FROM DECTAPE ALSO) TO TRY FURTHER FILE SYSTEM RESTORATION
METHODS.  WHEN THE RESTORE PORTION OF THE PROGRAM IS DONE IT WOULD
BE ADVISABLE TO BOOT IN A 'FRESH' DECTAPE
AND USE THE /D FEATURE OF THE BOOTIN PROGRAM TO DUMP THE CURRENT
CORE IMAGE TO THE DECTAPE (FILE  'CRASH') SO THAT YOU CAN PORE OVER
THE REMAINS OF THE 'BAD' INDEX BLOCK FOR ANALYSIS OF CAUSES.


  WHEN YOU BOOTIN THE RSTORE PROGRAM BE SURE YOU HAVE CLEARED CORE 
FIRST.  YOU WILL COME UP IN EXEC MODE DDT AND CAN JUST TYPE
START$G      TO GET MOVING OR ELSE FIDDLE AROUND WITH DDT FIRST.


>					;END OF REPEAT 0
; THIS IS THE ENTRY FOR RUNNING UNDER TENEX TO GET THE
; CURRENT INDEX BLOCK(S)

AVANTE:	MOVEI 1,400000
	RPCAP
	TRNN 2,600000
	JRST	[HRROI 1,[ASCIZ /
THIS PROGRAMS NOT FOR YOU, KID./]
		PSOUT
		HALTF
		JRST .-1]
	MOVE 16,3	;SAVE CURRENT CAP.
	MOVE 3,2
	EPCAP		; MAKE ME A RUNNING WHEEL/OP

GETID1:	MOVE 1,IDADR	;GET <SYSTEM>INDEX.;1 INDEX BLOCK ADDRESS
	MOVEM 1,ADRTAB	;IT'S FIRST PAGE IN TABLE OF ADDRESS
	TLO 1,400000	;IT IS A LINEAR ADDRESS
	MOVEI 2,1000	;READ A PAGE
	MOVEI 3,IDXB
	DSKOP		;GO GET THE ID XB
	SKIPE 1		;ANY ERRORS?
	 JRST	[MOVE 3,1	;SAVE ERRORS
		HRROI 1,[ASCIZ /
ERRORS READING <SYSTEM>INDEX.;1 INDEX BLOCK/]
		PSOUT
		HALTF
		JRST GETID1]

	MOVEI 2,1	;ADR TABLE POINTER
	MOVSI 3,-1000	;PT TABLE POINTER

GETID2:	MOVE 1,IDXB(3)	;GET PAGE ADDRESS
	JUMPE 1,GETID5	;EMPTY POINTER
	TDNE 1,[XWD 617720,3]	;ANY FUNNY BITS?
	JRST	[MOVE 4,ADRTAB(2)
		HRROI 1,[ASCIZ /
BAD POINTER IN <SYSTEM>INDEX.;1 INDEX BLOCK/]
		PSOUT
		HALTF
		JRST GETID1]
	AND 1,[XWD 7,777774]	;JUST SAVE ADDRESS BITS
	MOVEM 1,ADRTAB(2)
	HRRZM 3,MAPTAB(2)
	AOS 2
GETID5:	AOBJN 3,GETID2

	SETOM ADRTAB(2)
	SETOM MAPTAB(2)

	CAILE 2,NIDPAG		;MAX NUMBER OF IDBLOCKS THIS PROG CAN HANDLE
	 JRST	[HRROI 1,[ASCIZ /
TOO MANY PAGES IN <SYSTEM>INDEX.;1 FOR THIS PROGRAM TO HANDLE/]
		PSOUT
		HALTF
		JRST .-1]

	MOVNS 2
	HRLZ 4,2		;SET UP FUTURE AOBJN POINTER IN 4
	AOBJP 4,		;ALREADY DONE XB

	MOVSI 1,1
	HRROI 2,[ASCIZ/<SYSTEM>INDEX./]
	GTJFN
	0
	MOVEI 2,202000		; READ THAWED (COOPERATIVE OPENING ONLY)
	OPENF
	0
	HRLZS 1			; THIS JFN,,PAGE 0
	MOVE 2,[XWD 400000,GUDID/1000]
	MOVSI 3,100000		; READ ACCESS ONLY

GETID3:	HRR 1,MAPTAB(4)
	PMAP
	AOS 2
	AOBJN 4,GETID3		; INCR PAGE IN FILE POINTER

	HLRZS 1		; GET JFN BACK
	CLOSF
	0
	HRROI 1,[ASCIZ/
SAVE THIS ON FILE: /]
	PSOUT
	MOVSI 1,460002
	MOVE 2,[XWD 100,101]
	GTJFN
	0
	HRLI 1,400000		; MAKE   FORK,,JFN
	MOVE 2,[XWD 577760,20]		; SAVE ALL OF CORE (BUT DDT) NOW
	SAVE
	RESET

	MOVEI 1,400000
	MOVE 3,16		;RESET CAPABILITIES
	EPCAP

	SETO 1,			; SET REMOVAL
	HRLI 2,400000		; THIS FORK
	MOVE 4,[HRR 2,12]	; GET PAGE NUMBER
	MOVE 5,[PMAP]		; REMOVE PAGE
	MOVE 6,[SOJGE 12,4]	; GET THEM ALL!
	MOVE 7,[HALTF]		; CEASE
	MOVEI 12,777		; DO ALL OF CORE
	JRST 4			; GO COMMIT SUICIDE
;
;
;START OF PROGRAM
; THIS IS THE ENTRY POINT FOR THE STNADALONE PORTION OF THE PROGRAM
; THAT ACTUALLY RESTORES THE INDEX BLOCKS ON THE DISK.
;
BEGIN:	SETOM PAGENM		;INIT PAGE POINTER
	MOVE T1,[GUDBUF-1]	;AND BUFFER ADDRESSES
	MOVEM T1,OUTBUF
	MOVE T1,[BADBUF-1]
	MOVEM T1,INBUF

LOOP:	
	AOS T1,PAGENM		; INCREMENT PAGE POINTER
	MOVE T1,ADRTAB(T1)	; GET DISK VIRTUAL ADDRESS
	JUMPL T1,DONE		; ALL DONE IF -1
	MOVEM T1,CURRNT
;
	MOVEI T1,1000	;ALWAYS TRANSFER A PAGE
	MOVEM T1,WCNT	;NO. OF WORDS TO XFER
;
	MOVEI T1,DSKCM
	MOVEM T1,DSKCP	;SET UP CHANNEL COMMAND POINTER
;
        MOVE 1,CURRNT
	CALL CVDSK
	CALL RECAL	;RECAL THIS DRIVE FIRST
	MOVE 1,DSKADR
	CALL SEEK	;DO SEEK FOR THIS BLOCK
	CALL FOUND	;WAIT FOR SEEK TO COMPLETE

RDNXT:	MOVE 1,DSKADR
	LDB T1,[POINT 8,1,13]
	TRNE 1,1B19
	TRO  T1,400
	DATAO PI,T1		;DISPLAY TRACK NO. IN LIGHTS
	IOR 1,[DSKRD+DSKCP]
	SETZM	ERRFLG		;RESET ERROR INDICATOR
	MOVE 2,INBUF		; GET READ BUFFER POINTER
	SETZM ERRWRD
	PUSHJ P,RWDISK		;READ NEXT GROUP OF SECTORS
	JRST RDERR		;HARD READ ERROR

REWRIT:	MOVE 1,DSKADR
	IOR 1,[DSKWRT+DSKCP]	;OR IN WRITE COMMAND
	MOVE 2,OUTBUF		; GET WRITE BUFFER POINTER
	SETZM ERRWRD
	PUSHJ P,RWDISK		;TRY TO WRITE
	JRST WTERR		;CAN'T WRITE IT

GTNXT1:	MOVE T2,WCNT		; GET WORD COUNT PER DISK OPERATION
	ADDM T2,INBUF
	ADDM T2,OUTBUF		; INCREMENT CORE BUFFER POINTERS FOR NEXT
	JRST LOOP		; YES GO LOOK FOR MORE PAGES

DONE:	SETZ T1,
	EXCH T1,LPTOUT	;GET MESSAGE TO GO TO TTY NO MATTER WHAT
	HRRZI 2,[ASCIZ \

INDEX BLOCKS RESTORED.  REBOOT DECTAPE, WRITE ENABLE IT, AND USE:
/0
/D
TO SAVE THIS CORE IMAGE ON 'CRASH' FILE
\]
	PUSHJ P,CTYSTR
	DATAO DSK,[DSKNOP+<NUNIT-1>B5] ;RESET DSK TO DESELECT PACKS
	EXCH T1,LPTOUT
	JRST DDT	;RETURN CONTROL TO DDT
;HARD READ EROR,  CONTINUE TO READ NEXT GROUP OF SECTORS
;SHOULD EVENTUALLY TRY TO READ THIS GROUP IN SMALLER UNITS
;
RDERR:	SETOM ERRFLG	;SET ERROR INDICATOR
	HRRZI 2,[ASCIZ /

******* HARD READ ERROR/]
	PUSHJ P,CTYSTR
	HRRZI 2,[ASCIZ / AT SECTOR NUMBER /]
	PUSHJ P,CTYSTR
	MOVE 2,CURRNT
	PUSHJ P,NOUT
	PUSHJ P,CRLF
	SKIPE HLTF
	JSR ERRHLT
	JRST REWRIT	;WRITE BEST EFFORT AND CONTINUE
;TREAT WRITE ERROR LIKE READ ERROR,  DOESNT REALLY HAPPEN
;IF PACK IS FORMATTED OK.
WTERR:	SETOM ERRFLG	;SET ERROR INDICATOR
	HRRZI 2,[ASCIZ /

****** HARD WRITE ERROR/]
	PUSHJ P,CTYSTR
	SKIPE HLTF
	JSR ERRHLT
	JRST GTNXT1

	END INIT


