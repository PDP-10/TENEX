;<SOURCES>FTSUFK.MAC;3    16-JUL-75 13:57:27    EDIT BY LIEB
;ADDED ANON ACCESS OK CHECK AT CHK1+5 USEING B5 OF DIR PROTECT
;WORD UNUSED ANYWHERE ELSE AS OF TENEX 1.33
;<SOURCES>FTSUFK.MAC;5     7-MAY-75 16:08:27    EDIT BY CLEMENTS
; ADDED INITIALIZATION OF MALCPU
;<SOURCES>FTSUFK.MAC;4    12-MAR-75 00:04:41    EDIT BY CLEMENTS
;<SOURCES>FTSUFK.MAC;3     4-MAR-75 18:55:43    EDIT BY CLEMENTS
; PUT IN VACCT JSYS INSTEAD OF UACHK WHERE AVAILABLE
;<SOURCES>FTSUFK.MAC;2    14-FEB-75 12:57:42    EDIT BY CLEMENTS
; ADD CHECKING OF DIRECTORY ACCESS BITS BEFORE FILE BITS AT CHKACC.
TITLE FTSUFK - FTP SERVER - USER FORK TOP LEVEL ROUTINES
SUBTTL R CLEMENTS / (C) BOLT BERANEK & NEWMAN, INC., 1973

SEARCH STENEX
SEARCH FTSPAR

INTERNAL FTPSA,RPCRLP,APOPJ1,BAPOPJ,APOPJ,PREDAT
INTERNAL JBKINI,TIMINT,KEYLTR,PCRLF
INTERNAL COMLP,MAKFRK,SDUMPA,RELSKT,SCRREP,TIMEOK,CHKACC
INTERNAL RLDINT,SDUMP0,SNDREP,BADINT,CHSSKT,ERRRPL,DECIN1
INTERNAL TIMESA,DECIN,FNDSKX,ACTCHK,LINEIN

EXTERNAL BITTAB,BOMB,BPOPJ,CLOSER,CLOSEK,CPOPJ,CPOPJ1,CRLFM
EXTERNAL GO,KILL,LV2PDP,PDP,TIMCHB

;HERE IS THE START PC OF THE FTP FORK

FTPSA:	RESET			;CLEAR STUFF FOR THIS FORK
	MOVEI F,0		;FLAGS ZERO FOR THIS PROCESS
	MOVE P,PDP		;GET A STACK
	MOVE PX,THISPX		;AND PROCESS INDEX
	MOVEI A,400000		;SET UP A PI SYSTEM IN THIS FORK
	MOVE B,[LEVTB2,,CHNTB2]
	SIR
	MOVE B,CHMSK2		;CHANNELS WANTED ON
	AIC
	EIR			;TURN ON THE PI SYSTEM
	MOVNI A,6		;COUNT LOGIN TRIES
	MOVEM A,LGICNT		; ..
	SETOM $USER		;SET ALL COMMAND PARAMS TO NIL
	SETOM $PASS
	SETOM $ACCT
	SETOM $BYTE
	SETOM $SOCK
	SETOM $HOST
	SETOM $TYPE
	SETOM $STRU
	SETOM $MODE
	SETOM $PATH1
	SETOM $PATH2
	SETOM DATJFN
	SETOM LCLJFN
	SETOM LOGJFN
	SETOM BNLJFN
	SETZM TRBITS		;TOTAL RECEIVED BITS
	SETZM TSBITS		;TOTAL SENT BITS
	MOVEI A,400000		;RUNTIME FOR THIS FORK
	RUNTM
	MOVEM A,IFRKTM		;SAVE.
	SETZM MALCPU		;NO TIME SPENT IN MAIL RCVR YET
;FALL THRU

;FALLS THRU
	SKIPN DEBUGS		;DEBUGGING?
	JRST FTPSA1		;NO
	MSG <STARTED PROCESS >
	MOVEI A,101
	MOVEI B,(PX)		;PROCESS NUMBER
	MOVEI C,10		;OCTAL
	NOUT
	  JFCL
	PUSHJ P,PCRLF
FTPSA1:	SETOM ACTJFN		;INITIALIZE ACCOUNT VERIFIER
	SETOM ACTFRK		;FLAG NO VERIFIER IN CASE LOSES.
	MOVE A,SVERNM		;WHAT KIND OF TENEX MONITOR IS THIS?
	CAIL A,^D13300		;DOES IT HAVE ACCOUNT VALIDATION JSYSES?
	JRST INIA2		;YES. DON'T DO THIS UACHK STUFF ANY MORE
	MOVSI A,(1B1)		;CREATE A FORK WITH CAPS
	CFORK
	  JRST [MOVEI A,^D5000
		DISMS
		JRST .-2]
	MOVEM A,ACTFRK
	MOVSI A,100001
	HRROI B,[ASCIZ /<SYSTEM>UACHK.SAV/]
	GTJFN
	  JRST INIA1		;NO SUCH PROGRAM.
	MOVEM A,ACTJFN
	HRL A,ACTFRK		;FORK WHERE IT WILL RUN
	GET
	JRST INIA2		;OK.
INIA1:	CLOSE (ACTJFN)		;GET RID OF JFN
	SKIPL A,ACTFRK		;AND FORK
	KFORK
	SETOM ACTFRK		;FLAG NOT ACCOUNT CHECKING
INIA2:
	JRST GETCOM		;FIRST TIME, SIBE WONT FIND LINE.

COMLP:	TLNE F,L.CMDK		;FORCED ABORT DUE TO PREV CMD?
	JRST FABORT		;YES.
	MOVE A,RJFN		;SEE IF ANY TELNET STUFF APPEARED
	TLNE F,L.ACTV		;ALWAYS GET COMMAND IF NO FILE ACTIVE
	SIBE			; ..
	  JRST GETCOM		;YES. READ IT.
	MOVEI A,^D5000		;WAIT FOR FIVE SECONDS
	DISMS
	JRST COMLP		;SEE IF A COMMAND HAS COME IN YET

GETCOM:	MOVE A,[440700,,REPLYM]	;START POINTER TO REPLY
	MOVEM A,REPLYP		;..
	PUSHJ P,TIMEOK		;MARK TIME ACTIVITY OCCURRED
	PUSHJ P,LINEIN		;READ A LINE, IF POSSIBLE
	  JRST NOLINE		;NOT THERE. EOF OR LONG LONG LINE
	SKIP DEBUGS		;MAKE SKIPN IF WANT COMMANDS TYPED
	JRST GETCM1		;NO
	HRROI A,CMDIB		;STRING POINTER TO COMMAND JUST READ
	PSOUT			;TYPE IT
	PUSHJ P,PCRLF		;PRIMARY OUTPUT CRLF
GETCM1:	MOVE A,['ENTFLG']
	SYSGT			;SEE IF SYSTEM LETTING USERS ON
	JUMPE B,PARSE		;IF NO TABLE, GO ON.
	JUMPN A,PARSE		;IF NON-ZERO, GO ON
	HRROI B,[ASCIZ /436 Service shutting down; goodbye./]
	JRST ERRRPL		;TELL HIM AND HANG UP

;FALL IN FROM ABOVE

PARSE:	MOVE BP,[440700,,CMDIB]	;POINTER TO START OF COMMAND
	SETZB A,B		;CLEAR KEYWORD STORE IN A, LTR CNT IN B
	MOVE D,[440700,,A]	;POINT TO ANSWER
PARSEL:	ILDB C,BP		;GET A COMMAND CHARACTER
	CAIL C,"A"+40		;LOWER CASE LETTER?
	CAILE C,"Z"+40		; ..
	SKIPA			;NO
	TRZ C,40		;YES. MAKE UPPER CASE
	CAIL C,"A"		;LETTER?
	CAILE C,"Z"		; ..
	SKIPA			;NO
	JRST PRSLTR		;YES
	CAIL C,"0"		;ALLOW DIGITS. SPEC IS VAGUE ON THIS.
	CAILE C,"9"		;DIGIT?
	JRST PARS01		;NOT LETTER OR DIGIT
PRSLTR:	TLNE D,760000		;ROOM FOR ANOTHER LETTER? SHOULD BE.
	IDPB C,D		;YES. ACCUMULATE WORD
	AOJA B,PARSEL		;COUNT LETTERS, LOOP TILL BREAK.

PARS01:	MOVEM A,KEYWRD		;SAVE THE KEY WORD ACCUMULATED
	SETZM KEYWRD+1		;IN CASE FIVE CHARACTERS
	JUMPE B,BLANKQ		;IF NO LETTERS AT ALL, BLANK LINE MAYBE
	CAILE B,5		;SPEC SAYS UP TO 4 CHARACTERS, ALLOW 5
	JRST BADKEY		;NO GOOD.
PARS02:	CAIE C,11		;SKIP A SPACE OR TAB SEPR
	CAIN C,40		; ..
	ILDB C,BP		;SKIP THE BREAK CHAR
	MOVEM C,ARGCH		;STORE THIS POINT IN SCAN
	MOVEM BP,SBP		; ..
	MOVSI B,-NKEYS		;COUNTER FOR LEGAL WORDS
KEYLKL:	HRRZM B,KEYX		;STORE CURRENT KEY INDEX
	CAMN A,KEYASC(B)	;CHECK ASCII TABLE
	JRST KEYFND		;FOUND THE KEYWORD
	AOBJN B,KEYLKL		;SEARCH TABLE
KEYUNK:	HRROI B,MS500A
	MOVE A,REPLYP		;WHERE TO STORE ANSWER
	MOVEI C,0
	SOUT			;PUT FIRST PART OF MESSAGE OUT
	HRROI B,KEYWRD		;GIVE BACK KEYWORD
	MOVEM A,REPLYP		;PARTIAL MESSAGE POINTER
	JRST RPCRLP		;SEND IT, ADD CRLF, AND LOOP.

KEYFND:	CAMN A,[ASCII /RNTO/]	;RENAME TO COMMAND?
	  JRST [TLZN F,L.RNFR	;YES.WAS LAST A REN FROM?
		JRST KEYSQX	;NO. ERROR.
		JRST KEYFN1]	;YES. OK.
	TLZE F,L.RNFR		;NOT REN TO. WAS LAST REN FRM?
	JRST KEYSQX		;YES. SO IN WRONG ORDER.
KEYFN1:	CAMN A,[ASCII /RNFR/]	;IS THIS A RENAME FROM?
	TLO F,L.RNFR		;YES. REMEMBER FOR ABOVE CHECK NEXT CMD.
	MOVE B,KEYADR(B)	;GET BITS AND DISPATCH
	TLNE B,K.NOAN		;MAY THIS COMMAND BE DONE BY ANON USR?
	TLNN F,L.ANON		;NO. IS HE ANONYMOUS?
	SKIPA
	JRST ANONER		;YES. HE LOSES.
	TLNE B,K.LOGI		;LOGIN REQUIRED?
	TLNE F,L.LOGI		;YES. LOGGED IN?
	JRST 0(B)		;NOT REQ OR LOGGED IN. DISPATCH
	HRROI B,LOGM1		;NOT LOGGED IN. COMPLAIN
	SKIPUNLESS ALGI
	HRROI B,LOGM1A		;DIFFERENT MESSAGE IF NEED ACCT
	JRST RPCRLP		; ..

KEYSQX:	HRROI B,MSG505		;RENAME PAIR WRONG.
	JRST RPCRLP		;SAY SO.

ANONER:	HRROI B,LOGM2		;TELL HIM TO LOG IN AS REAL USER
	JRST RPCRLP

ERRRPL:	TLO F,L.CMDK		;A FATAL ERROR COMMON RETURN
	JRST RPCRLP		; ..

BLANKQ:	JUMPE C,BLANK		;IF END OF LINE ALREADY, JUMP.
	CAIE C,11		;TAB OR SPACE AT BEGINNING?
	CAIN C,40		; ..
	JRST PARSEL		;YES. VIOLATES SPEC, BUT TRY ANYWAY.
	JRST BADKEY		;NO. UNDECIPHERABLE.

NOTIMP:	MOVE A,REPLYP		;BUILD A PRETTY YOU-LOSE MSG
	HRROI B,MS506A		;ERROR CODE
	MOVEI C,0		;  ..
	SOUT
	HRROI B,KEYWRD		;HIS WORD
	MOVEI C,0
	SOUT
	HRROI B,MS506B		;LAST HALF OF ERROR
	MOVEM A,REPLYP		;POINTER SO FAR. FALL INTO OUTPUTTER.
RPCRLP:	MOVE A,REPLYP		;GET CURRENT POINTER POSITION FOR REPLY
	MOVEI C,0
	SOUT
	MOVEM A,REPLYP		;POINTER SO FAR.
	PUSHJ P,SCRREP		;SEND CRLF AND REPLY TO TELNET.
	JRST COMLP		;READ NEXT COMMAND

BLANK:	HRROI B,[ASCIZ /200 Blank line ignored/]
	JRST RPCRLP		;SEND ACKNOWLEDGEMENT FOR BLANK LINE

;HERE WHEN GETLIN GAVE BAD RETURN

NOLINE:	TLNN F,L.LTL		;LINE TOO LONG?
	JRST KILL		;NO. KILL THE CONNECTION, IT CLOSED.
BADKEY:	HRROI B,MSG500		;JUNK COMMAND LINE MESSAGE
	JRST RPCRLP		;REPLY TO BUFFER, CRLF, LOOP.

FABORT:	JRST KILL		;AND KILL SELF

LOGM1:	ASCIZ /451 You have not supplied name and password./
LOGM1A:	ASCIZ /451 Please login with Name, Password and Account./
LOGM2:	ASCIZ /432 Action not allowed for anonymous users./
MSG500:	ASCIZ /500 Last line was incomprehensible./
MS500A:	ASCIZ /500 I don't recognize the command /
MSG505:	ASCIZ /505 Commands in wrong sequence./
MS506A:	ASCIZ /506 The /
MS506B:	ASCIZ / command is not implemented in this server./

;BITS IN L H (KEYADR) FOR DISPATCH, ETC.
K.LOGI==(1B0)	;MUST BE LOGGED IN TO DO COMMAND.
K.NOAN==(1B1)	;MUST NOT BE ANONYMOUS TO DO COMMAND

DEFINE KEYS <
M USER,0
M PASS,0
M BYTE,0
M SOCK,0
M TYPE,0
M STRU,0
M MODE,0
M RETR,K.LOGI
M STOR,K.LOGI
M APPE,K.LOGI
M RNFR,K.LOGI!K.NOAN
M RNTO,K.LOGI!K.NOAN
M DELE,K.LOGI!K.NOAN
M LIST,K.LOGI
M NLST,K.LOGI
M ALLO,K.LOGI
M REST,0
M STAT,K.LOGI
M ABOR,0
M BYE,0
M ACCT,0
M MAIL,0
M MLFL,0
M NOOP,0
M CWD,K.LOGI
M XCWD,K.LOGI
M HELP,0
>
DEFINE M (A,B)<	ASCII /A/>
KEYASC:	KEYS
NKEYS==.-KEYASC		;LENGTH OF TABLE

DEFINE M (A,B) <
..'A==.-KEYADR
EXTERN A'$
	XWD B,A'$
>
KEYADR:	KEYS

;SUBROUTINE TO READ A COMMAND LINE FROM TELNET RECEIVE SKT
;CALLED WHEN THERE APPEARS TO BE SOMETHING TO READ, OR AT
;BEGINNING OF PROCESS WHEN SIBE LOSES ON NETWRK FILE

;SKIP RET UNLESS EOF OR LINE TOO LONG

LINEIN:	TLZ F,L.LTL		;ASSUME NOT LINE TOO LONG
	SETZM CMDIB		;CLEAR IT OUT, TO BE NEAT.
	MOVE A,[CMDIB,,CMDIB+1]
	BLT A,CMDIB+CMDIBL-1	; ..
	MOVE A,[440700,,CMDIB]	;POINTER TO COMMAND BUFFER
	MOVEM A,SBP		;STRING BUFFER POINTER
	MOVEI X,<CMDIBL*5>-3	;COUNT LENGTH OF BUFFER MINUS SAFETY
LININL:	PUSHJ P,TELBIN		;GET A CHARACTER
	  POPJ P,0		;EOF. SOCKET WENT DEAD.
	CAIN B,12		;DEFINED END OF LINE TERMINATOR
	JRST LINEOL		;YES.
	CAIE B,0		;SKIP NULLS AND CAR RETS
	CAIN B,15
	JRST LININL
	IDPB B,SBP		;STORE THE CHARACTER
	SOJG X,LININL		;GO GET SOME MORE, IF ROOM
	TLO F,L.LTL		;WAY TOO LONG A LINE
	POPJ P,0		;FAIL RETURN

LINEOL:	MOVEI B,0		;MAKE SURE LINE IS TERMINATED
	IDPB B,SBP		;WITH A NULL
	JRST CPOPJ1		;GOOD RETURN.

TELBIN:	MOVE A,RJFN
	BIN			;READ A CHARACTER
	JUMPE B,TELBI0		;SEE IF EOF IF ZERO READ.
TELBN1:	CAIG B,177		;CHECK FOR TELNET CONTROL CHARACTERS
	JRST CPOPJ1		;NO, REAL ASCII. RETURN IT.

TELCON:	CAIE B,201		;ABORTS?
	CAIN B,200		; ..
	JRST [TLO F,L.LTL	;YES. PRETEND HUGE LINE
		POPJ P,0]	;AND RETURN, FORCING 500 CODE.
;;;HANDLE ANY MORE TELNET CONTROLS WANTED HERE
	JRST TELBIN		;AND GO GET A REAL CHAR FOR MAIN LINE

TELBI0:	GTSTS			;STATUS OF THIS FILE
	TLC B,600000		;OPEN AND READ BITS
	TLNE B,601000		;EOF OR NOT OPEN FOR READ?
	POPJ P,0		;BAD
	JRST TELBIN		;WAS A REAL NULL. BUT THROW IT AWAY.

;SUBROUTINE TO FIND THE SOCKET INDEX INTO SYSTEM TABLES FOR THE
;LOCAL LISTENING SOCKET. HAS TO MATCH IN LOCAL SOCKET, 4N SKT AND 4N HST

FNDSKX:	HLLZ D,NSKTS		;AOBJN COUNTER -N,,0
FSKXL:	MOVE A,STSN		;FIND A SOCKET IN RFCR STATE
	HRL A,D			;CURRENT INDEX
	GETAB			;GET THE STATUS FOR A SOCKET
	  JRST FSKXX		;CAN'T FAIL
	ROT A,4			;GET STATE FIELD
	ANDI A,17		; ..
	CAIE A,FSRFCR		;IN RIGHT STATE?
	JRST FSKXX		;NO. TRY ANOTHER ONE.
	MOVE A,LSKN		;TABLE FOR LOCAL SOCKET
	HRL A,D			;CURRENT COUNT
	GETAB
	  SETO A,
	CAME A,ABSLSS		;RIGHT LOCAL SOCKET?
	JRST FSKXX		;NO
	MOVE A,AWDN		;PLACE WHERE FOREIGN HOST HIDES
	HRL A,D
	GETAB
	  SETO A,
	LDB A,[POINT 9,A,17]	;HOST BYTE
	CAME A,FHSTN		;RIGHT HOST?
	JRST FSKXX		;NO
	MOVE A,FSKN
	HRL A,D
	GETAB
	  SETO A,
	CAME A,FORNS		;RIGHT FOREIGN SOCKET?
FSKXX:	AOBJN D,FSKXL		;NOT A MATCH
	SKIPL D
	POPJ P,			;NOT FOUND
	HRRZM D,LSNSKX
	JRST CPOPJ1		;SUCCESS

;SUBROUTINES

;SUBROUTINE TO MAKE AN INFERIOR. THE INFERIOR'S HANDLE IS
;RETURNED IN A. THE MAP FOR THE INFERIOR IS SET TO POINT TO
;THE SUPERIOR UP THROUGH GLOBAL STORAGE, THEN THE PROCESS STORAGE IS
;PUT IN THE INFERIOR'S MAP AND REMOVED FROM THE SUPERIOR'S MAP.
;THUS WHEN THE SUPERIOR STARTS ANOTHER ICP, A NEW
;PROCESS STORAGE AREA GETS CREATED.

MAKFRK:	MOVEI PX,0		;FIND A TABLE SLOT FOR IT
MKFKL0:	SKIPG FORKXT(PX)	;THIS SLOT FREE?
	JRST MAKFK0		;YES.
	CAIGE PX,NFORKS-1	;TRIED THEM ALL?
	AOJA PX,MKFKL0		;NO. TRY NEXT.
MAKFKX:	SETO PX,		;YES. NONE LEFT. RESET TO TOP LVL IDX
	POPJ P,0		;AND FAIL RETURN
MAKFK0:	HRRZ A,FORKXT(PX)	;FORK STILL EXIST FOR RE-USE?
	CAIE A,-1		;IF SO, HAVE FORK HANDLE.
	JRST [	PUSH P,A	;YES. STORE IT
		JRST MAKFK2]	;AND COPY PRIVATE STORAGE.
	MOVSI A,(1B1)		;PASS ON CAPABILITIES
	CFORK			;GET A FORK
	  JRST MAKFKX		;CAN'T. FAIL RETURN.
	PUSH P,A		;HOLD HANDLE ON STACK
	MOVE A,[400000,,770]	;IS DDT PRESENT?
	RPACS
	TLNE B,(1B5)		; ..
	SKIPA D,[-777770]	;YES. PRETEND STORAGE RUNS TO TOP
	MOVNI D,GSTOP		;HOW MUCH ADDRESS SPACE TO MAKE SAME
	LSH D,11		;IN PAGES
	HRRI D,0		;-#PAGES,,0
MKFKL1:	MOVEI A,0(D)		;THE SOURCE PAGE
	HRLI A,400000		;AND FORK
	RPACS			;DOES IT EXIST?
	TLNN B,(1B5)		; ..
	JRST MKFKN1		;NO. DON'T MAKE A POINTER.
	HRLZ B,0(P)		;YES. DESTINATION FORK
	HRRI B,(D)		;AND PAGE
	MOVSI C,160000		;AND RWX ACCESS ALLOWED
	PMAP			;CREATE THE PAGE IN INFERIOR
MKFKN1:	AOBJN D,MKFKL1		;COPY THE CODE AND GLOBAL PAGES

;FALL THRU

;FALL THRU FROM ABOVE
MAKFK2:	MOVEM PX,THISPX		;TELL THE PROCESS ITS NAME

	MOVNI D,PSTOP-<PSPAG*1000>
	LSH D,11		;-#PAGES,,
	HRRI D,PSPAG		;FIRST PAGE TO COPY
MKFKL2:	HRLZ B,0(P)		;GET FORK HANDLE OF INFERIOR
	HRRI B,(D)		;PAGE OF PRIVATE STORAGE
	SETO A,			;MAKE IT GO AWAY
	PMAP
	MOVE A,B		;NOW THE LOWER GUY AGAIN
	MOVE B,[400000,,BLTPAG]	;THRU THIS TEMP IN TOP FORK
	MOVE C,BLTADR		;CREATE PAGE HERE IF NEEDED
	MOVSI C,160000		;RWX ACCESS
	PMAP			;POINT DOWN TO PRIVATE PAGE BELOW
	HRRZ C,D		;PAGE OF PRIV STORAGE
	ROT C,-11		;AS ADDRESS IN LH
	HRRI C,BLTADR		;WHERE TO SEND IT THRU
	BLT C,BLTADR+777	;SEND IT.
	AOBJN D,MKFKL2		;ALL OF PRIVATE STORAGE
	SETO A,			;NOW DISCARD THE BLT TEMP PAGE
	MOVE B,[400000,,BLTPAG]
	PMAP
APOPJ1:	POP P,A
	JRST CPOPJ1

;SUBROUTINE CALLED BY DATA MOVEMENT COMMANDS. PREPARES THE
;DATA SOCKET. IF NECESSARY, SENDS SERVER SOCKET REPLY (255)
;AND OPENS THE CONNECTION.
;SKIP RETURN IF OK, ELSE NON-SKIP WITH ERROR MSG IN B.
;NEEDS L.SEND AS ARG, PLUS THE SOCKET PARAMS.

PREDAT:
PRED1:	SKIPGE A,DATJFN		;IS THERE A DATA JFN?
	JRST PRED2A		;NO.
	GTSTS			;YES. IS IT THE RIGHT KIND?
	TLNN B,(1B0)		;OPEN?
	JRST PRED2		;NO.
	TLNE F,L.SEND		;YES. IS FILE FOR SENDING?
	TLNN B,(1B2)		;AND SOCKET OPEN FOR OUTPUT
	JRST PRED1A		;NO.
	JRST PRED3		;YES. USE IT.
PRED1A:	TLNN F,L.SEND		;IS FILE FOR RECEIVING?
	TLNN B,(1B1)		;AND SOCKET FOR INPUT?
	JRST PRED2		;NO.
	PUSHJ P,PRE255		;SEND SOCKET REPLY
	JRST PRED3		;YES. USE IT.

PRED2:	CLOSF			;SOCKET NO GOOD FOR THIS USE
	  JFCL
PRED2A:	SETOM DATJFN		;NO CURRENT DATA JFN
	MOVE A,[440700,,GTJSTR]	;START POINTER TO NEW SOCKET STRING
	HRROI B,[ASCIZ /NET:/]	;DEVICE NAME FOR GTJFN
	MOVEI C,0
	SOUT
	MOVE B,SKTS		;SOCKET "S"
	ADDI B,2		;STEP PAST TELNET SOCKETS
	TLNE F,L.SEND		;AND SET DIRECTION BIT
	ADDI B,1
	MOVEI C,10		;OCTAL NUMBER IN NCP
	NOUT
	  PUSHJ P,BOMB
;FALL THRU

;FALL THRU FROM ABOVE
PRED2B:	MOVEI B,"."		;NOW FOREIGN HOST AND SOCKET
	IDPB B,A		;SEPARATOR
	SKIPGE B,$HOST		;WAS A HOST NUMBER SUPPLIED?
	MOVE B,FHSTN		;NO. SAME ONE AS TELNET FROM
	MOVEI C,10		;OCTAL FOR NCP
	NOUT
	  PUSHJ P,BOMB
	MOVEI B,"-"		;SEPARATE HOST AND SOCKET NUMBERS
	IDPB B,A
	SKIPGE B,$SOCK		;DID HE SPECIFY A SOCKET?
	JRST [	MOVE B,FORNS	;NO. USE DEFAULTS OF U+4 OR 5
		ADDI B,4	; ..
		TLNN F,L.SEND	;IF WE'RE NOT SENDING, HE IS.
		ADDI B,1	;SO HIS SOCKET IS ODD NUMBERED.
		JRST .+1]
	MOVEI C,10		;OCTAL
	NOUT
	  PUSHJ P,BOMB
	HRROI B,[ASCIZ /;T/]	;JOB-LOCAL SOCKET
	MOVEI C,0
	SOUT
	PUSHJ P,TIMEOK		;UPDATE TIMER
PRED2C:	MOVSI A,1		;SHORT STRING GTJFN FOR DATA SOCKET
	HRROI B,GTJSTR		;NAME WE BUILT
	GTJFN			;GET JFN FOR DATA SOCKET
	  JRST PREDX1		;OOPS. CAN'T.
	MOVEM A,DATJFN		;SAVE DATA JFN
	CVSKT			;ITS ABSOLUTE VALUE
	  JRST PREDX2		;CAN'T FAIL
	TLNN F,L.SEND		;SET SEX BIT
	TRZA B,1		;RECEIVE
	TRO B,1			;SEND
	MOVEM B,MYDATS		;TO TELL USER
	PUSHJ P,PRE255		;SEND SOCKET REPLY

;FALL THRU AGAIN

;FALL THRU FROM ABOVE
PRED2D:	PUSHJ P,TIMEOK		;UPDATE TIMER
	SKIPG B,$BYTE		;WAS A BYTE SIZE RECEIVED?
	MOVEI B,10		;NO. DEFAULT IS EIGHT.
	LSH B,36		;TO PLACE IT BELONGS IN OPENF
	TLNE F,L.SEND		;AND READ OR WRITE BIT
	TDOA B,[002400,,100000]	;WRITE, BUFFERED SEND.
	TRO B,1B19		;READ
	MOVE A,DATJFN		;THE JFN FOR IT
	OPENF			;OPEN THE CONNECTION, NORMAL WAIT MODE.
	  JRST PREDX2		;CAN'T.
PRED3:	JRST CPOPJ1		;GOOD RETURN FROM PREPARE DATA SOCKET.

PREDX2:	MOVE A,DATJFN		;FAILURE. CLOSE AND RELEASE JFN
	CLOSF
	  JFCL
PREDX1:	SETOM DATJFN		;NO DATA SOCKET.
	HRROI B,DATSM1		;ERROR MESSAGE.
	POPJ P,0		;AND FAIL-RETURN.

PRE255:	MOVE A,SJFN		;SEND A SERVER SOCKET REPLY
	HRROI B,[ASCIZ /255 SOCK /]	;SPECIFIED FORMAT
	MOVEI C,0
	SOUT
	MOVE B,MYDATS		;MY DATA SOCKET NUMBER
	MOVEI C,12		;SEND IN DECIMAL
	NOUT
	  PUSHJ P,BOMB
	HRROI B,CRLFM		;END OF LINE
	PUSHJ P,SDUMP0		; SEND AND DUMP BUFFER
	POPJ P,0		;RETURN

DATSM1:	ASCIZ /454 UNABLE TO ESTABLISH DATA CONNECTION./

JBKINI:	SETZM JBLOCK		;SET UP FOR LONG FORM GTJFN
	MOVE A,[JBLOCK,,JBLOCK+1]
	BLT A,EJBLOK		;CLEAR IT FIRST
	HRROI A,USERST		;IN USER'S DIRECTORY AS DEFAULT
	MOVEM A,JBLOCK+3
	MOVE A,[377777,,377777]	;NO TTY I/O
	MOVEM A,JBLOCK+1
	MOVE A,$ACCT		;WAS THERE AN ACCOUNT COMMAND?
	CAMN A,[-1]		; ..
	JRST JBKIN1		;NO.
	TLNN A,700000		;YES. NUMBER OR STRING?
	TLO A,500000		;NUMBER. MAKE IT WHAT GTJFN WANTS
	MOVEM A,JBLOCK+7	;AND PUT IN BLOCK
JBKIN1:	POPJ P,0

ACTCHK:	SKIPGE ACTFRK		;ACCOUNT VERIFIER EXIST?
	JRST ACTCK2		;NO. SEE IF IT'S IN MONITOR
	PUSH P,A		;PRESERVE ARGUMENT
	TLNE A,700000		;BYTE POINTER?
	JRST ACTCKS		;YES. CHECK STRING.
	TLO A,500000		;NO. MAKE IT A DESIGNATOR FOR NUMBER
	MOVEI C,1		;ENTRY FOR NUMERIC CHECK
	MOVEM A,ACTACS+10	;SUPPLY ARG
	JRST ACTCK1		;GO CHECK IT.
ACTCKS:	MOVSI A,(A)		;STRING STORAGE
	HRRI A,ACTACS+10	;TO ACS OF CHECKER
	BLT A,ACTACS+17		;COPY STRING
	MOVEI C,2		;ENTRY POINT FOR STRING CHECKER
ACTCK1:	MOVE A,[USERST,,ACTACS]	;SUPPLY USER NAME IN ACS 0-7
	BLT A,ACTACS+7		; ..
	MOVE A,ACTFRK		;FORK HANDLE
	MOVEI B,ACTACS		;SET THE ACS WITH ARGS
	SFACS
	MOVEI B,(C)		;ENTRY VECTOR OFFSET
	SFRKV
	WFORK			;MAKE IT GO AND WAIT FOR IT
	MOVEI B,ACTACS		;READ BACK THE ACS
	RFACS
	MOVE B,ACTACS+1		;THE ANSWER
	POP P,A			;RETURN THE CALLER'S ACCT ARGUMENT
	JUMPE B,CPOPJ1		;SUCCEEDED IF RETURNED A ZERO
	POPJ P,0		;ELSE FAILED. NOT VALID OR ERROR.

ACTCK2:	MOVE B,SVERNM		;GET MONITOR VERSION
	CAIGE B,^D13300		;IF 1.33 OR LATER, OK TO TRY JSYSES
	JRST CPOPJ1		;NO, NO WAY TO CHECK. ALLOW ALL.
	PUSH P,A		;OK, SAVE THE ARGUMENT
	MOVEI A,400000		;TURN OFF MY CAPS
	RPCAP
	PUSH P,B
	PUSH P,C
	MOVEI C,0
	EPCAP			;SO IT DOESN'T RETURN GOOD ALL THE TIME
	MOVE B,-2(P)		;GET THE ARGUMENT TO TEST
	TLNN B,(7B2)		;FILE OR NUMERIC?
	TLO B,(5B2)		;NUMERIC. CONVERT FOR JSYS
	HRRZ A,$USER		;AND THE USER TO TEST IT FOR
	VACCT			;VALIDATE THE ACCOUNT
	  SOS -3(P)		;NO GOOD.
	POP P,C
	POP P,B			;RESTORE FORK CAPS
	MOVEI A,400000
	EPCAP
	POP P,A			;RESTORE CALLED ARGUMENT
	JRST CPOPJ1		;SKIP OR NON-SKIP RETURN

;TIMING INTERRUPT IN TOP FORK - LOOK OVER THE INFERIORS.

TIMINT:	MOVEM 17,LV2AC+17	;SAVE AC'S
	MOVEI 17,LV2AC		; ..
	BLT 17,LV2AC+16		; ..
	MOVE P,LV2PDP		;GET A STACK FOR THIS LEVEL
	TIME			;GET CURRENT UPTIME
	MOVEM A,TODCLK		;STORE IN CORE
	MOVSI X,-NFORKS		;SEARCH FORK TIME TABLES
TIMINL:	SKIPG A,FORKXT(X)	;THIS ONE EXIST?
	JRST TIMINN		;NO.
	MOVE B,KTIMET(X)	;YES. IS IT HUNG?
	CAML B,TODCLK		; ..
	JRST TIMINN		;NO.
	PUSHJ P,TIMIKQ		;YES. KILL OR WHATEVER AS APPROPRIATE
TIMINN:	AOBJN X,TIMINL		;SEARCH WHOLE FORK TABLE
LV2RET:	MOVSI 17,LV2AC		;RESTORE AC'S FROM LEVEL 2 BREAK
	BLT 17,17		; ..
	DEBRK			;RETURN FROM PSI

TIMIKQ:	SETO C,			;A MINUS 1
	CAMN C,KTIMET(X)	;IS THAT THE KILL TIME?
	JRST TIMIKY		;YES, KILL THE FORK.
	SKIPE DEBUGS		;IF DEBUGGING,
	POPJ P,0		;DON'T KILL IT.
	HFORK			;NO. NEEDS TO GO THROUGH CLOSES.
	MOVEI B,KILL		;SET CLOSEDOWN ADDRESS
	SFORK			;AND START IT THERE
	POPJ P,0		;RETURN

TIMIKY:	TRNN X,-2		;IF PROCESS 0 OR 1, KEEP IT AROUND
	JRST TIMIKZ		;SO REDUCE CFORK DELAYS
	KFORK			;FORK IS READY TO KILL OFF.
	SETOM FORKXT(X)		;AND FREE ITS TABLE INDEX
	POPJ P,0		;RETURN FROM TIMIKQ
TIMIKZ:	HFORK			;JUST STOP IT
	HRROS FORKXT(X)		;MAKE NEGATIVE BUT KEEP HANDLE
	POPJ P,0

;BAD INTERRUPTS IN TOP FORK. JUST RESET AND RESTART.
BADINT:	MOVEM 17,LV2AC+17	;SAVE AC'S, THOUGH WON'T USE YET.
	MOVEI 17,LV2AC		; ..
	BLT 17,LV2AC+16
	MOVE P,LV2PDP		;AND A STACK
	HRROI A,[ASCIZ /
FTPSRV CRASH AT /]
	PSOUT
	MOVEI A,101		;TYPE PC
	MOVEI C,10
	HRRZ B,RETPC2
	SUBI B,1
	NOUT
	  JFCL
	MSG <
>
	MOVEI A,101
	MOVEI C,0
	HRLOI B,400000		;LAST ERROR IN THIS FORK
	ERSTR
	  JFCL
	  JFCL
	HRROI A,[ASCIZ / - RESTARTING
/]
	PSOUT
	MOVE A,[010000,,GO]
	MOVEM A,RETPC2		;DEBREAK TO START ADDRESS
	DEBRK

RLDINT:	MOVEM 17,LV2AC+17
	MOVEI 17,LV2AC
	BLT 17,LV2AC+16
	MOVE P,LV2PDP
	RESET
	HRROI A,[ASCIZ /
FTPSRV reloading self - /]
	PSOUT
	MOVEI A,101
	MOVNI B,1
	MOVEI C,0
	ODTIM
	HRROI A,CRLFM
	PSOUT
	MOVSI A,100001
	HRROI B,[ASCIZ /<SYSTEM>FTPSRV.SAV/]
	GTJFN
	  JRST [HRROI A,[ASCIZ /CAN'T RELOAD - RESTARTING
/]
		PSOUT
		JRST GO]
	HRLI A,400000
	MOVE B,[GET]
	MOVE C,[MOVEI A,400000]
	MOVE D,[GEVEC]
	MOVE 5,[JRST 0(B)]
	JRST B

;SUBROUTINE TO CHOOSE A SOCKET FROM THE POOL

CHSSKT:	SETCM A,SKTMSK		;BITS FOR FREE SOCKETS
	JFFO A,.+2		;PICK LEFTMOST
	  PUSHJ P,BOMB
	MOVEI A,(B)		;ANS IN A
	MOVE B,BITTAB(A)	;ALLOCATE IT
	IORM B,SKTMSK
	MOVEM B,SKTBIT		;SAVE THIS BIT TO RELEASE LATER
	LSH A,2			;BY FOURS. TELNET ON S,S+1,
				; DATA ON +2 OR +3
	ADDI A,3000		;OFFSET TO HOPEFULLY FREE GROUP
	POPJ P,0

RELSKT:	MOVE B,SKTBIT		;GET BIT FOR SOCKET TO RETURN, IF ANY.
	ANDCAM B,SKTMSK		;CLEAR SOCKET ALLOCATION BIT
	POPJ P,0

SCRREP:	MOVE A,REPLYP		;PICK UP POINTER SO FAR
	HRROI B,CRLFM		;ADD A CR LF PAIR
	MOVEI C,0
	SOUT
SNDREP:	HRROI B,REPLYM
	PUSHJ P,SDUMPA		;SEND BUFFERED MESSAGE TO USER, DUMP BFR
	MOVE A,[440700,,REPLYM]	;RESET POINTER TO TOP
	MOVEM A,REPLYP
	POPJ P,0		;RETURN

KEYLTR:	MOVE D,A		;COPY ARGUMENT LIST
	HRRI A,0		;SO CAN GIVE BACK INDEX.
	JUMPE C,CPOPJ		;FAIL IMMEDIATELY IF NULL ARGUMENT
	CAIL C,"A"+40		;CRUNCH LOWER CASE TO UPPER
	CAILE C,"Z"+40		; ..
	SKIPA			;NOT LOWER CASE
	TRZ C,40		;MAKE UPPER CASE.
KEYLTL:	HLRZ B,0(D)		;GET LEGAL GUY TO LOOK FOR
	CAMN B,C		;THIS IT?
	JRST KEYLT1		;YES.
	AOBJN A,.+1		;COUNT BOTH POINTERS
	AOBJN D,KEYLTL		;GO BACK TO LOOK FOR MORE
	POPJ P,0		;DOESN'T MATCH ANY OF THEM
KEYLT1:	HRRZ B,0(D)		;GET THE DISPATCH ADDRESS
	JRST CPOPJ1		;AND SKIP RETURN TO CALLER

TIMESA:	MOVEI A,^D5000		;FIVE SECOND TIME TICKS
	DISMS			;SLEEP
	MOVEI A,-1		;NAME OF SUPERIOR
	MOVE B,TIMCHB		;BIT FOR INTERRUPT CHANNEL
	IIC			;WAKE SUPERIOR
	JRST TIMESA		;KEEP TICKING UNTIL STOPPED FROM ABOVE

;MORE MISC SUBROUTINES

DECIN1:	ILDB C,BP		;SKIP SEPARATOR FIRST
DECIN:	MOVEI A,0		;COLLECT DECIMAL NUMBER ARGUMENT
	PUSH P,BP		;SAVE ORIGINAL BYTE POINTER
DECINL:	CAIL C,"0"		;DECIMAL DIGIT?
	CAILE C,"9"		; ..
	JRST DECINX		;NO.
	IMULI A,12		;YES. ACCUMULATE NUMBER
	ADDI A,-"0"(C)		; ..
	ILDB C,BP
	JRST DECINL		;AND SEE IF TO BREAK YET
DECINX:	CAMN BP,0(P)		;HAS ANY DIGIT BEEN SEEN?
	JRST RADIXQ		;NO. SEE IF ITS HEX OR OCTAL PREFIX
	AOS -1(P)		;YES. SKIP RETURN
	POP P,0(P)		;DISCARD STACK ITEM
	POPJ P,0		;AND RETURN.

RADIXQ:	CAIE C,"O"		;OCTAL PREFIX?
	CAIN C,"O"+40
	JRST OCTIN		;YES
	CAIE C,"X"		;HEX PREFIX?
	CAIN C,"X"+40
	JRST HEXIN
	POP P,(P)		;NO. REMOVE BP FROM STACK
	POPJ P,0		;AND NON-SKIP RETURN

OCTIN:	ILDB C,0(P)		;SKIP THE O. UPDATE START OF NUMBER
	MOVE BP,(P)		;GET THE UP-TO-DATE POINTER
OCTINL:	CAIL C,"0"		;OCTAL DIGIT?
	CAILE C,"7"
	JRST RADIXX		;NO
	LSH A,3			;YES. ACCUMULATE NUMBER
	ADDI A,-"0"(C)		; ..
	ILDB C,BP		;GET NEXT CHAR
	JRST OCTINL

SDUMPA:	MOVE A,SJFN		;VARIOUS ENTRIES TO DUMP BUFFER
SDUMP0:	MOVEI C,0		;FOR SOUT
SDUMP1:	SOUT
SDUMP:	MOVEI B,21		;DUMP MONITOR BUFFER
	MTOPR			; ..
	POPJ P,0

HEXIN:	ILDB C,0(P)		;SKIP THE X. UPDATE START OF NUMBER
	MOVE BP,(P)		;GET THE UPDATED POINTER
HEXINL:	CAIL C,"A"+40		;LOWER CASE?
	CAILE C,"Z"+40
	SKIPA
	TRZ C,40		;YES. MAKE UPPER CASE
	CAIL C,"A"		;HEX 10 THRU 15?
	CAILE C,"F"
	SKIPA			;NO
	SUBI C,"A"-"9"-1	;YES. SQUUNCH DOWN TO DIGITS
	CAIL C,"0"		;DIGIT?
	CAILE C,"0"+17		; ..
	JRST RADIXX
	LSH A,4			;YES. ACCUMULATE NUMBER
	ADDI A,-"0"(C)
	ILDB C,BP		;GET NEXT CHARACTER
	JRST HEXINL

RADIXX:	CAME BP,0(P)		;ANY DIGITS SEEN?
	AOS -1(P)		;YES. SKIP RETURN
	POP P,(P)		;DISCARD OLD BP
	POPJ P,0		;AND RETURN

PCRLF:	HRROI A,CRLFM		;OUTPUT CRLF TO PRIMARY FILE
	PSOUT
	POPJ P,0

TIMEOK:	PUSH P,A		;MIGHT AS WELL BE TRANSPARENT.
	PUSH P,B		; ..
	TIME			;ACTIVITY. UPDATE KILL TIME.
	TLNN F,L.LOGI		;LOGGED IN?
	IMULI B,WAT1ST		;WAIT THAT MANY SECONDS
	TLNE F,L.LOGI		;OR IF LOGGED IN, WAIT LONGER
	IMULI B,WAT2ND		; ..
	ADD A,B			;FROM NOW
	MOVEM A,KTIMET(PX)	;BEFORE TOP GUY KILLS THIS FORK.
BAPOPJ:	POP P,B
APOPJ:	POP P,A
	POPJ P,0

;CALL: A/ JFN OF DESIRED FILE
;	B/ BIT FOR ACCESS DESIRED (IN BITS 0-5)

CHKACC:	PUSH P,A		;STASH THE ARGUMENTS
	PUSH P,B		; ..
	HRROI A,STRTMP		;TEMP FOR THE DIRECTORY NAME
	HRRZ B,-1(P)		;THE JFN
	MOVSI C,(1B5)		;JFNS TO OUTPUT JUST DIRECTORY
	JFNS
	MOVEI A,0		;FLAG TO NOT RECOGNIZE
	HRROI B,STRTMP		;WHERE NAME STRING IS
	STDIR			;GET THE NAME
	  JRST BAPOPJ		;CANT FAIL. GIVE ERROR RETURN
	  JRST BAPOPJ		; ..
	HRRZM A,DIRNMF		;STASH DIRECTORY NUMBER OF FILE
	MOVEI A,(A)		;JUST NUMBER
	MOVEI B,DIRBLK		;PLACE FOR GTDIR DATA
	MOVEI C,0		;NO NEED FOR PASSWORD
	GTDIR			;FIND OUT ABOUT THAT DIR
	HRRZ A,-1(P)		;THE JFN AGAIN
	MOVSI B,25		;ARG TO GTFDB FOR ALL DATA
	MOVEI C,FDBBLK		;PLACE TO STORE IT
	GTFDB			;READ SAME
	MOVEI C,0		;ROTATE COUNTER
	HRLZ X,FDBBLK+4		;FILE PROTECTION BITS
	MOVE A,DIRBLK+6		;DIRECTORY NUMBER OF FILE
	CAMN A,USRBLK+6		;DIRECTORY NUMBER OF USER
	JRST CHK1		;SAME. DON'T ROTATE
	MOVE A,USRBLK+13	;GROUPS USER HAS ACCESS TO
	TDNE A,DIRBLK+14	;FILE IN ONE OF THOSE GROUPS?
	SUBI C,6		;YES. WILL MOVE TO GROUP BITS
	ADDI C,14		;FOR UNIVERS OR GROUP BITS
CHK1:	ROT X,0(C)		;ROTATE THE FILE'S BITS
	HRLZ A,DIRBLK+10	;SEE IF DIRECTORY ACCESS ALLOWS THIS
	ROT A,(C)		;GET CORRECT BYTE
	TLNN A,(ACCBRD)		;ALLOWED TO GTJFN IN THIS DIRECTORY?
	JRST BAPOPJ		;NO. FAIL.
	TLNN F,L.ANON		;AN ANON USER?
	JRST .+3		;NO, CHECK FOR OPENF
	TLNN A,(ACCBXX)		;YES, ANON FTP OK THIS DIR? (SUMEX LOCAL)
	JRST BAPOPJ		;NO, YOU LOSE
	TLNE A,(ACCBWR)		;ALLOWED TO OPENF IN THIS DIR?
	JRST CHK1A		;YES.
	MOVE A,0(P)		;NO. DO WE WANT TO?
	TLNE A,(ACCBRD!ACCBWR!ACCBAP)	; ..
	JRST BAPOPJ		;YES, BUT CAN'T. FAIL.
CHK1A:	MOVE A,FDBBLK+1		;GET STATUS BITS FOR FILE
	TLNN A,(1B4)		;THIS FILE EXIST?
	JRST CHK2		;YES.
	TLNE F,L.ANON		;NONEXISTENT FILE. ANONYMOUS USR?
	JRST BAPOPJ		;YES. HE CAN'T CREATE FILES.
	MOVE A,0(P)		;NO. NEW FILE. GET ACCESS REQUEST.
	TLNN A,(ACCBWR!ACCBAP)	;WRITE OR APPEND?
	JRST CHK2		;NO.
	HRLZ A,DIRBLK+10	;YES. LEGAL TO CREATE NEW FILE?
	ROT A,(C)		;CHECK DIRECTORY PROTECTION FIELD
	TLNN A,(ACCBAP)		;APPEND TO DIRECTORY OK? (NEW FILES)
	JRST BAPOPJ		;NO. THIS REQUEST ILLEGAL.
CHK2:	TDNE X,0(P)		;IS THE ACCESS ALLOWED?
	AOS -2(P)		;YES. SKIP RETURN
	JRST BAPOPJ		;RESTORE ARGS AND RETURN

;INTERRUPTS WITHIN THE SUBSIDIARY FORK

ILIINT:	MSG <FTPSRV: ILLEGAL INSTRUCTION>
ATLOC:	MSG < AT LOCATION >
	MOVEI A,101		;TYPE PC ON PRIMARY TTY
	HRRZ B,RPC21		;GET THE PC
	MOVEI C,10		;OCTAL
	NOUT
	  JFCL
	MSG < IN PROCESS >	;AND THE PROCESS NUMBER
	HRRZ B,THISPX
	MOVEI A,101
	MOVEI C,10
	NOUT
	  JFCL
	MSG <
>
	MOVEI A,101		;TRY AN ERSTR
	MOVEI C,0
	HRLOI B,400000		;IN THIS PROCESS, LAST ERROR
	ERSTR
	  JFCL
	  JFCL
	MSG <
>
	JRST KILL		;AND KILL THIS FORK

MEMINT:	MSG <FTPSRV: MEMORY TRAP>
	JRST ATLOC
DERINT:	MSG <FTPSRV: I/O ERROR>
	JRST ATLOC
PD2INT:	MSG <FTPSRV: PDL TRAP>
	JRST ATLOC

LEVTB2:	RPC21
	RPC22
	RPC23
CHNTB2:	REPEAT 11,<0>
	1,,PD2INT
	0
	1,,DERINT
	REPEAT 3,<0>
	1,,ILIINT
	1,,MEMINT
	1,,MEMINT
	1,,MEMINT
	REPEAT 21,<0>
CHMSK2:	000507,,400000

	END

