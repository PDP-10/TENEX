
; STORAGE MANAGEMENT MACROS

DEFINE	ROUTINE'(NAME,ACARGS,STKARG,LOCALS,REGS)<
NAME:	BEGIN NAME
CNTARG(<STKARG>,.NSARG)
CNTARG(<LOCALS>,.NLCLS)
CNTARG(<REGS>,.NREGS)
IFN .NLCLS+.NREGS+.NSARG,<.LROUT(<STKARG>,<LOCALS>,<REGS>)>
IFE .NLCLS+.NREGS+.NSARG,<DEFINE SKIPRT<AOS 0(P)>>
.ARGN__0
IFDIF <ACARGS><><FOR ARG IN (ACARGS)<
ARG_.ARGN__.ARGN+1>>
IFDEF %'NAME,<IFN (%'NAME-.ARGN)!($'NAME-.NSARG),<
	PRINTX \FORWARD & ROUTINE ARG'S DISAGREE FOR NAME\>>
IFNDEF %'NAME,<FORWARD(NAME,.ARGN,.NSARG)>>

DEFINE	.LROUT(STKARG,LOCALS,REGS)<
	PUSH P,FREG
	MOVE FREG,P
.SLOC__-.NSARG-1
IFN .NSARG,<
FOR ARG IN (STKARG)<
	LOCAL(ARG)>>
	LOCAL(RETURN)
	LOCAL(.SVFRG)
DEFINE	SKIPRT<AOS RETURN>
IFN .NREGS,<
.ARGN__15
FOR REG IN (REGS)<
	REG_.ARGN
	PUSH P,.ARGN
.ARGN__.ARGN-1>
.SLOC__.SLOC+.NREGS>
IFN .NLCLS,<
	ADD P,[XWD .NLCLS,.NLCLS]
FOR LCL IN (LOCALS)<
	LOCAL(LCL)>>>

DEFINE	CNTARG(ARG,CNT)<
CNT__0
IFDIF <ARG><><
FOR AR IN (ARG),<
CNTAR2(CNT,AR)>>>

DEFINE	CNTAR2(CNT,AR,L)<
IFDIF <L><><CNT__CNT+L>
IFIDN <L><><CNT__CNT+1>>

DEFINE	FORWARD'(NAME,NAC,NSTK)<
IFDEF %'NAME,<PRINTX \SUPERFLUOUS FORWARD FOR NAME
\>
IFNDEF %'NAME,<^%'NAME__?%'NAME__NAC
^$'NAME__?$'NAME__NSTK>>

DEFINE	ENDR(NAME)<
EXIT:
IFN .NLCLS+.NREGS+.NSARG,<.LENDR>
	POPJ P,
;FOR SYM IN (.NSARG,.NREG,.NLCLS,.ARGN,.SLOC)<
;SUPPRES SYM>
BEND	NAME>

DEFINE	.LENDR<
	FOR Q_1,.NREGS,1
<	MOVE 16-Q,Q(FREG)
>
	MOVE P,FREG
	POP P,FREG
IFG .NSARG,<POP P,-.NSARG(P)>
IFG .NSARG-1,<SUB P,[XWD .NSARG-1,.NSARGS-1]>>

DEFINE	LOCAL(NAM,L)<
NAM_<XWD FREG,.SLOC>
FOR Q_.SLOC,.SLOC
<DEFINE	NAM<Q(FREG)>>
IFDIF	<L><><.SLOC__.SLOC+L>
IFIDN	<L><><.SLOC__.SLOC+1>>

DEFINE	CALL'(NAME,ARGS)<
IFNDEF %'NAME,<PRINTX /CALL ON UNDECLARED ROUTINE NAME -- NO ARGUMENTS ASSUMED
/
FORWARD(NAME,0,0)>
.B.__0
.A.__1
IFDIF <ARGS><><FOR ARG IN (ARGS)<
.B.__.B.+1
IFLE .B.-%'NAME,<SETACA(\.B.,ARG)
.A.__.A.+1>
IFG .B.-%'NAME,<SETSTA(ARG)>>>
IFG .B.-%'NAME-$'NAME,<PRINTX \TOO MANY\>
IFL .B.-%'NAME-$'NAME,<PRINTX \TOO FEW\>
IFN .B.-%'NAME-$'NAME,<PRINTX \ ARGS IN CALL TO NAME
\>
	PUSHJ P,NAME>

DEFINE	SETACA(N,PROL,WHERE)<
IFIDN <WHERE><><
IFAVL PROL,<
.C.__<PROL>
IFN N-.C.,<MOVE N,PROL>>
IFNAVL PROL,<MOVE N,PROL>>
IFDIF <WHERE><><PROL
IFAVL WHERE,<
.C.__<WHERE>
IFN N-.C.,<MOVE N,WHERE>>
IFNAVL WHERE,<MOVE N,WHERE>>>

DEFINE	SETSTA(PROL,WHERE)<
IFIDN <WHERE><><PUSH P,PROL>
IFDIF <WHERE><><PROL
	PUSH P,WHERE>>

; STRUCTURE DEFINING MACROS

DEFINE	STRUCTURE(NAME,FIELDS)<DEFINE NAME(AC,FIELD,INDEX,FULLWD,RHWD,LHWD,BYTEWD,CLRWD)
<.DFLG__0
.POS__=36
.OFS__0
FOR ITEM IN (FIELDS)<IFE .DFLG,<STRUC0(ITEM,<AC>,<FIELD>,<INDEX>,<FULLWD>,<RHWD>,<LHWD>,<BYTEWD>,<CLRWD>)>>
IFE .DFLG,<PRINTX \UNDEFINED FIELD IN NAME
\>>>

DEFINE	STRUC0(NAME,SIZE,AC,FIELD,INDEX,FULLWD,RHWD,LHWD,BYTEWD,CLRWD)<
.POS__.POS-SIZE
IFL .POS,<.OFS__.OFS+1
	.POS__=36-SIZE>
IFIDN <FIELD><NAME><
.DFLG__1
WW__0
IFE SIZE-=36,<	WW__<FULLWD AC,.OFS(INDEX)>>
IFE SIZE-=18,<	IFE .POS,<	WW__<RHWD AC,.OFS(INDEX)>>
		IFE .POS-=18,<	WW__<LHWD AC,.OFS(INDEX)>>>
IFN WW,<WW>
IFE WW,<CLRWD
	BYTEWD AC,[POINT SIZE,.OFS(INDEX),=35-.POS]>
>
>

DEFINE	LOAD(AC,STRUC,FIELD,INDEX)<STRUC(<AC>,<FIELD>,<INDEX>,MOVE,HRRZ,HLRZ,LDB,)>

DEFINE	STORE(AC,STRUC,FIELD,INDEX)<STRUC(<AC>,<FIELD>,<INDEX>,MOVEM,HRRM,HRLM,DPB,)>

DEFINE	ZERO (AC,STRUC,FIELD,INDEX)<STRUC(<AC>,<FIELD>,<INDEX>,SETZM,HLLZS,HRRZS,DPB,<SETZ AC,>)>

