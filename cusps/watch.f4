	DIMENSION F (200), IDATE (2)
	DIMENSION ISYS (30) , JSYS (30) 
	DIMENSION IJOB (100) , JJOB (100) 
	DIMENSION ISUB (60, 6), JSUB (60, 6) , SUBSYS (6) 

	COMMON LO (27) 
	INTEGER BBB, DSUB, SYS, SUBSYS, GETVAL, ITIME

	RAT (J)  =  (FLOAT (J) *RC*100.) / (RR*T) 
	JVV (J)  = J+I*262144
	NENT (N)  = -N/262144
	NAME (N)  = N.AND.262143
	CRLF = "64240000000
	BBB = '     '

C	INT IS REAL TIME INTERVAL IN TICS
C	IR IS REAL TIME TICKS PER SEC,   IC IS RUN TIME TICKS/SEC

	CALL SETP
	CALL NAMES (JOB, SYS, SUBSYS (1) , SUBSYS (2),
     1     SUBSYS (3) , SUBSYS (4), SUBSYS (5) , SUBSYS (6) ) 

	CALL TICKS (IR, IC) 
	RR = FLOAT (IR) 
	RC = FLOAT (IC) 
	NSYS = NENT (SYS) +1
	SYS = NAME (SYS) 
	NJOB = NENT (JOB) +1
	JOB = NAME (JOB) 
	NSUB = NENT (SUBSYS (1) ) +1
	DO 1 I = 1, 6
1	SUBSYS (I)  = NAME (SUBSYS (I) ) 
	JV = SUBSYS (1) 

C	GET NAME

C	DO 311 I = 1, 40
C	ISUB (I, 1)  = GETVAL (JV) 
C311	JV = JV+262144

C	NAMES OF TABLES ARE IN SYS, JOB, AND SUBSYS
C	THE  NAMES ARE:
C	JOB:JOBRT
C	SYS:SYSTAT
C	SUBSYS (1) :SNAMES
C	SUBSYS (2) :STIMES
C	SUBSYS (3) :SBLKTM
C	SUBSYS (4) :SPFLTS
C	SUBSYS (5) :SWAKES
C	SUBSYS (6) :JOBNAM

C	THE SETUP SUBROUTINE BELOW SETS UP THE 
C	OUTPUT JFN AND ALLOWS THE USER TO SELECT
C	THE DATA TO MONITOR.  

C	BY THE WAY THE MACRO-10 PROGRAMS TO SUPPORT THIS CODE ARE
C	IN FILE <JMP>WTCHIO.MAC

	CALL SETUP (INT, MS, MJOB, MSUB, ITTY, CUTOFF)
	IF (MSUB+MJOB+MS.EQ.0)  GO TO 199

	JV = SYS
	DO 105 I = 1, NSYS
	ISYS (I)  = GETVAL (JV) 
105	JV = JV+262144

	JV = JOB
	DO 106 I = 1, NJOB
	IJOB (I)  = GETVAL (JV) 
106	JV = JV+262144

	DO 107 I = 1, 5
	JV = SUBSYS (I) 
	DO 107 J = 1, NSUB
	ISUB (J, I)  = GETVAL (JV) 
107	JV = JV+262144

	CALL TIM (IT1) 
	KCTR = 0
C	SETUP IS COMPLETED - START MEASURING

10	CALL CLOSEO

	IF (MSUB.EQ.0)  GO TO 14

	DO 2 I = 2, 5
	DO 2 J = 1, NSUB
2	JSUB (J, I)  = ISUB (J, I) 

	JV = SUBSYS (1)
	DO 82 J = 1, NSUB
	ISUB (J, 1) = GETVAL (JV)
	JV = JV+262144
82	JSUB (J, 6)  = 0

14	IF (MS.EQ.0)  GO TO 15

	DO 12 I = 1, NSYS
12	JSYS (I)  = ISYS (I) 

15	IF  (MJOB.EQ.0)  GO TO 16
	DO 13 I = 1, 55
13	JJOB (I)  = IJOB (I) 

16	IT2 = IT1
	IF (INT.GT.0)  GO TO 3
	CALL TTCAL (I) 
	CALL TTSEND (13) 
	CALL TTSEND (10) 
	 GO TO 4

3	CALL TIM (I) 
	I1 = INT/10- (I-IT1) *1000/IC
	CALL DSMS (I1) 

4	CALL TIM (IT1) 
	T = FLOAT (IT1-IT2) 

	KCTR = KCTR+1
	IF (MOD (KCTR, 10) .EQ. 0)  GO TO 19
	IF (MSUB.EQ.0)  GO TO 3

	JV = JOB
	DO 401 I = 1, NJOB
	IJOB (I)  = GETVAL (JV) 
	JV = JV+262144
401	CONTINUE

	JV = SUBSYS (6) 
	DO 42 I = 1, NJOB
	IF (IJOB (I) .LE.0)  GO TO 41
	I1 = GETVAL (JV) +1
	JSUB (I1, 6)  = JSUB (I1, 6) +1
41	JV = JV+262144
42	CONTINUE

	 GO TO 3

C	T IS UNSCALED REAL TIME TICKS

19	CALL FILO
	TT = T/RC

	IF  (MS.EQ.0)  GO TO 117

	JV = SYS
	DO 5 I = 1, NSYS
	ISYS (I)  = GETVAL (JV) 
5	JV = JV+262144

	IF (MSUB.GT.0)  GO TO 117
	IF (MJOB.EQ.0)  GO TO 412

	JV = JOB
	DO 116 I = 1, NJOB
	IJOB (I)  = GETVAL (JV) 
	JV = JV+262144
116	CONTINUE

	 GO TO 412

117	JV = JOB
	DO 6 I = 1, NJOB
	IJOB (I)  = GETVAL (JV) 
	JV = JV+262144
6	CONTINUE

118	IF (MSUB.EQ.0)  GO TO 110

	CALL L0 (27)

	DO 7 J = 2, 5
	JV = SUBSYS (J) 
	IF (JV.EQ.0)  GO TO 7
	DO 7 I = 1, NSUB
	ISUB (I, J)  = GETVAL (JV) 
7	JV = JV+262144

20	FORMAT ( ' INTERVAL=', F5.2, ' MIN.    ', 2A5)
21	FORMAT ( '   ', A5 )

110	JV = SUBSYS (6) 
	DO 411 I = 1, NJOB
	IF (IJOB (I) .LE.0)  GO TO 55
	I1 = GETVAL (JV) +1
	JSUB (I1, 6)  = JSUB (I1, 6) +1
55	JV = JV+262144
411	CONTINUE

412	CALL DATE ( IDATE )
	CALL TIME ( ITIME )
	XX = TT / 60.
	ENCODE (34, 20, LO), XX, (IDATE(J), J = 1, 2)
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF)
	CALL SOUT (LO) 
	CALL L0 (27)
	ENCODE (8, 21, LO ), ITIME
	CALL SOUT (LO)
	CALL L0 (2)
	CALL SOUT (CRLF)
	CALL L0 (27)


	IF  (MS.EQ.0)  GO TO 17

	DO 22 I = 1, 4
22	F (I)  = RAT (ISYS (I) -JSYS (I) ) 

23	FORMAT (1X, 7F5.1, 6I5) 

	FN = 0
	IF (NSYS .GT. 11) FN =  (ISYS (12) -JSYS (12) )  / (TT * RR)

	FF =  (ISYS (11) -JSYS (11) ) / (TT * RR)

	USED = 100.-F (1) -F (2) -F (3) 

	DO 122 I = 5, 10
122	JSYS (I)  = ISYS (I) -JSYS (I) 

	ENCODE (68, 23, LO) USED,  (F (I) , I = 1, 4),
     1     FF, FN,  (JSYS (I) , I = 5, 10) 

	CALL SOUT (CRLF)
	CALL SOUT('  USED IDLE IOWT CORE TRAP NBAL NRUN DRMR DRMW
     1 DSKR DSKW TTBK TT^C')
	CALL SOUT (CRLF)
	CALL SOUT (LO) 
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF)
	CALL L0 (18) 

17	IF (MJOB.EQ.0)  GO TO 18

26	FORMAT (F5.1)
	CALL SOUT (CRLF)
	CALL SOUT (' JOBS ABOVE RUNTIME PERCENTAGE=')	
	ENCODE ( 5, 26, LO ), CUTOFF
	CALL SOUT (LO)
	CALL SOUT (CRLF)
	CALL SOUT ('  JOB %AGE SUBSYS')
	CALL SOUT (CRLF)
	CALL L0 (10)

	DO 51 K = 1, NJOB

	IF (JJOB (K) .GT. IJOB (K) .OR. JJOB (K) .LE. 0)  GO TO 51

	R1 = RAT (IJOB (K) -JJOB (K) ) 
	IF (R1 .LT. CUTOFF) GO TO 51

	MJOB = K-1
	JV = (MJOB*262144) + SUBSYS(6)
	JV = GETVAL (JV)
	JV = (262144*JV) + SUBSYS(1)
	INAME = GETVAL (JV)

66	FORMAT ( I5, F5.1, 1X )
	ENCODE (11, 66, LO ) , MJOB, R1
	CALL SOUT ( LO )
	CALL SIXPT (INAME)
	CALL SOUT (CRLF)
	CALL L0 (10)

51	CONTINUE

18	IF (MSUB.EQ.0)  GO TO 10

	DO 28 J = 2, 5
	DO 28 I = 1, NSUB
28	JSUB (I, J)  = ISUB (I, J) -JSUB (I, J) 

29	FORMAT (3F6.1, 2I6, F6.1)
	CALL SOUT (CRLF)
	CALL SOUT ('        %RUNT  BLKT AVSIZ PFLTS TTWAK AVNUM')
	CALL SOUT (CRLF)

C  START SUBSYSTEM LOOP

	DO 30 I = 1, NSUB

	ISN = 0
	IF (ISUB (I, 1) .EQ. 0)  GO TO 30
	DO 333 J = 2, 6
333	ISN = ISN+JSUB (I, J) 
	IF (ISN .EQ. 0)  GO TO 30

	PAGES = LAND (JSUB (I, 5), "7777777)
	ITTWAK  = JSUB (I, 5) / "10000000

	AVSIZ = -0.000001
	IF ( ITTWAK .GT. 0) AVSIZ = PAGES / ITTWAK 

	USE  =  RAT ( JSUB (I, 2) )

	BLKT = -0.000001
	IF ( ITTWAK .GT. 0) BLKT = JSUB (I, 3) / (RR*ITTWAK ) 

	INAME = ISUB (I, 1) 

	AVNUM = JSUB (I, 6) / 10.

	CALL SIXPT (INAME)
	ENCODE (36, 29, LO) ,  USE, BLKT, AVSIZ,
     1       JSUB (I, 4), ITTWAK, AVNUM
	CALL SOUT (LO) 
	CALL SOUT (CRLF) 

30	CONTINUE

31	CALL L0 (12) 
	 GO TO 10

199	TYPE 198
198	FORMAT (' NO DATA : CHECK REQUESTS AND TRY AGAIN') 
	CALL EXIT
	END



	SUBROUTINE L0 (I) 

	COMMON LO (27) 

	DO 1 J = 1, I
1	LO (J)  = 0

	RETURN
	END


	SUBROUTINE YES (I) 

	CALL TTCAL (J) 
	CALL TTSEND (13) 

	IF (J-I) 1, 2, 1

1	I = 0
	RETURN

2	I = 1
	RETURN
	END

	SUBROUTINE SETUP (INT, IS, IJ, ISUB, ITTY, CUTOFF)

	COMMON LO (27) 
	CRLF = "64240000000

	TYPE 1
1	FORMAT (/' OUTPUT FILE: '$) 

	CALL GFILO (ITTY) 
	CALL FILO
	IS = 89
	IJ = IS
	ISUB = IS
	INT = 73

	TYPE 2
2	FORMAT (' SYSTEM DATA?  (Y OR N) :'$) 
	CALL YES (IS) 

	TYPE 3
3	FORMAT (' JOB DATA?  (Y OR N) :'$) 
	CALL YES  (IJ) 

	TYPE 4
4	FORMAT (' SUBSYSTEM DATA?  (Y OR N) :'$) 
	CALL YES  (ISUB) 

	TYPE 5
5	FORMAT (' SAMPLING: FIXED INTERVAL OR ON-DEMAND?
     1  (I OR D) :'$) 
	CALL YES  (INT) 

	IF (INT.EQ.0)  GO TO 15
	FMIN = .2*IS+.5*IJ+.5*ISUB

	TYPE 6, FMIN
6	FORMAT (/' (NOTE: APPROX MIN INTERVAL IS:',F8.3,' MIN.'/
     1  ' ENTER INTERVAL DESIRED IN MINUTES  (FLOATING POINT) :'$)

	ACCEPT 7, FINT
7	FORMAT (F) 
	FINT = FINT*60000
	INT = IFIX (FINT) 

	 GO TO 115

15	TYPE 101
0101	FORMAT  (' TO SIGNAL SAMPLE STRIKE SPACE OR LETTER'/) 

115	CALL SOUT (CRLF) 
	CALL SOUT (CRLF) 
	IF (INT.EQ.0)  GO TO 12
	ISEC =  (INT+500) /1000

	ENCODE (25, 13, LO) ISEC
13	FORMAT (' INTERVAL IS', I7, 'SEC. ') 

12	IF (IS.EQ.0)  GO TO 33

	CALL SOUT (' SYSTEM DATA FORMAT: (DATA THIS INTERVAL)') 
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF)
	CALL SOUT ('USED = % TIME NOT IDLE, IOWT, CORE, OR TRAP')
	CALL SOUT (CRLF)
	CALL SOUT ('IDLE = % TIME WITH NO RUNABLE JOBS')
	CALL SOUT (CRLF)
	CALL SOUT ('IOWT = % TIME WAITING FOR PAGE SWAPPING')
	CALL SOUT (CRLF)
	CALL SOUT ('CORE = % TIME SPENT IN CORE MANAGEMENT')
	CALL SOUT (CRLF)
	CALL SOUT ('TRAP = % TIME SPENT PROCESSING PAGER TRAPS')
	CALL SOUT (CRLF)
	CALL SOUT ('NBAL = AVG # OF JOBS IN BALANCE SET')
	CALL SOUT (CRLF)
	CALL SOUT ('NRUN = AVG # RUNABLE + BAL SET JOBS')
	CALL SOUT (CRLF)
	CALL SOUT ('DRMR = # DRUM READS')
	CALL SOUT (CRLF)
	CALL SOUT ('DRMW = # DRUM WRITES')
	CALL SOUT (CRLF)
	CALL SOUT ('DSKR = # DISK READS')
	CALL SOUT (CRLF)
	CALL SOUT ('DSKW = # DISK WRITES')
	CALL SOUT (CRLF)
	CALL SOUT ('TTBK = # TTY WAKEUPS')
	CALL SOUT (CRLF)
	CALL SOUT ('TT^C = # TTY INTERUPTS')
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF) 
33	IF (IJ.EQ.0)  GO TO 44

	CALL SOUT (' TYPE JOB CPU RUNTIME PERCENTAGE CUTOFF: ')
	ACCEPT 7, CUTOFF

	CALL SOUT (CRLF) 
	CALL SOUT (CRLF) 

44	IF (ISUB.EQ.0) RETURN

	CALL SOUT ('SUBSYSTEM DATA:') 
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF)
	CALL SOUT ('%RUNT = PERCENT RUNTIME IN INTERVAL')
	CALL SOUT (CRLF)
	CALL SOUT (' BLKT = TIME BLOCKED FOR TTY')
	CALL SOUT (CRLF)
	CALL SOUT ('AVSIZ = AVG PAGE REFERENCES PER TTY WAKE')
	CALL SOUT (CRLF)
	CALL SOUT ('PFLTS = PAGE FAULTS IN INTERVAL')
	CALL SOUT (CRLF)
	CALL SOUT ('TTWAK = TTY WAKES IN INTERVAL')
	CALL SOUT (CRLF)
	CALL SOUT ('NUMBR = AVERAGE NUMBER OF USERS OF SUBSYSTEM')
	CALL SOUT (CRLF) 
	CALL SOUT (CRLF) 

	RETURN
	END




