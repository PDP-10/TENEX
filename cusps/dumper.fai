;<SOURCES>DUMPER.FAI;7	12-DEC-75 10:03:05   EDIT BY COWER
;WILL NOT DUMP <NORMAL> NOW
;<SOURCES>DUMPER.FAI;7  6-NOV-75  13:10:32  EDIT BY COWER
;FIXED BUGS - LOWER CASE INPUT ON RESTORES POSSIBLE
;<SOURCES>DUMPER.FAI;6  23-JULY-75 15:55:17 EDIT BY COWER
;CHANGED DAILY DUMP OUTPUT FILENAME TO MONTH.DATE--TIME;VER #
;ALL OTHER OUTPUT LEFT AS MINI-DUMPER.LISTING - NO SUMMARY
;ACCOUNTING INFO ON DAILY DUMPS
;<SOURCES>DUMPER.FAI;6  22-JULY-75 13:39:23 EDIT BY COWER
;INPUT MAY BE LOWER OR UPPER CASE - ALLOWS EDITING ON DATE
;INPUT - ADDED DAISW 0=DAILY DUMP, -1=EVERTHING	ELSE
;<SOURCES>DUMPER.FAI;6	21-JULY-75 15:15:15 EDIT BY COWER
;MUST BE LOGGED IN AND CONNECTED TO OPERATOR AT START OF DAILY
;DUMP - DOES AUTO ARCHIVING OF <OPERATOR>MINI-DUMP.LISTING
;DOES NOT COPY DAILY DUMP LISTING TO PRINTER
;<SOURCES>DUMPER.FAI;6	15-JULY-75 11:00:00 EDIT BY COWER
;REDUCED LISTING SIZE FROM 300 DISK PAGES TO 135 PAGES
;IMPROVED ERROR REPORTING CODE
;<SOURCES>DUMPER.FAI;5  15-FEB-75 15:00:00 EDIT BY COWER
;ADDED WRITE DATE TO LISTING OF FILES NOT DUMPED, ADDED
;DIR NUMBER TO TTY OUTPUT
;<SOURCES>DUMPER.FAI;4  8-FEB-75 10:00:00  EDIT BY COWER
;WILL NOT DUMP <PRINTER> NOW
;<SOURCES>DUMPER.FAI;3    26-JAN-75 18:56:40    EDIT BY COWER
;FIXES FOR BACKUP DIRECTORY
;<SOURCES>DUMPER.FAI;2    23-JAN-75 15:20:03    EDIT BY CROSSLAND
;FIX SO  LONG FILES AT END OF TAPE FIT
;FIX SO EPHEMERALS ARE MADE EPHEMERAL ON RELOADING

;12 JAN 72, 1656:
;D. MURPHY

	TITLE	DUMPER
	SUBTTL	R.S.TOMLINSON 13 APRIL 71

IFNDEF NETDMP,<?NETDMP__0>	;MAKES NET DUMPER IF 1
EXTERNAL	ENTRY0
; AC'S

NUSL__30
NBUF__30		; NUMBER OF DUMP BUFFERS
HSHLEN__400

?MAXUSR_1000		;MAX USER NUMBER

?A_1
?B_2
?C_3
?D_4
?E_6
?F_7
?XX_10
?YY_11
?ZZ_12
IFN NETDMP,<?R_16>
?P_17

DEFINE	ERROR(S,X)<
JRST [	TMSG <S>
	X]>

DEFINE	TMSG(S)<
	HRROI B,[ASCIZ S]
	PUSHJ P,TMSGQ>

DEFINE	LPMSG(S)<
	HRROI B,[ASCIZ S]
	PUSHJ P,LPMSGQ>

DEFINE	BTTMSG(S)<
	HRROI B,[ASCIZ S]
	PUSHJ P,BTMSGQ>
LALL

; Parameters and bits pertinent to directories

SET TPC,0
USE TPC			; Symbols relative to fdb origin
	BLOCK 1		; The header, not referenced symbolically
FDBCTL_:BLOCK 1		; Lh ==> control bits (see below)
			; Rh ==> location of file name block
FDBEXT_:BLOCK 1		; Lh ==> location of extension block
			; Rh ==> pointer to other extensions
FDBADR_:BLOCK 1		; The file address & class field
FDBPRT_:BLOCK 1		; File protection word
FDBCRE_:BLOCK 1		; Creation date & time of version 1
FDBUSE_:BLOCK 1		; Lh ==> last writer directory number
			; Rh ==> use count (+1 for each indirect pointer
			;  and saved environment)
FDBVER_:BLOCK 1		; Lh ==> version number
			;  this is job number for temp files
			; Rh ==> pointer to other versions
FDBACT_:BLOCK 1		; Account infor for charging
			;  + for location of string block
			;  - for number
FDBBYV_:BLOCK 1		; 0-5 ==> number of version to retain
			; 6-11 ==> last byte size
			; Rh ==> count of actual pages in file
FDBSIZ_:BLOCK 1		; Length of file in bytes
FDBCRV_:BLOCK 1		; Creation date and time of this version
FDBWRT_:BLOCK 1		; Date & time of last write
FDBREF_:BLOCK 1		; Date & time of last reference
FDBCNT_:BLOCK 1		; Lh ==> count of writes
			; Rh ==> count of references
FDBBCK_:BLOCK 5		; Words for backup system
FDBUSW_:BLOCK 1		; User settable word
FDBLEN:			; Length of fdb

USE

; Bits in lh of fdbctl

FDBTMP__400000		; File is temporary
FDBPRM__200000		; File is permanent
FDBNEX__100000		; No extension for this fdb yet
			;  the file does not really exist
FDBDEL__040000		; File is deleted
FDBNXF__020000		; File does not exist (first write not complete)
FDBLNG__010000		; Long file
FDBSHT__004000		; Compressed page table
FDBENV__002000		; Environment file
FDBSUB__001000		; Subroutine file

IFN NETDMP,<

BEGIN	NETDMP


; GTSTS CODE

^.GTSTS:CAME A,MTJFN
	JRST [	GTSTS
		JRST (R)]
	MOVE B,.MTSTS
	JRST (R)

; DUMPI CODE

^.DUMPI:MOVEM C,..C		; SAVE TEMPS
	SETZM .MTSTS
.DMPIL:	MOVEM B,..B
	SKIPGE B,(B)
	JRST .DMPD		; REAL COMMAND
	JUMPN B,.DMPIL
	MOVE C,..C
	MOVE B,..B
	JRST 1(R)

.DMPD:	HLRE C,B		; GET NEGATIVE COUNT
	BIN			; GET HEADER WORD
	JUMPGE B,NOTREC		; NOT DATA
	CAME B,C		; DOES LENGTH AGREE?
	 0			; SCREWED UP
	MOVE B,..B
	HRRZ B,(B)		; GET ADDRESS
	ADD B,[XWD 444400,1]
	SIN
	AOS B,..B
	JRST .DMPIL

NOTREC:	CAIN A,1
	 JRST [	MOVSI B,1000
		MOVEI A,IOX4
		JRST .+3]
	MOVEI A,IOX5
	MOVSI B,400
	MOVEM B,.MTSTS
	MOVE B,..B
	MOVE C,..C
	JRST 0(R)

; DUMPO CODE

^.DUMPO:MOVEM C,..C
	SETZM .MTSTS
.DMPOL:	MOVEM B,..B
	SKIPGE B,(B)
	JRST .DMPOD
	JUMPN B,.DMPOL
	MOVE C,..C
	MOVE B,..B
	JRST 1(R)

.DMPOD:	HLRE B,B
	BOUT
	MOVE C,B
	MOVE B,..B
	HRRZ B,(B)
	ADD B,[XWD 444400,1]
	SOUT
	AOS B,..B
	JRST .DMPOL

; MTOPR CODE

^.MTOPR:MOVEM B,..B
	MOVEM C,..C
	SETZM .MTSTS
	CAIE B,0
	CAIN B,1		; REWIND
	JRST .RET		; IS NOP
	CAIN B,3
	JRST WEOF		; WRITE END OF FILE
	CAIN B,6
	JRST SREC		; SKIP RECORD
	CAIN B,16
	JRST SFIL		; SKIP FILE
	 0			; NO OTHERS

SFIL:	BIN
	CAIN B,1
	JRST .RET
	SKIPL C,B
	 0
	MOVSI B,10000
	SIN
	JRST SFIL

SREC:	BIN
	JUMPGE B,[MOVSI B,1000
		CAIN A,1
		MOVEM B,.MTSTS
		JRST .RET]
	MOVE C,B
	MOVSI B,10000
	SIN
.RET:	MOVE B,..B
	MOVE C,..C
	JRST (R)

WEOF:	MOVEI B,1
	BOUT
	JRST .RET

BEND	NETOPS
; REDEFINE MAG TAPE OPS FOR NETWORK

FOR @' A IN (DUMPI,DUMPO,MTOPR),<
DEFINE	A<JSP R,.'A>>

OPDEF	RGSTS[GTSTS]
DEFINE	GTSTS<JSP R,.GTSTS>
>

; CONTROL LOOP

STRT:	MOVE P,[IOWD 100,PDL]
	PUSHJ P,RESET
	TMSG </
****
MINI-DUMPER  13 APRIL 71
/>
	SETOM	DAISW
	MOVEI	A,1			
	MOVE	B,[POINT 7,[ASCIZ /NORMAL/]]
	STDIR
	JFCL
	HRROI	A,-1
	HRRZM	1,NORDIR
	MOVEI	A,1
	MOVE	B,[POINT 7,[ASCIZ /BACKUP/]]
	STDIR
	JFCL
	HRROI	A,-1
	HRRZM	1,BAKDIR
	MOVEI	A,1				;USE ENTIRE STRING OF B
	MOVE	B,[POINT 7,[ASCIZ /PRINTER/]]	;EXCLUDE IT
	STDIR					;CONVERT IT TO DIR NUMBER
	JFCL					;SHOULD NEVER GET NO MATCH 
	HRROI	A,-1				;AMBIGUOUS MATCH
	HRRZM	A,PRIDIR			;STORE DIR NUMBER
	GJINF
	MOVEM 1,LOGDIR
	MOVEM 2, STRDIR
	SETOM WHEEL
	MOVEI A,400000
	RPCAP
	TRNN C,600000
	SETZM WHEEL
	MOVEI A,400000
	MOVEI 2,303
	SKIPE WHEEL
	JSYS 243		; ENABLE HIGH PRIORITY
RESTRT:	TMSG </
DUMP, LOAD, CHECK, OR SINGLE? />
	MOVEI 1,100
	BIN
	MOVEI A,[POP P,A
		HRROI A,[ASCIZ /  ?  D, L, C, OR S/]
		PSOUT
		JRST RESTRT]
        CAIE 	B,"d"
	CAIN B,"D"
	MOVEI A,DUMP
	CAIE	B,"s"
	CAIN B,"S"
	MOVEI A,SING
	CAIE	B,"c"
	CAIN B,"C"
	MOVEI A,CHCK
	CAIE	B,"l"
	CAIN B,"L"
	MOVEI A,LOAD
	PUSHJ P,(A)
	PUSHJ P,RESET
;THIS CODE RECONNECTS TO LOGIN DIR AND SO INFORMS USER.
RECON:	MOVE 1,LOGDIR
	CNDIR
	JFCL
	TMSG</
YOU ARE RECONNECTED TO YOUR LOGIN DIR./>
	MOVE 1,LOGDIR
	CAME 1,STRDIR
	TMSG</
IT IS NOT THE ONE YOU WERE CONNECTED TO./>
	TMSG </
DONE.
/>
	skipn	daisw
TELLIM:	jrst	[
		SETO	2,
		SETZ	4,
		ODCNV
		HLRZ	3,3
		CAIN  	3,0
		JRST	NEW
		HRROI	1,[ASCIZ /
PLEASE MOUNT THE CURRENT LISTING TAPE
WHEN MOUNTED ENTER A CARRIAGE RETURN /]
		PSOUT
		PBIN
		CAIE	1,37
		JRST	TELLIM
		JRST	ENTRY0]
	HALTF
NEW:		MOVEI	1,7
		PBOUT
		PBOUT
		PBOUT
		HRROI	1,[ASCIZ /
PLEASE MOUNT TWO NEW LISTING TAPES        
WHEN MOUNTED ENTER A CARRIAGE RETURN /]
		PSOUT
		PBIN	
		CAIE	1,37
		JRST	NEW
		JRST	ENTRY0 

RESET:	MOVNI 1,1
	CLOSF
	JFCL
	RLJFN
	JFCL
	MOVNI A,1
	MOVE B,[XWD 400000,BUFPAG]
	PMAP
	MOVE A,[ASCIZ /MTA0:/]
	MOVEM A,MTDEV
	MOVEI A,BUFFER
RESET1:	MOVEI B,NHEAD+1002(A)
	MOVEM B,(A)
	MOVEI A,-1(B)
	CAIE A,BUFFER+(NBUF-1)*(NHEAD+1001)
	JRST RESET1
	MOVEI B,BUFFER+1
	MOVEM B,(A)
	MOVEI 1,101
	RFMOD
	TRO 2,770000
	SFMOD
	MOVEI A,-4
	KFORK
CPOPJ:	POPJ P,

BEGIN	SINGLE FILE TRANSFER

^SING:	SETZM CHECK
	MOVEI B,200000
	PUSHJ P,MTOPEN
	MOVE A,MTJFN
	MOVEI B,1
	MTOPR
	SETZM RSEQ
	AOS RSEQ
SINGLP:	TMSG </
COPY />
	SETZM	CLAP
	MOVE C,[POINT 7,NAMBUF]
	MOVEI A,100
SINGL1:	BIN
	AOS	CLAP
	CAIE B,40
	CAIN B,37
	JRST SINGLZ
	CAIN B,33
	JRST SINGLZ
	CAIN B,1
	JRST DELCH
	CAIN B,177
	JRST SINGLP
	CAIN B,"X"-100
	JRST STRT
	push	p,1	
	MOVE	1,CLAP
	CAIG	1,1
	JRST	[
		caie	2,74
		JRST	[HRROI	1,[ASCIZ /
PLEASE ENTER <DIRNAME>FILENAME.EXTENSION.VERSION
		/]
			PSOUT
			JRST	SINGLP] 
		jrst	tomr] 
tomr:	pop	p,1
	CAIL	2,"a"			;4 lines for conversion to upper case
	CAILE	2,"z"
	TRNA
	MOVEI	2,-40(2)
	IDPB B,C
	JRST SINGL1

DELCH:	CAME C,[POINT 7,NAMBUF]
	CAMN C,[POINT 7,NAMBUF-1,34]
	JRST DING
	LDB B,C
	MOVEI A,101
	BOUT
	MOVE A,C
	BKJFN
	JFCL
	MOVE C,A
	MOVEI A,100
	JRST SINGL1

DING:	MOVEI B,7
	MOVEI A,101
	BOUT
	MOVEI A,100
	JRST SINGL1

SINGLZ:	MOVEI B,";"
	IDPB B,C
	MOVEI B,"@"
	IDPB B,C
	MOVEI B,0
	IDPB B,C
	TMSG </ TO />
	MOVSI 1,460003
	MOVE 2,[XWD 100,101]
	GTJFN
	ERROR(</?/>,<JRST SING>)
	MOVEM 1,JFN
SINGLA:	PUSHJ P,MTRED
	JFCL

SINGLB:	MOVE B,TYP
	CAMN B,[-FLHDX]
	JRST SINGLC
	CAMN B,[-TPTRX]
	JRST SINGLE
	CAME B,[-TPHDX]
	CAMN B,[-FLTRX]
	JRST SINGLF
	JRST SINGLA

SINGLF:	PUSHJ P,LODEOF
	JRST SINGLA

SINGLE:	TMSG </
END OF TAPE, FILE NOT FOUND/>
	MOVE A,MTJFN
	MOVEI B,1
	MTOPR
	MOVE A,JFN
	RLJFN
	JFCL
	JRST SINGLP

SINGLC:	MOVEI A,BUFF
	MOVEI B,NAMBUF
	PUSHJ P,STRCMP
	SKIPA A,JFN
	JRST [	PUSHJ P,LODSKP
		JRST SINGLA]
	PUSHJ P,LODSBA
	JRST SINGLP

BEND	SINGLE

BEGIN	DUMP ROUTINES

^DUMP:	MOVEI 1,400000
	MOVE 2,[XWD LEVTAB,CHNTAB]
	SIR
	MOVSI 2,(1B11)
	AIC
	EIR
	SETZM	FULFLG
	SETZM ABTUSR
	SETOM FIRST
	SETZM SNGUSR
	SKIPN WHEEL
	JRST [ TMSG </
ONLY CONNECTED DIR IS DUMPED IF YOU ARE NOT ENABLED.
/>
	JRST DUMPOM]
	TMSG </
DUMP WHOLE DISC? />
	MOVEI B,100
	BIN
	CAIE	B,"y"
	CAIN B,"Y"
	JRST	[SETOM	FULFLG
	DUMP1:	TMSG	</
HAVE YOU RUN CHKPNT? />
		PBIN
		CAIE	A,"y"
		CAIN	A,"Y"
		JRST	DUMPON
		CAIN	A,"n"
		HALTF
		CAIE	A,"N"
		JRST	DUMP1
		HALTF]
	CAIN	B,"n"
	JRST	SHIT
      	CAIE B,"N"
	JRST DUMP
SHIT:	TMSG </
SPECIFIC USERS? />
	PBIN
	CAIE	A,"y"
	CAIN A,"Y"
	JRST [	TMSG </ USERS: />
		PUSHJ P,REDUSS
		MOVEM C,SNGUSR
		JRST DUMPON]
	CAIE	A,"a"
	CAIN A,"A"
	JRST [SETOM ABTUSR
		TMSG </, ALL BUT USERS:/>
		PUSHJ P,REDUSS
		MOVEM C,SNGUSR
		JRST DUMPON]
	CAIN	A,"n"
	JRST	SHIT1
	CAIE A,"N"
	JRST DUMP
shit1:	TMSG </
START WITH USER: />
	PUSHJ P,REDUSR
	HRRZM A,FIRST
	SETZM SNGUSR
DUMPON:	TMSG </
INCREMENTAL DUMP? />
	PBIN
	CAIE  	A,"y"
	CAIN A,"Y"
	JRST [	SETOM INCRSW
		JRST DUMPOM]
	CAIN	A,"n"
	JRST	STARTQ
	CAIE	A,"N"
	JRST	DUMP 	
STARTQ:	SETZ 	INCRSW



DUMPOM:	SETZM	SINCE
	TMSG</
EXCLUDE FILES WRITTEN BEFORE: />
DUMPSN:	MOVEI	1,100
	BIN
	CAIN	2,"M"-100
	JRST	IDENTI
	CAIN	2,37
	JRST	[SETOM	DAISW
	JRST	IDENTI]
	CAIN 2,"D"
	JRST DFALT
	BKJFN
	JRST	IDENTI
	HRROI	1,BIFF
	MOVEI	2,30
	SETZ	3,
	JSYS    611
	HRROI	1,BIFF
	SETZ	2,
	IDTIM
	JRST	[TMSG </?
ENTER DATE AND TIME LIMIT OR CR FOR NO LIMIT: />
		 JRST DUMPSN]
	MOVEM	2,SINCE
TIMEO:	TMSG </
CHANGES FROM: />
	MOVEI 1,101
	MOVE 3,[XWD -1,-1]
	MOVE 2,SINCE
	ODTIM
	TMSG </
          TO: />
	MOVEI 1,101
	MOVE 3,[XWD -1,-1]
	MOVE 2,[XWD -1,-1]
	ODTIM
	TMSG </, RIGHT? :/>
	MOVEI	1,100
	BIN
	CAIE	2,"y"
	CAIN 2,131
	JRST DAILY 
	TMSG </
(TYPE "Y" TO CONFIRM. )/>
	JRST DUMPOM
;THIS ROUTINE CALCULATES A DEFALT DATE AND TIME MOVES IT TO
;SINCE. THE DEFALT IS 1800 YESTERDAY IF THE DAY IS TUES. THRU SAT.
;AND FRIDAY 1800 IF THE DAY  IS SUNDAY OR MONDAY.
DFALT:	MOVE 1,DEFHRS			;OCTAL OCTAL HR NUMBER OF DEFAULT TIME
	IMULI 1,7020			;SECS/HR
	MOVEM 1,DEFTIM
	GTAD
	HRRZ 5,1			;5/ 0,TIME
	HLRZ 6,1			;6/ 0,DATE
	MOVE 2,[XWD -1,-1]
	MOVEI 4,0
	MOVE 1,ZONE			;GET TIME ZONE
	IMULI 1,7020
	MOVEM 1,LAG
	ODCNV
	TLNE 4,1B1			;WAS DAY LIGHT SAVINGS USED?
	JRST PDT
	JRST WHTDAY
PDT:	MOVE 1,LAG
	SUBI 1,7020			;ONE HOURLESS LAG FOR PDT
	MOVEM 1,LAG

;THIS CODE CALCULATES INTERNAL GMT OF DEFALT DATE AND TIME.
;ODCNV HAS LEFT LOCAL DAY OF WEEK (MON=0) IN 3.
WHTDAY:	HRRZ 3,3
	CAIN 3,0
	SUBI 6,1			;IF ITS SUNDAY ACT LIKE SAT.
	CAIN 3,6
	JFCL			;SATURDAY IS NOW REGULAR DAY
DOISUB:	MOVE 1,LAG
	ADD 1,DEFTIM
	CAIL 1,250600
	SUBI 1,250600
	MOVE 2,1
	CAMGE 5,LAG
	SUBI 6,1
	CAMGE 5,LAG
	JRST [CAIL 5,2
		ADDI 6,1
		JRST DOISB0]
DOISB0:		HRLZ 2,6
	HRR 2,1
	MOVEM 2,SINCE
	JRST TIMEO
DAILY:	TMSG </	
IS THIS A DAILY DUMP? />
	MOVEI	1,100
	BIN
	CAIE	2,"n"
	CAIN	2,"N"
	JRST	[SETOM	DAISW
	JRST 	IDENTI]
	CAIN	2,"y"
	JRST	DAILY1
	CAIE	2,"Y"	
	JRST	DAILY
DAILY1:	SETZM	DAISW
	MOVEI	1,1
 	MOVE	2,[POINT 7,[ASCIZ /OPERATOR/]]
	STDIR
	JFCL
	JFCL
	HRRZM	1,OPDIR
	GJINF
	CAME	1,OPDIR
	JRST	[
		HRROI	1,[ASCIZ /
LOG IN AS OPERATOR FOR DAILY DUMPS
/]
		PSOUT
		SETO	1,   
		LGOUT
		HALTF
		JRST	.-1]    
	CAME	2,OPDIR
	JRST	[HRROI	1,[ASCIZ /
CONNECT TO OPERATOR FOR DAILY DUMPS AND START OVER/]
		 PSOUT	
		 RESET
		HALTF 
		JRST	.-1]
JUNK:	HRROI	1,TMP
	MOVE	2,[XWD -1,-1]
 	MOVE	3,[XWD 036400,0]
	ODTIM
	HRROI	1,TMP
	HRROI	2,TMP1     
	MOVEI	3,40
	MOVEI	4,40
	SIN
	MOVE	1,[POINT 7,TMP1]
JUNK1:	ILDB	2,1
	CAIE	2,40
	JRST	JUNK1
	SETZ	2,
	DPB	2,1
	IDPB	2,1
	IDPB	2,1
	IDPB	2,1
	IDPB	2,1
	HRROI	1,TMP1
	HRROM	1,JFNTAB+4
JUNK2:	HRROI	1,TMP2
	MOVE	2,[XWD -1,-1]
 	MOVE	3,[XWD 245240,0]
	ODTIM
	HRROI	1,TMP2
	HRROI	2,TMP3     
	MOVEI	3,40
	MOVEI	4,40
	SIN
	MOVE	1,[POINT 7,TMP2]
JUNK3:	ILDB	2,1
	CAIE	2,40
	JRST	JUNK3
	MOVEI	2,"-"
	DPB	2,1
	HRROI	1,TMP2
	HRROI	2,TMP3
	MOVEI	3,40
	MOVEI	4,40
	SIN
	MOVE	1,[POINT 7,TMP2]
JUNK6:	ILDB	2,1
	CAIE	2,40
	JRST	JUNK6
	MOVEI	2,"-"
	DPB	2,1
;GOOD ONE IN TMP2
	HRROI	1,TMP2
	HRROI	2,TMP3
	MOVEI	3,40
	MOVEI	4,40
	SIN
	MOVE	1,[POINT 7,TMP2]
JUNK4:	ILDB	2,1
	CAIE	2,40
	JRST	JUNK4
	MOVEI	2,"-"
	DPB	2,1
	HRROI	1,TMP2
	HRROM	1,JFNTAB+5
	TMSG 	</
PLEASE ENTER YOUR NAME: />
	PUSHJ	P,REDUSR
	MOVE	B,A
	HRROI	A,DATBUF
	DIRST
	0			;ERROR REPORT  
	HRROI	B,[ASCIZ /   /]
	SETZ	3,
	SOUT
	MOVE	2,SINCE
	ODTIM
	HRROI	B,[ASCIZ/  TO /]
	SOUT
	MOVNI	B,1
	JRST	INDAT3
IDENTI:	TMSG </
TYPE IDENTIFICATION INFO: />
INDAT0:	MOVE B,[POINT 7,DATBUF]
INDAT:	PBIN
	CAIN A,"X"-100
	JRST [	TMSG </___
/>
		JRST INDAT0]
	CAIN A,1
	JRST [	CAME B,[POINT 7,DATBUF]
		CAMN B,[POINT 7,DATBUF-1,35]
		JRST [	MOVEI A,7
			PBOUT
			JRST INDAT]
		LDB A,B
		PBOUT
		MOVE A,B
		BKJFN
		JFCL
		MOVE B,A
		JRST INDAT]
	CAIN A,4
	JRST INDAT2
	CAIE A,32
	CAIN A,37
	JRST INDAT2
	IDPB A,B
	JRST INDAT

INDAT2:	MOVEI A,11
	IDPB A,B
	MOVE A,B
	MOVNI B,1
	MOVSI 3,(1B10!1B12!3B2)
INDAT3:	ODTIM
	TMSG </

/>
	MOVEI B,0
	IDPB B,A
	SETZM USRCNT
	SETZM TOTCNT
	SETZM HSHTAB
	MOVE A,[XWD HSHTAB,HSHTAB+1]
	BLT A,HSHUSR+HSHLEN-1
	MOVE A,[POINT 7,[ASCIZ /OTHERS/]]
	MOVEM A,HSHTAB
	MOVE A,[POINT 7,HSHBUF]
	MOVEM A,HSHSTR
	SKIPE	DAISW
	JRST	[
	HRROI 2,[ASCIZ /MINI-DUMP.LISTING/]
	MOVSI 1,400001
	GTJFN
	JRST LPTNAV
	JRST   INDAT4]
	MOVEI	1,JFNTAB		       ;long call
	GTJFN
	HALTF		
INDAT4:	MOVE B,[XWD 70000,100000+1B28]
	MOVEM 1,LPTJFN
	OPENF
	JRST [	MOVE A,LPTJFN
		RLJFN
		JFCL
		JRST LPTNAV]

DUMP0:	MOVEM A,LPTJFN
	PUSHJ P,INIFRK
	MOVEI B,100000
	PUSHJ P,MTOPEN		; OPEN A MAG TAPE
	SETZM TAPNO		; START AFTER TAPE 0
	GJINF
	SKIPN WHEEL
	HRRZM 2,SNGUSR
	MOVEM 2,CONDIR
	MOVEI F,DMPFIL		; ROUTINE TO CALL FOR EACH FILE
	PUSHJ P,DMPFI1
	SKIPE WHEEL
	PUSHJ P,SCANDI		; START SCAN WITH DI
	MOVE A,SNGUSR
	SKIPN WHEEL
	PUSHJ P,SCANFD
	PUSHJ P,ENDTAP		; TERMINATE TAPE
	MOVEI F,FIXBCK
	SKIPN INCRSW
	JRST DMPABC
	SKIPE WHEEL
	PUSHJ P,SCANDI
	MOVE A,SNGUSR
	SKIPN WHEEL
	PUSHJ P,SCANFD

DMPABC:	MOVE 1,CONDIR
	MOVEI 2,0
	CNDIR
	JFCL
	BTTMSG </

TOTAL FILES DUMPED = />
	MOVE B,TOTFIL
	MOVEI C,12
	PUSHJ P,LPNOUT
	PUSHJ P,TTNOUT
	BTTMSG </
TOTAL PAGES DUMPED = />
	MOVE B,TOTCNT
	MOVEI C,12
	PUSHJ P,LPNOUT
	PUSHJ P,TTNOUT
	MOVE A,LOWFRK
	WFORK
      	SKIPE	DAISW
	JRST	[
	LPMSG </

SUMMARY OF FILE CHARGES FOR ALL USERS

/>
	MOVEI XX,HSHCUM
	PUSHJ P,ACTPRT
	JRST	TSHIT1]
TSHIT1:	MOVE A,LPTJFN
	HRLI A,400000
	CLOSF
	0
	SKIPE	DAISW
	JRST	[
	 	HRRZS A
	 	MOVE B,[XWD 70000,200000]
	 	OPENF
	 	0
	 	MOVEM A,LSTJFN
	 	MOVSI A,1
	 	HRROI B,[ASCIZ /LPT:/]
	  	GTJFN
	  	JRST DMPABX
	 	MOVEM A,LPTJFN
	 	MOVE B,[XWD 70000,100000+1B26]
	 	OPENF
	 	JRST	DMPABX 
		JRST	LSTLUP]
DMPABX: SKIPE	DAISW
	JRST [	TMSG </
LPT NOT AVAILABLE, LISTING IS ON FILE MINI-DUMP.LISTING
/>
  		MOVE A,LSTJFN
 		CLOSF
 		JFCL
 		SKIPE	FULFLG
 		JRST	DELBAK
 		POPJ P,]
LSTLUP:	SKIPE	DAISW 
	JRST	[
		MOVE A,LSTJFN
		BIN
	 	JUMPE B,LSTLST
	 	MOVE 1,LPTJFN
	 	BOUT
	 	JRST LSTLUP]

LSTLST:	SKIPE	DAISW
	JRST	[
		MOVE A,LSTJFN
	 	HRLI A,400000
	 	CLOSF
	 	0
	 	HRRZS A
	 	DELF
	 	JFCL
		JRST	.+1]
	MOVEI	1,17
	HRL 	1,1
	HRR 	1,LPTJFN
	MOVE	2,[XWD 200000,0]
	MOVE 	3,[XWD 200000,0]
	SKIPN	DAISW
	CHFDB
	MOVE	1,LPTJFN
	RLJFN
	JFCL
	MOVE A,LPTJFN
	CLOSF
	JFCL
	SKIPN	FULFLG
	POPJ P,
DELBAK:	HRROI	B,[ASCIZ /<BACKUP>*.*;*/]
	HRLZI	A,100121
	GTJFN
	JRST	DELBK2
	MOVEM	A,FULFLG
DELBK1:	MOVE	A,FULFLG
	HRLI	A,400000
	DELF
	JFCL
	MOVE	A,FULFLG
	GNJFN
	SKIPA
	JRST	DELBK1
DELBK2:	MOVE	A,BAKDIR
	DELDF
	TMSG	</
CHECK BACKUP DIRECTORY/>
	POPJ	P,

LPTNAV:	TMSG </
MINI-DUMP.LISTING NOT AVAILABLE, LIST TO FILE: />
LPTNA1:	MOVSI A,2
	MOVE 2,[XWD 100,101]
	GTJFN
	JRST LSTNAV
	MOVEM A,LPTJFN
	MOVE 2,[XWD 70000,100000]
	OPENF
	JRST [	MOVE A,LPTJFN
		RLJFN
		JFCL
		JRST LSTNAV]
	JRST DUMP0

LSTNAV:	TMSG </
NOT AVAILABLE, LIST TO FILE: />
	JRST LPTNA1

FIXBCK:	MOVE A,JFN
	MOVE B,[XWD 1,FDBBCK]
	MOVEI C,C
	GTFDB
	JUMPGE C,CPOPJ
	HLLZS C
	LSH C,1
	HRLZI B,-1
	HRLI A,FDBBCK
	CHFDB
	POPJ P,

^REDUSS: MOVSI C,-NUSL
	MOVEM C,SNGUSR
	PUSHJ P,REDUSR
	MOVE C,SNGUSR
	HRRZM A,SUSL(C)
	AOBJN C,.+1
	CAIN B,","
	JUMPL C,.-6
	MOVNI C,(C)
	HRLZM C,SNGUSR
	MOVE C,SNGUSR
	POPJ P,

^REDUSR:MOVEI 1,100
	RFCOC
	TRZ 3,600000
	SFCOC
	MOVE B,[POINT 7,NAMBUF]
REDUSL:	PBIN
	CAIN A,1
	JRST [	CAME B,[POINT 7,NAMBUF]
		CAMN B,[POINT 7,NAMBUF-1,35]
		JRST [	MOVEI A,7
			PBOUT
			JRST REDUSL]
		LDB A,B
		PBOUT
		MOVE A,B
		BKJFN
		0
		MOVE B,A
		JRST REDUSL]
	CAIE A,"X"-100
	CAIN A,177
	JRST [	TMSG </___
/>
		JRST REDUSR]
	CAIE A,","
	CAIN A,37
	JRST REDUS1
	CAIN A,33
	JRST REDUS2
	IDPB A,B
	JRST REDUSL

REDUS1:	MOVEI A,100
	BKJFN			; BACK UP TO REREAD TERMINATOR
	0
	TDZA A,A
REDUS2:	MOVSI A,400000
	PUSH P,B
	IDPB A,B
	MOVE B,[POINT 7,NAMBUF]
	STDIR
	JRST [	TMSG </
NO SUCH USER, TRY AGAIN: />
		POP P,A
		JUMPL A,REDUSR	;TRY AGAIN IF TERM WAS ESC
		PBIN		;OTHERWISE, FLUSH BKJFN'D TERM
		JRST REDUSR]
	JRST [	MOVEI A,7
		PBOUT
		POP P,B
		JRST REDUSL]
	MOVEI C,0
	IDPB C,B
	EXCH A,(P)
	PSOUT
	PBIN			; GET TERMINATOR
	MOVE B,A
	POP P,A
	POPJ P,

; SCAN DIRECTORIES

^SCANDI:MOVEI B,1
SCNDIL:	MOVE A,[POINT 7,DIRNAM]
	DIRST
	JRST SCNDI1
	PUSH P,B
	HRRZ A,B
	PUSHJ P,SCANFD
	POP P,B
SCNDI1:	CAIGE B,MAXUSR-1
	AOJA B,SCNDIL
	POPJ P,

DMPUSR:	SETZM BUFF
	MOVE B,[XWD BUFF,BUFF+1]
	BLT B,BUFF+777
	MOVE A,DIRNUM
	MOVEI B,BUFF
	MOVE C,[POINT 7,BUFF+100]
	GTDIR
	JFCL
	MOVE B,[XWD DIRNAM,BUFF+40]
	BLT B,BUFF+77
	MOVNI A,USRX
	MOVEM A,TYP
	PUSHJ P,MTOUT
	POPJ P,

^SCANFD:HRRZS A
	SKIPL FIRST
	CAMN A,FIRST
	JRST .+2
	POPJ P,
	SETOM FIRST
;IF ABTUSR =-1,THEN IF A= ANY OF SUSL(B), DONT DUMP IT
	SKIPGE B,SNGUSR		; LIST OF USERS?
	 JRST [	CAMN A,SUSL(B)	; YES CHECK IT
		JRST .+1
		AOBJN B,.
		SKIPE ABTUSR
		JRST ..C		;IT WASNT IN LIST, DO DUMP IT.
		POPJ P,]
	SKIPE ABTUSR
	POPJ P,		;WAS FOUND IN LIST BUT ABTURS
..C:	MOVEM A,DIRNUM
	MOVE B,A
	MOVE A,[POINT 7,DIRNAM]
	MOVEM A,DIRPTR
	DIRST
	JFCL
	MOVEI B,0
	IDPB B,A
	CAIE F,DMPFIL
	JRST SCANF1
	SKIPN SNGUSR
	SKIPN WHEEL
	JRST SCANF1
	PUSHJ P,DMPUSR		;OUTPUT USER BLOCK

SCANF1:	MOVE A,DIRNUM
	MOVEI B,0
	CNDIR			; CONNECT TO DIRECTORY FOR SPEED
	 JFCL
	CAIN F,DMPFIL
	PUSHJ P,BEGUSR
	MOVE A,[POINT 7,NAMBUF]
	MOVEI B,"<"
	IDPB B,A
	MOVE B,DIRPTR
	MOVEI C,0
	SOUT
	HRROI B,[ASCIZ />*.*;*/]
	SOUT
	HRROI B,NAMBUF
	MOVSI A,100101
	GTJFN
	 JRST ENDU
	MOVE	B,DIRNUM
	CAME	B,PRIDIR
	CAMN	B,BAKDIR
	JRST	ENDU
	CAMN	B,NORDIR
	JRST	ENDU
 	MOVEM A,SCNJFN
SCNLUP:	HRRZ A,SCNJFN
	MOVEM A,JFN
	PUSHJ P,(F)
	MOVE A,SCNJFN
	GNJFN
	JRST ENDU
	JRST SCNLUP

ENDU:	CAIN F,DMPFIL
	JRST ENDUSR
	POPJ P,

DMPFI0:	PUSHJ P,ENDTAP
	MOVE A,LOWFRK
	WFORK
IFE NETDMP,<
	MOVE 1,MTJFN
	CLOSF
	JFCL
	TMSG </
MOUNT NEXT TAPE/>
	PUSHJ P,MTOPEN
>
DMPFI1:	PUSHJ P,REWIND
	RADIX =10
;
;  shortened logical tape to fix LONG file bug
	MOVE A,[2160*12000]		; MILLI-INCHES PER REEL
;
	SUB A,[514*((512+NHEAD)*50/8+750)]	; MILLI-INCHES IN LONGEST FILE
	RADIX =8
	MOVEM A,TAPLFT
	MOVE 1,[POINT 7,BUFF]
	HRROI 2,[ASCIZ /

TAPE # /]
	MOVEI 3,0
	SOUT
	AOS 2,TAPNO
	MOVEI 3,=10
	NOUT
	JFCL
	MOVEI B,11
	IDPB B,A
	MOVE B,[POINT 7,DATBUF]
	MOVEI C,0
	SOUT
	MOVEI B,0
	IDPB B,A
	MOVNI A,TPHDX
	MOVEM A,TYP
	PUSHJ P,MTOUT
	PUSHJ P,ENDFIL
	LPMSG </

/>
	HRROI 2,BUFF
	PUSHJ P,BTMSGQ
	BTTMSG </

/>
	TMSG</DIRECTORY	PAGES	DIR#
-----------	-----	----
/>
	POPJ P,

DMPFIL:	MOVE 2,[XWD 1,1]
	MOVEI 3,B
	GTFDB
	TLNE B,FDBNXF!FDBNEX!FDBDEL!FDBTMP
	JRST DMPFIZ
	LPMSG </
/>
	MOVE A,[POINT 7,NAMBUF]
	MOVEI C,0
	MOVEI B,"<"
	IDPB B,A
	MOVE B,DIRPTR
	SOUT
	MOVEI B,">"
	IDPB B,A
	MOVEM A,NAMPTR
	PUSH P,A
	PUSHJ P,CLENG
	EXCH A,(P)
	MOVE B,JFN
	MOVE C,[BYTE (3)0,0,1,1,1,0,0(5)0,0,1]
	JFNS
	PUSHJ P,CLENG
	POP P,B
	SUB A,B
	PUSH P,A
	MOVE B,NAMPTR
	PUSHJ P,LPMSGQ
	POP P,A
	PUSHJ	P,TAB1
	MOVEI A,NAMBUF
	MOVEI B,[ASCIZ /<SYSTEM>DSKBTTBL.;@/]
	PUSHJ P,STRCMP
	JRST NODUMP
	MOVEI A,NAMBUF
	MOVEI B,[ASCIZ /<SYSTEM>DIRECTORY.;@/]
	PUSHJ P,STRCMP
	JRST NODUMP
	MOVEI A,NAMBUF
	MOVEI B,[ASCIZ /<SYSTEM>INDEX.;@/]
	PUSHJ P,STRCMP
	JRST NODUMP
	MOVEI A,NAMBUF
	MOVEI B,[ASCIZ/<SYSTEM>NETSER.LOG;@/]
	PUSHJ P,STRCMP
	JRST NODUMP
	MOVEI A,NAMBUF
	MOVEI B,[ASCIZ/<ACCOUNTS>FACT.;@/>]
	PUSHJ P,STRCMP
	JRST NODUMP


REGET:	MOVE A,JFN
	SKIPE	SINCE
	JRST	[MOVE B,[XWD 25,0]
		 MOVEI 3,BUFF
		 GTFDB
		 MOVE B,BUFF+FDBWRT
		 CAMGE B,SINCE
		 JRST NDM
		 JRST .+1]
	SKIPE INCRSW
	JRST [	MOVE B,[XWD 25,0]
		MOVEI 3,BUFF
		GTFDB
		HLRZ B,BUFF+FDBCNT
		CAIN B,0
		AOS B
		SKIPLE C,BUFF+FDBBCK
		CAME B,C
		JRST .+1
		JRST NDM]
	MOVE 2,[XWD 440000,1B19+1B25+1B27]
	SKIPN WHEEL
	TRZ 2,1B27
	OPENF
	JRST [	MOVE A,JFN
		MOVE B,[XWD 440000,1B19+1B27]
		SKIPN WHEEL
		TRZ 2,1B27
		OPENF
		JRST NDM1
		JRST .+1]
	MOVE 2,1
	MOVE 1,[POINT 7,BUFF]
	MOVE 3,[BYTE (3)0,1,1,1,1,1,1(1)1(4)0(5)0(5)1]
	JFNS
	MOVEI B,0
	IDPB B,A
	MOVNI A,FLHDX
	MOVEM A,TYP
	PUSHJ P,MTOUT
	MOVE A,JFN
	MOVE B,[XWD 1,FDBCTL]
	MOVEI C,A
	GTFDB
	TLNN A,FDBLNG
	TDZA A,A
	SETO A,
	MOVEM A,LONGSW
	MOVE A,JFN
	MOVE B,[XWD 1,FDBBYV]
	MOVEI C,A
	GTFDB
	HRRZM A,PAGCNT
	HRRZM A,CNTR
	HRLZ A,JFN
	AOS NOFILS

DMPLUP:	MOVEM A,PAGNO		; SAVE IN CASE NO PAGES ARE FOUND
	FFUFP
	JRST DMPLUX
	RPACS
	MOVEM B,ACCESS
	MOVEM A,PAGNO
	TLNN B,(1B5)
	JRST DMPLUX
	MOVE 2,[XWD 400000,BUFPAG]
	MOVSI C,140000
	PMAP
	MOVEM 1,LASTID
	SETZM TYP
	PUSHJ P,MTOUT
	SOS CNTR
	AOS A
	TRNE A,777777
	JRST DMPLUP
DMPLUX:	SKIPG CNTR
	JRST DMPLX1
	BTTMSG </
CANNOT FIND ALL THE PAGES OF FILE />
	MOVE 2,JFN
	MOVEI 3,0
	MOVEI 1,101
	JFNS
	MOVE 1,LPTJFN
	JFNS
	BTTMSG </
/>

DMPLX1:	MOVNI 1,1
	MOVE 2,[XWD 400000,BUFPAG]
	PMAP
	MOVE 1,JFN
	MOVE 2,[XWD 25,0]
	MOVEI 3,BUFF
	GTFDB
	MOVNI 1,FLTRX
	MOVEM 1,TYP
	HLRZ C,BUFF+FDBCNT
	CAIN C,0
	AOS C
	HRRZ B,BUFF+FDBBCK
	CAME B,C
	TLOA C,400000
	MOVE C,BUFF+FDBBCK
	MOVNI B,1
	MOVE A,JFN
	HRLI A,FDBBCK
	SKIPE INCRSW
	JRST [	CHFDB
		HRRM C,BUFF+FDBBCK
		HLLZS C
		LSH C,1
		HLLM C,BUFF+FDBBCK
		JRST .+1]
	SETZM NODMSW

DMPDNN:	MOVE A,[POINT 7,NAMBUF]
	MOVE B,JFN
	MOVEI C,100000
	JFNS
	PUSHJ P,CLENG
	PUSH P,A
	SKIPE NODMSW
	JRST DMPDNA
	PUSHJ P,MTOUT
	PUSHJ P,ENDFIL
	MOVE A,JFN
	HRLI A,400000
	CLOSF
	0
DMPDNA:	POP P,A
	PUSHJ	P,TAB1
	MOVE A,[POINT 7,NAMBUF]
	PUSHJ P,ACTLUK
	MOVE B,PAGCNT
	ADDM B,HSHUSR(XX)
	ADDM B,HSHCUM(XX)
	SKIPN NODMSW
	ADDM B,USRCNT
	MOVE C,[XWD 100003,12]
	PUSHJ P,LPNOUT
	HRROI	B,[ASCIZ /	/]
 	SKIPN	NODMSW
 	PUSHJ	P,LPMSGQ
 	SKIPE B,NODMSW
 	PUSHJ P,LPMSGQ
	SKIPE NODMSW
	MOVE 2,BUFF+FDBWRT
	SKIPE NODMSW
	MOVE	3,[XWD 044240,000000]
	SKIPE NODMSW
	ODTIM
	SKIPE NODMSW
	MOVE	2,1
	SKIPE NODMSW
	PUSHJ	P,LPMSGQ


DMPFID:DMPFIZ:	SKIPL TAPLFT
	POPJ P,
	JRST DMPFI0

NODUMP:	HRROI B,[ASCIZ /SPEC FILE  /]
	PUSHJ P,LPMSGQ
	JRST DMPFID

NDM1:	SKIPA B,[POINT 7,[ASCIZ /	NOT OPN/]]
NDM:	MOVE B,[POINT 7,[ASCIZ /	  /]]
	MOVEM B,NODMSW
	SIZEF
	JFCL
	MOVEM C,PAGCNT
	JRST DMPDNN

LEVTAB:	RET
	RET
	RET

CHNTAB:	REPEAT =11,<0>
	XWD 1,MEMERR
	REPEAT =35-=11,<0>

MEMERR:	MOVEM 17,INTAC+17
	MOVEI 17,INTAC
	BLT 17,INTAC+16
	MOVE P,[XWD -30,INTSTK-1]
	PUSH P,40
	MOVE 1,LASTID
	CAMN 1,LSTERO
	JRST MEMXIT
	MOVEM 1,LSTERO
	BTTMSG </
DISC ERROR IN FILE />
	HLRZ 1,LASTID
	GTSTS
	TLNN 2,(1B10)
	JRST [	BTTMSG </(UNKNOWN FILE NAME)/>
		JRST MEMERZ]
	HLRZ 2,LASTID
	MOVEI 1,101
	MOVEI 3,0
	JFNS
	JFCL
	MOVE 1,LPTJFN
	JFNS
	JFCL
	BTTMSG </, PAGE />
	HRRZ 2,LASTID
	MOVEI 1,101
	MOVEI 3,=10
	NOUT
	0
	MOVE 1,LPTJFN
	NOUT
	0

MEMERZ:	TMSG </
DISC ADDRESS =	/>
	MOVE 1,[SIXBIT /DSKERR/]
	SYSGT
	HRRZM 2,DSKERN
	MOVE 1,DSKERN
	HRLI 1,1
	GETAB
	0
	MOVE 2,1
	TLZ 2,700000
	MOVEI 3,10
	MOVEI 1,101
	NOUT
	0
	TMSG </
CLASS & COUNT =	/>
	MOVE 1,DSKERN
	HRLI 1,2
	GETAB
	0
	MOVE 2,1
	MOVEI 1,101
	MOVEI 3,10
	NOUT
	0
	TMSG </
CORE ADDRESS =	/>
	MOVE 1,DSKERN
	HRLI 1,3
	GETAB
	0
	MOVE 2,1
	MOVEI 1,101
	MOVEI 3,10
	NOUT
	0

	TMSG </
ERROR STATUS =	/>
	MOVE 1,DSKERN
	HRLI 1,4
	GETAB
	0
	MOVE 2,1
	MOVEI 1,101
	MOVEI 3,10
	NOUT
	0
	TMSG </
/>
MEMXIT:	POP P,40
	MOVSI 17,INTAC
	BLT 17,17
	DEBRK

BADERR:	TMSG </
UNEXPECTED IO ERROR INTERRUPT...IGNORED/>
	JRST MEMXIT

^STRCMP:HRLI A,(<POINT 7,0>)
	HRLI B,(<POINT 7,0>)
STRCML:	ILDB C,B
	ILDB XX,A
	CAIE C,"@"
	CAMN C,XX
	JRST STRCM1
	AOS (P)
	POPJ P,

STRCM1:	CAIN C,"@"
	JUMPN XX,STRCML+1
	JUMPN XX,STRCML
	POPJ P,
ENDUSR:	MOVEI A,100
	RFPOS
	HRRZ C,B
	CAIGE C,10
	TMSG</	/>
	TMSG</	/>
	MOVE B,USRCNT
	JUMPN B,ENDUS2
	TMSG</        />
	JRST ENDUS3
ENDUS2:	MOVE C,[XWD 100005,12]
	PUSHJ P,TTNOUT
	TMSG</   />
ENDUS3:	MOVE 	B,DIRNUM
	MOVE 	C,[XWD 100004,10]
	PUSHJ	P,TTNOUT
ENDUS1: LPMSG </
TOT/>
	MOVE C,[XWD 100026,12]
	MOVE B,NOFILS
	ADDM B,TOTFIL
	PUSHJ P,LPNOUT
	LPMSG </ FILES/>
	MOVE C,[XWD 100016,12]
	MOVE B,USRCNT
	ADDM B,TOTCNT
	PUSHJ P,LPNOUT
	LPMSG </ PGS
/>
	SKIPE	DAISW
	JRST	[
  	LPMSG	</ PAGES
 	SUMMARY OF FILE CHARGES
 
/>
	JRST	.+1]
 	MOVEI XX,HSHUSR
  	JRST ACTPRT

BEGUSR:	BTTMSG </
/>
	SETZM USRCNT
	SETZM NOFILS
	MOVE B,DIRPTR
	PUSHJ P,BTMSGQ
	LPMSG </
/>
	SETZM HSHUSR
	MOVE A,[XWD HSHUSR,HSHUSR+1]
	BLT A,HSHUSR+HSHLEN-1
	POPJ P,

CLENG:	MOVEI B,0
	IDPB B,A
	MOVEI B,-NAMBUF(A)
	IMULI B,5
	HRLI A,440700
	ILDB C,A
	JUMPE C,.+2
	AOJA B,.-2
	MOVE A,B
	POPJ P,

TAB1:	MOVEI B,40
	MOVE A,LPTJFN
	BOUT
	POPJ P,

ACTPRT:	HRLI XX,YY
	MOVEI YY,HSHLEN-1
ACTPR1:	SKIPE B,HSHTAB(YY)
	PUSHJ P,ACTPRR
	SOJGE YY,ACTPR1
	POPJ P,

ACTPRR:	SKIPG @XX
	POPJ P,
	SKIPE	DAISW
	JRST	[
 	PUSHJ P,LPMSGQ
 	LPMSG </		/>
	JRST	.+1]
	MOVE B,@XX
	SKIPE	DAISW
	JRST	[
 	MOVE C,[XWD 100006,12]
 	PUSHJ P,LPNOUT
 	LPMSG </ PAGES
/>
	JRST	.+1]
	POPJ P,

ACTLUK:	PUSH P,A
	MOVEI XX,1
	ILDB B,A
	JUMPE B,HSHD
	IMUL XX,B
	JRST .-3

HSHD:	TSC XX,XX
	LSH XX,-1
	MULI XX,HSHLEN
	MOVEI YY,HSHLEN
LUKLUP:	MOVE A,(P)
	SKIPN B,HSHTAB(XX)
	JRST HSHNEW
LUKLU1:	ILDB C,A
	ILDB D,B
	CAME C,D
	JRST HSHNXT
	JUMPN C,LUKLU1
ACTXIT:	POP P,A
	POPJ P,

HSHNXT:	SOSGE XX
	MOVEI XX,HSHLEN-1
	SOJG YY,LUKLUP
	MOVEI XX,0
	JRST ACTXIT

HSHNEW:	MOVE A,(P)
	MOVE B,HSHSTR
	MOVEM B,HSHTAB(XX)
LUKLU2:	ILDB C,A
	IDPB C,B
	JUMPN C,LUKLU2
	MOVEM B,HSHSTR
	JRST ACTXIT

BEND	DUMP

BEGIN	LOAD AND CHECK

^CHCK:	SETOM CHECK
	SKIPA
^LOAD:	SETZM CHECK
	GJINF
	SKIPN 1
	TMSG </
THIS WOULD BE SOMEWHAT FASTER IF YOU WERE LOGGED IN./>
	SETZM RTAPNO
LOA0:	SETOM LOADSW
	SETOM SAMDIR		;NORMAL IS LOAD TO SAME DIRECTORY
	SETOM CDIRN		;NO CONNECTED DIR NOW
	SETZM SUSER
	SKIPE CHECK
	JRST LODFI1
	TMSG </
SPECIFIC USERS? />
	PBIN
	CAIE	A,"n"
	CAIN A,"N"
	JRST [	SETZM SUSER
		JRST LOA1]
	CAIE	A,"a"
	CAIN A,"A"
	JRST [SETOM ABTUSR
		TMSG </, ALL BUT USERS: />
		PUSHJ P,REDUSS
		MOVEM C,SUSER
		JRST LOA1]
	CAIN	A,"y"
	JRST	GART
	CAIE A,"Y"
	JRST LOA0
GART:	TMSG </ES, USERS: />
	PUSHJ P,REDUSS
	MOVEM C,SUSER
LOA1:	TMSG </
INTO SAME DIRECTORY(S)? />
	PBIN
	CAIE	A,"y"
	CAIN A,"Y"
	JRST LODFI1		;YES MEANS SAME DIR AS ON TAPE
	CAIN	A,"n"
	JRST	LODF10
	CAIE A,"N"
	JRST LOA1
LODF10:	SETZM SAMDIR		;NO MEANS ONLY TO PRESENTLY CONNECTED D
LODFI1:	MOVEI B,200000
	PUSHJ P,MTOPEN
	MOVEI A,101
	MOVEI B,37
	BOUT
	MOVE A,MTJFN
	MOVEI B,1
	MTOPR
	SETZM RSEQ
	AOS RSEQ
	PUSHJ P,MTRED
	JRST LODFI2
	TMSG </  IN TAPE HEADER
/>
LODFI2:	MOVNI A,TPHDX
	CAME A,TYP
	ERROR(</
TAPE DOESN'T START WITH HEADER/>,<JRST LODEND>)
	MOVE 2,[POINT 7,BUFF]
	MOVEI 1,101
	MOVEI 3,0
	SOUT
	TMSG </
/>
	AOS A,RTAPNO
	CAME A,TAPNO
	ERROR(</
TAPES NOT IN ORDER...CONTINUING/>,<JRST .+1>)
	MOVE A,MTJFN
	MOVEI B,6
	MTOPR
	AOS RSEQ
LODFIL:	PUSHJ P,MTRED
	JRST LODFI3
	TMSG </  IN TAPE TRAILER OR FILE HEADER, />
LODFI5:	PUSHJ P,MTRED
	JRST LODFI4
	MOVE A,MTJFN
	GTSTS
	TLNN A,1000
	JRST LODFI5
	TMSG </FOLLOWED BY EOF, END OF TAPE ASSUMED/>
	JRST LODEND

LODFI4:	PUSHJ P,LODSKP
	JRST LODFIL

LODFI3:	MOVNI A,TPTRX
	CAMN A,TYP
	JRST LODEND
	MOVNI A,FLHDX
	CAME A,TYP
	JRST LODUSR
	SKIPN LOADSW
	JRST [	PUSHJ P,LODSKP
		JRST .+2]
	PUSHJ P,LODSBR
	JRST LODFIL

LODEND:	MOVE A,MTJFN
	MOVEI B,1
	MTOPR
	MOVE A,MTJFN
	CLOSF
	0
	SETOM LOADSW
	SETOM CDIRN
LODEN1:	TMSG </
MOUNT NEXT TAPE , TYPE C WHEN READY. TYPE N IF NO MORE: />
	MOVEI 1,100
	BIN
	CAIE	B,"c"
	CAIN B,"C"
	JRST LODFI1
	CAIN	B,"n"
	JRST	LODY
	CAIE B,"N"
	JRST LODEN1
LODY:	MOVEI A,101
	MOVEI B,37
	BOUT
	SKIPE WHEEL
	SKIPE CHECK
	POPJ P,
	SKIPE SUSER
	POPJ P,
	GTAD
	SKIPL A
	STAD		; SET TIME AND DATE AFTER LOADING
	 JFCL
	POPJ P,

LODUSR:	MOVNI A,USRX
	CAME A,TYP
	ERROR(</
BAD RECORD TYPE ON TAPE...IGNORED/>,<JRST LODFIL>)
	HRROI B,BUFF+40
	PUSHJ P,TMSGQ		;TYPE NAME
	TMSG </
/>
	SETOM LOADSW
	SKIPE A,SUSER
	JRST [SETZ A,
		HRROI B,BUFF+40
		STDIR		;CONVERT NAME ON TAPE TO NUMBER
		JFCL
		JRST LODUS1	;NO SUCH
		MOVEI 1,0(1)	;FLUSH LH BITS
		MOVE B,SUSER
		SKIPE ABTUSR		;IF ABTUSR=0 DO OLD CODE
		JRST ..B
	..A:	CAMN A,SUSL(B)
		JRST LODUS1		;LOAD THIS ONE
		AOBJN B,..A
		SETZM LOADSW		;NOT FOUND, DONT LOAD
		JRST LODUS1
	..B:	CAMN A,SUSL(B)		 ;LOAD IF NOT FOUND IF ABTUSR=-1
		JRST [SETZM LOADSW
			JRST LODUS1]
		AOBJN B,..B
		JRST LODUS1]
	SKIPN SAMDIR		;LOADING ONLY TO CONNECTED DIR?
	JRST LODUS1		;YES, DON'T CREATE NEW DIR
	SKIPE WHEEL
	SKIPE CHECK
	JRST LODUS1
	MOVE A,[POINT 7,BUFF+40]
	MOVE B,[XWD 367740,BUFF]
	CRDIR
LODUS1:	JRST LODFIL

^LODSBR:SKIPGE CDIRN		;GET A CONNECTED DIR?
	JRST CDIR		;NO
	MOVE A,[POINT 7,NAMBUF]
	MOVE B,[POINT 7,BUFF,6]
LODSB1:	ILDB C,B
	ILDB D,A
	CAMN C,D
	JRST LODSB1
	CAIN C,">"
	CAIE D,0
	JRST CDIR		;NAME DIFFERENT, GO CHANGE DIR
CDIR2:	SKIPE CHECK
	PUSHJ P,DELACT		; GET RID OF ACCOUNT AND PROTECTION 1ST
	MOVSI 1,401001
	SKIPE CHECK
	MOVSI 1,100001
	GTJFN
	JRST CANNOT
	MOVEM 1,JFN
^LODSBA:MOVE B,[XWD 440000,342000]
	SKIPE CHECK
	MOVE B,[XWD 440000,200000+1B27]
	SKIPN WHEEL
	TRZ B,1B27
	OPENF
	JRST CANTOP
LODLUP:	PUSHJ P,MTRED
	JRST LODLU1
	TMSG </  IN DATA OR TRAILER OF FILE: />
	MOVEI A,101
	MOVE B,JFN
	MOVEI C,0
	JFNS
	TMSG </,
  DATA ASSUMED VALID/>
LODLU1:	SKIPE TYP
	JRST LODEFL
	HRLZ B,JFN
	HRR B,PAGNO
	SKIPE CHECK
	JRST CHKLUP
	MOVE 1,[XWD 400000,BUFPAG]
	MOVSI 3,160000
	PMAP
	PUSH P,B
	MOVE B,A
	MOVNI A,1
	PMAP
	POP P,1
	MOVE 2,ACCESS
	SPACS
	JRST LODLUP

CDIR:	SETOM CDIRN		;FORGET CURRENT DIR
	MOVE A,[POINT 7,NAMBUF]
	MOVE B,[POINT 7,BUFF,6]	;START AFTER <
	ILDB C,B
	CAIN C,">"
	SETZ C,
	IDPB C,A		;MOVE USER NAME TO BUFFER
	JUMPN C,.-4
	SETZ A,
	HRROI B,NAMBUF
	STDIR
	JFCL
	JRST [	SKIPN SUSER	;NO SUCH USER, HOWEVER IF NOT
		SKIPE SAMDIR	;SINGLE USER AND NOT SAME DIR
		JRST LODSKP
		SETZM CDIRN	;THEN LOAD IT ANYHOW
		JRST LODSBR]
	MOVEI 1,0(1)
	SKIPN C,SUSER		;SPECIFIED USERS?
	JRST CDIR1		;NO
	CAMN A,SUSL(C)		;YES, THIS ONE?
	JRST CDIR1		;YES
	AOBJN C,.-2
	SKIPN ABTUSR
	JRST LODSKP		;DON'T WANT THIS USER
	JRST CDRIZ

CDIR1:	SKIPE ABTUSR
	JRST LODSKP
CDRIZ:	MOVEM 1,CDIRN		;CAN LOAD FOR THIS USER
	SKIPN SAMDIR		;SAME DIRECTORY AS ON TAPE?
	JRST LODSBR		;NO, DON'T RE-CONNECT
	SETZ 2,
	CNDIR
	JRST .+2
	JRST LODSBR
	SETOM CDIRN
	MOVE B,[POINT 7,BUFF]
	JRST CDIR2		;TRY WHOLE STRING

DELACT:	PUSH P,B
	ILDB A,B
	CAIE A,";"
	JRST .-2
	ILDB A,B
	CAIE A,";"
	JRST .-2
	MOVEI A,0
	DPB A,B
	POP P,B
	POPJ P,

CHKLUP:	MOVE A,B
	MOVE B,[XWD 400000,BF2PAG]
	MOVSI 3,100000
	PMAP
	MOVSI XX,-1000
CMPLUP:	MOVE A,BUFF(XX)
	CAME A,BUFF2(XX)
	JRST CMPERR
	AOBJN XX,CMPLUP
	HRLZ A,JFN
	HRR A,PAGNO
	RPACS
	XOR B,ACCESS
	AND B,[XWD 170000,0]
	JUMPE B,LODLUP
	TMSG </
ACCESS ERROR/>
	JRST CMPER1

CMPERR:	TMSG </
COMPARE ERROR/>
CMPER1:	TMSG </, PAGE />
	HRRZ B,PAGNO
	MOVEI C,12
	PUSHJ P,TTNOUT
	TMSG </, FILE />
	MOVE B,JFN
	MOVEI C,0
	JFNS
	JRST LODLUP

LODEFL:	MOVNI A,FLTRX
	CAME A,TYP
	ERROR(</
BAD RECORD TYPE ON TAPE...IGNORED/>,<JRST LODLUP>)
	SKIPE CHECK
	JRST CHKFDB
	MOVSI XX,-25
FIXFDB:	MOVE A,JFN
	MOVE 3,BUFF(XX)
	SKIPN WHEEL
	SKIPA 2,NWMASK(XX)
	MOVE 2,MASK(XX)
	HRL A,XX
	CHFDB
	AOBJN XX,FIXFDB
LODCLZ:	MOVE 1,JFN
	CLOSF
	0
^LODEOF:MOVE A,MTJFN
	MOVEI B,6
	MTOPR
	AOS RSEQ
	POPJ P,

CHKFDB:	MOVNI A,1
	MOVE B,[XWD 400000,BF2PAG]
	PMAP
	MOVE A,JFN
	MOVE B,[XWD 25,0]
	MOVEI 3,BUFF2
	GTFDB
	MOVSI XX,-25
CHKFDL:	MOVE A,BUFF(XX)
	CAME A,BUFF2(XX)
	JRST  FDBER0
CHKFD0:	AOBJN XX,CHKFDL
	JRST LODCLZ
FDBER0:	HRRZ A,XX
	CAIN A,2			;FDBEXT
	JRST CHKFD0
	CAIN A,6			;FDBUSE
	JRST CHKFD0
	CAIN A,7			;FDBERR
	JRST CHKFD0
	CAIN A,15			;FDBREF
	JRST CHKFD0
	CAIN A,16			;FDBCNT
	JRST CHKFD0
FDBERR:	TMSG </
DIFFERENCE IN />
	MOVE B,FDBNAM(XX)
	MOVEI A,0
	ROTC A,6
	JUMPE A,FDBER9
	ADDI A,40
	PBOUT
	JRST .-5

FDBER9:	TMSG </ OF FILE />
	MOVE B,JFN
	MOVEI 1,101
	MOVEI C,0
	JFNS
	JRST CHKFD0

CANNOT:	TMSG </
CANNOT GET JFN FOR FILE />
	JRST CANT1

CANTOP:	MOVE A,JFN
	RLJFN
	0
	TMSG </
CANNOT OPEN FILE />
CANT1:	HRROI 2,BUFF
	MOVEI 3,0
	MOVEI 1,101
	SOUT
^LODSKP:SETOM RSEQ
	MOVE A,MTJFN
	MOVEI B,16
	MTOPR
	POPJ P,

BEND	LOAD

COMCHK:	MOVSI XX,-1000-NHEAD
	MOVEI A,0
	JCRY0 COMCH1
COMCH1:	ADD A,BUFF-NHEAD(XX)
	JCRY0 [AOJA A,.+1]
	AOBJN XX,COMCH1
	CAMN A,[-1]
	AOS A
	POPJ P,

INIFRK:	MOVSI A,400000
	CFORK
	ERROR(</
CANNOT CREATE LOWER FORK/>,<HALTF>)
	MOVEM A,LOWFRK
	HRLZ B,A
	MOVSI A,400000
	MOVSI 3,160000
	PMAP
	AOS A
	TRNN A,777600
	AOJA B,.-3
	SETOM BUFCNT
	MOVEI A,BUFFER+1
	MOVEM A,PRGBUF
	MOVEM A,FRKBUF
	POPJ P,

MTOUT:	PUSH P,A
	PUSH P,B
	RADIX =10
	MOVN A,[(512+NHEAD)*50/8+750]
	RADIX =8
	ADDM A,TAPLFT
	AOS SEQ
	SETZM CHKSUM
	PUSHJ P,COMCHK
	SETCAM A,CHKSUM
	PUSHJ P,WATFRK
	MOVEI B,777+NHEAD(A)
	BLT A,(B)
	PUSHJ P,STFRK
	POP P,B
	POP P,A
	POPJ P,

MTRED:	PUSH P,A
	PUSH P,B
	MOVEI XX,10
	MOVEI B,0
MTRED0:	MOVE A,MTJFN
	MTOPR
	MOVEI 2,MTREDC
	DUMPI
	JRST [	MOVE A,MTJFN
		GTSTS
		TLNE B,1000
		JRST MTEOF
		MOVEI B,7
		SOJG XX,MTRED0
		MOVSI A,400000
		IORM A,RSEQ
		AOS RSEQ
		TMSG </
READ ERROR!!!/>
		AOS -2(P)
		JRST MTRED1]
	SKIPG A,RSEQ
	JRST [	MOVE B,SEQ
		TLNE A,(1B1)
		JRST [	MOVEM B,RSEQ
			JRST MTRED2]
		TLZ A,(1B0)
		EXCH A,SEQ
		MOVEM A,RSEQ
		CAME A,SEQ
		JRST [	TMSG </ NOT RECOVERED/>
			JRST MTRED2]
		TMSG </ RECOVERED/>
		JRST MTRED2]
	AOS A,RSEQ
	CAME A,SEQ
	JRST [	TMSG </
SEQUENCE ERROR
/>
		AOS -2(P)
		MOVE A,SEQ
		MOVEM A,RSEQ
		JRST MTRED1]
MTRED2:	PUSHJ P,COMCHK
	JUMPN A,[TMSG </
CHECKSUM ERROR/>
		MOVSI A,400000
		IORM A,RSEQ
		AOS RSEQ
		AOS -2(P)
		JRST MTRED1]

MTRED1:	POP P,B
	POP P,A
	POPJ P,

MTEOF:	TMSG </
UNEXPECTED EOF/>
	AOS -2(P)
	JRST MTRED1

MTREDC:	XWD -1000-NHEAD,BUFF-NHEAD-1
	0

WATFRK:	MOVE A,BUFCNT
	CAIL A,NBUF-1
	JRST [	MOVEI 1,=200
		DISMS
		JRST .-2]
	MOVE A,PRGBUF
	MOVE B,-1(A)
	MOVEM B,PRGBUF
	HRLI A,BUFF-NHEAD
	POPJ P,

STFRK:	AOSE BUFCNT
	POPJ P,
	MOVE A,LOWFRK
	WFORK
	MOVE A,LOWFRK
	MOVEI B,FRK1
	SFORK
	POPJ P,

FRK1:	MOVE P,[XWD -10,FRKPDL-1]
	MOVE A,FRKBUF
	MOVE B,-1(A)
	MOVEM B,FRKBUF
	SKIPG B,XTYP(A)
	JRST FRKWRT
	CAIN B,1
	SETZM FRKSEQ
	AOS C,FRKSEQ
	CAME C,XSEQ(A)
	JRST FRKSQE
	MOVE A,MTJFN
	MTOPR
FRKXT:	SOSL BUFCNT
	JRST FRK1
	HALTF

FRKSQE:	TMSG </
SEQUENCE ERROR IN FORK, MUST BE PROGRAM BUG./>
	HALTF

FRKWRT:	AOS B,FRKSEQ
	CAME B,XSEQ(A)
	JRST FRKSQE
FRKWR1:	SOS A
	HRRM A,MTCOMS
	MOVEI B,0
	MOVE A,MTJFN
	MTOPR		; CLEAR ANY ERRORS ETC
	MOVEI B,MTCOMS
	DUMPO
	JRST FRKWR3
	MOVE A,MTJFN
	GDSTS
	TRNE B,1B25
	SETOM TAPLFT
	JRST FRKCLZ
;ERROR REPORTING STUFF
FRKWR2:	HRROI	1,[ASCIZ /
TAPE ERROR 
/]
	PSOUT
	MOVE	A,MTJFN
	GDSTS
	TRNE	2,1B18
	JRST	[HRROI	1,[ASCIZ /ILLEGAL WRITE 
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B19
	JRST	[HRROI	1,[ASCIZ /DEVICE HUNG OR DATA LATE
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B20
	JRST	[HRROI	1,[ASCIZ /DATA ERROR
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B21
	JRST	[HRROI	1,[ASCIZ /SUPPRESS AUTOMATIC ERROR CORRECTION
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B22
	JRST	[HRROI	1,[ASCIZ /DEVICE EOF MARK
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B23
	JRST	[HRROI	1,[ASCIZ /INCORRECT RECORD LENGTH
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B24
	JRST	[HRROI	1,[ASCIZ /BEGINNING OF TAPE
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B25
	JRST	[HRROI	1,[ASCIZ /END OF TAPE
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B26
		JRST	[HRROI	1,[ASCIZ /PARITY /]
		PSOUT
		HRROI  1,[ASCIZ /EVEN
/]

		JRST	.+1]
	TRNE	2,0B26
	JRST	[HRROI	1,[ASCIZ /PARITY ODD   
/]
		PSOUT
		JRST	.+1]
	TRNE	2,1B23
	JRST	[PUSH	P,3
		 HRROI	1,[ASCIZ /CHARACTER COUNT = /]
		 PSOUT
		 LDB	3,[POINT 3,2,31]
		 MOVE	2,3
		 MOVEI	1,101
		 MOVEI	3,8
		 NOUT
		 JFCL
		 HRROI	1,[ASCIZ /
/]
  		PSOUT
		POP	P,3
		JRST	.+1]
	JUMPL	3,NOGOOD
	HRROI	1,[ASCIZ /WORD COUNT OF LAST COMPLETE TRANSFER /]
	PSOUT
	MOVEI	1,101
	MOVE	2,3
	MOVEI	3,8
	NOUT
	JFCL
NOGOOD:	HRROI	1,[ASCIZ /LAST TRANSFER UNSUCCESSFUL
/]
	PSOUT
 	MOVEI A,101
 	DOBE
 	HRROI A,[ASCIZ /
PLEASE CHECK AND TYPE ANY CHARACTER WHEN READY. /]
 	PSOUT
	PBIN
	MOVEI A,37
	PBOUT
	AOS A,MTCOMS
	JRST FRKWR1

FRKCLZ:	AOS B,MTCOMS
	MOVNI A,FLTRX
	JRST FRKXT

FRKWR3:	MOVE A,MTJFN
	MOVEI B,7
	MTOPR
	MOVEI B,MTCOMS
	DUMPO
	JRST FRKWR2
	JRST FRKCLZ

MTCOMS:	XWD -1000-NHEAD,BUFF-NHEAD-1
	0

REWIND:	PUSH P,A
	PUSH P,B
	MOVEI 2,1
	MOVEM 2,TYP
	SETZM SEQ
	SETZM RSEQ
	PUSHJ P,MTOUT
	POP P,B
	POP P,A
	POPJ P,

ENDTAP:	MOVNI A,TPTRX
	MOVEM A,TYP
	PUSHJ P,MTOUT
	PUSHJ P,ENDFIL
	JRST REWIND

ENDFIL:	PUSH P,A
	PUSH P,B
	MOVNI A,=3000
	ADDM A,TAPLFT
	MOVEI B,3
	MOVEM B,TYP
	PUSHJ P,MTOUT
	POP P,B
	POP P,A
	POPJ P,

IFE NETDMP,<
MTOPEN:	TMSG </
TYPE MAG TAPE UNIT NUMBER: />
	MOVEI A,100
	BIN
	DPB B,[POINT 7,MTDEV,27]
	MOVEI B,37
	MOVEI A,101
	BOUT
	MOVE B,MTDEV
	ANDCMI B,377		;FLUSH COLON
	HRROI A,B		;STRING PTR TO B
	STDEV
	JRST [	TMSG </NO SUCH DEVICE
/>
		JRST MTOPEN]
	MOVE 1,2		;DEV DSG'R
	TLO 1,(1B3)		;SAY NO DIRECTORY
	MOUNT
	JRST [	TMSG </FAILED TO MOUNT
/>
		JRST MTOPEN]
	HRROI B,MTDEV
	MOVSI A,1
	GTJFN
	ERROR(</
NO SUCH UNIT AVAILABLE./>,<JRST MTOPEN>)
	MOVE 2,[XWD 7400,300000]
	OPENF
	ERROR(</
TAPE NOT AVAILABLE/>,<JRST MTOPEN>)
	MOVEM 1,MTJFN
	POPJ P,
>

IFN NETDMP,<

MTOPEN:	PUSH P,B
MTOPE1:	TMSG </
DUMP VIA FILE: />
	MOVSI A,2
	MOVE B,[XWD 100,101]
	GTJFN
	ERROR(</
FILE NOT AVAILABLE/>,<JRST MTOPE1>)
	MOVEM A,MTJFN
	DVCHR
	POP P,B
	HRLI B,442400
	LDB A,[POINT 9,A,17]
	CAIE A,16
	HRLI B,440000
	MOVE A,MTJFN
	OPENF
	ERROR (</
CANNOT OPEN/>,<MOVE A,MTJFN
		RLJFN
		JFCL
		JRST MTOPEN>)
	SETZM .MTSTS
	POPJ P,
>

TTNOUT:	MOVEI A,101
	JRST LPNOUT+1

LPNOUT:	MOVE A,LPTJFN
	NOUT
	JFCL
	POPJ P,

TMSGQ:	MOVEI 1,101
	MOVEI C,0
	SOUT
	POPJ P,

BTMSGQ:	PUSH P,B
	PUSHJ P,TMSGQ
	POP P,B
LPMSGQ:	MOVE 1,LPTJFN
	MOVEI C,0
	SOUT
	POPJ P,

BUFF2_601000
BF2PAG_601
BUFF_600000
BUFPAG_600
SEQ_BUFF-1
TYP_BUFF-2
PAGNO_BUFF-3
TAPNO_BUFF-4
ACCESS_BUFF-5
CHKSUM_BUFF-6
NHEAD__6

TPHDX__1
FLHDX__2
FLTRX__3
TPTRX__4
USRX__5
XBUFF__NHEAD
XPAGNO__PAGNO-BUFF+XBUFF
XTYP__TYP-BUFF+XBUFF
XSEQ__SEQ-BUFF+XBUFF

MASK:	0
	603001000000
	0
	0
	0
	777777777777
	777777000000
	0
	0
	777700000000
	777777777777
	777777777777
	777777777777
	777777777777
	777777777777
	777777777777
	0
	0
	0
	0
	777777777777

NWMASK:	0
	1000000
	0
	0
	0
	0
	0
	0
	0
	777700000000
	777777777777
	0
	0
	0
	0
	0
	0
	0
	0
	0
	777777777777

FDBNAM:	SIXBIT /HEADER/
	SIXBIT /FDBCTL/
	SIXBIT /FDBEXT/
	SIXBIT /FDBADR/
	SIXBIT /FDBPRT/
	SIXBIT /FDBCRE/
	SIXBIT /FDBUSE/
	SIXBIT /FDBVER/
	SIXBIT /FDBACT/
	SIXBIT /FDBBYV/
	SIXBIT /FDBSIZ/
	SIXBIT /FDBCRV/
	SIXBIT /FDBWRT/
	SIXBIT /FDBREF/
	SIXBIT /FDBCNT/
	SIXBIT /FDBCK1/
	SIXBIT /FDBCK2/
	SIXBIT /FDBCK3/
	SIXBIT /FDBCK4/
	SIXBIT /FDBCK5/
	SIXBIT /FDBUSW/

LIT

ENDCOD:

LOC 10000

BUFFER:	BLOCK NBUF*(NHEAD+1001)
HSHTAB:	BLOCK HSHLEN
HSHCUM:	BLOCK HSHLEN
HSHUSR:	BLOCK HSHLEN
HSHBUF:	BLOCK HSHLEN*2
HSHSTR:	BLOCK 1
DATBUF:	BLOCK 30
NAMBUF:	BLOCK 100
FRKPDL:	BLOCK 10
PDL:	BLOCK 100
NAMPTR:	BLOCK 1
DIRPTR:	BLOCK 1
NOFILS:	BLOCK 1
TOTFIL:	BLOCK 1
WHEEL:	BLOCK 1
DIRNUM:	BLOCK 1
SCNJFN:	BLOCK 1
MTDEV:	BLOCK 1
LASTID:	BLOCK 1
LSTERO:	BLOCK 1
INTAC:	BLOCK 20
INTSTK:	BLOCK 30
RET:	BLOCK 1
DSKERN:	BLOCK 1
RTAPNO:	BLOCK 1
CLAP:	BLOCK 1
RSEQ:	BLOCK 1
FRKSEQ:	BLOCK 1
TAPLFT:	BLOCK 1
CNTR:	BLOCK 1
PAGCNT:	BLOCK 1
USRCNT:	BLOCK 1
TOTCNT:	BLOCK 1
LOADSW:	BLOCK 1
SAMDIR:	BLOCK 1
CDIRN:	BLOCK 1
SUSER:	BLOCK 1
CHECK:	BLOCK 1
CONDIR:	BLOCK 1
LSTJFN:	BLOCK 1
LPTJFN:	BLOCK 1
BUFCNT:	BLOCK 1
PRGBUF:	BLOCK 1
FRKBUF:	BLOCK 1
SNGUSR:	BLOCK 1
SUSL:	BLOCK NUSL
NODMSW:	BLOCK 1
FIRST:	BLOCK 1
LONGSW:	BLOCK 1
INCRSW:	BLOCK 1
LOWFRK:	BLOCK 1
DIRNAM:	BLOCK 12
JFN:	BLOCK 1
MTJFN:	BLOCK 1
STRDIR:	BLOCK 1			;CONNECTED DIR AT START
LOGDIR:	BLOCK 1				;LOGIN DIR OF JOB
ABTUSR:	BLOCK 1			; =-1 ==> ALL BUT USERS
NORDIR:	BLOCK	1		;NORMAL DIRECTORY NUMBER
PRIDIR: BLOCK	1		;PRINTER DIRECTORY NUMBER
BAKDIR:	BLOCK	1		;BACKUP DIRECTORY NUMBER
FULFLG:	BLOCK	1		;FULL DUMP FLAG
ZONE:	10			;PACIFIC TIME IS ZONE 10 (OCTAL)
DEFHRS:	20			;WE ARE NOW DEFALTING TO 16:00
DEFTIM:	BLOCK 	1		;INTERNAL FORMAT DATE/TIME OF DEFHRS
TMP:	BLOCK	5
TMP1:	BLOCK	5
TMP2:	BLOCK	6
TMP3:	BLOCK	6
LAG:	BLOCK 	1		;NUMBER SECS DIFF FROM LT TO GMT
OPDIR:	BLOCK	1
BIFF:	BLOCK	5
MODWRD:	BLOCK	1
DAISW:	BLOCK	1
WRITE:  BLOCK 1
SINCE:	BLOCK 1
IFN NETDMP,<
..B:	BLOCK 1
..C:	BLOCK 1
.MTSTS:	BLOCK 1
>
JFNTAB:	1B0+1B1
	XWD 377777,377777
	0
	POINT 7,[ASCIZ /OPERATOR/]
	0
	0
	0
	0
	0
	END STRT




