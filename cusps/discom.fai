00100	TITLE C400  -- COMPUTEK 400 CODE
00200	
00300	;COMPUTEK 400  CODE.
00400	
00500	
00600	PHASE 0			;START PHASING ALL CODE!!!
00700	
00800	BLOCK PCHBRK		;LEAVE ROOM FOR LANGUAGE PART
00900	
01000		1		;DISPLAY NUMBER 1
01100		SIXBIT /C400/	;NAME OF THE DISPLAY
01200	
01300	DISPATCH		;GENERATE DISPATCH TABLE.
01400	
01500	SMID _ <800.0>		;SIZE OF SCREEN
01600	SMIDH _ <400.0>		;HALF-SCREEN
01700	
01800	YVIEW _ <1.00>		;MAX Y SCREEN VIEWPORT PARAMETER
01900	XVIEW _ <1.279>		;HORIZONTAL ARRANGEMENT
02000	
02100	
02200	DISNUM__1		;DISPLAY SEGMENT NUMBER 1.
02300	
02400	
02500	;MISCELLANEOUS DATA AREAS.
02600	
02700		XR (LEFTM)
02800		XR (.COD3)
02900	
03000		XR (CYBEAM)		;BEAM LOCATION DURING INTERP.
03100		XR (CXBEAM)
03200		XR (MODE)		;MODE TERMINAL IS IN.
03300	
03400	ENQTAB:	1.0		;YES -- IT IS A STORAGE TUBE
03500		0.0		;NO THREE-D HARDWARE
03600		0.0		;NO TABLET (YET)
03700		0.0		;NO KEYS
03800		SMID		;NUMBER OF POINTS.
03900		6.4		;INCHES PER VIEWPORT
04000		XVIEW		;X VIEWPORT MAXIMUM
04100		YVIEW		;Y VIEWPORT MAXIMUM
04200	
04300	
04400	
04500	CHARTB:  BEGIN CHARACTER 
04600		N__0
04700		Y__3
04800		T__1		;TRANSLITERATE
04900	
05000		BYTE (2) N,N,N,N,N,N,N,N,N,N,Y,N,N,Y,N,N,N,N	; 0-21
05100		BYTE (2) N,N,N,N,N,N,N,N,N,N,N,N,N,N,Y,Y,Y,Y	; 22-43
05200		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 44-65
05300		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 66-107
05400		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 110-131
05500		BYTE (2) Y,Y,N,Y,Y,Y,N,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 132-153
05600		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 154-175
05700		BYTE (2) Y,N					; 176-177
05800		BEND
05900	
06000	
06100	
06200	QEVENT:	SUB	P,[XWD 2,2](S)	;DOES NOT HAVE THESE
06300	QOUT:	ERR	<NO SUCH OPERATION>,13
06400		JRST	QINT		;AND DISCARD.
06500	
06600	
06700	;THE COMPUTEK HAS ONLY ONE CHARACTER SCALE AND ONLY ONE INTENSITY.
06800	; ....
06900	
07000	
07200	QRAST:
07400	
09700	QINT:	POP	P,A		;ADJUST STACK.
09800		JRST	@.RET(S)	;RETURN ....
09900	
10000	
10100	;QTEXT 	CALLED FROM LANGUAGE FOR EACH CHARACTER TO OUTPUT.
10200	;	A HAS CHARCTER
10300	;	A=-1 	START STRING
10400	;	A=-2	END STRING
10410	; ALL ACCUMULATORS CONSIDERED VOLATILE.  MAY BE DESTROYED.
10500	
10600	QTEXT:	CAME	A,[-1](S)	;START OF STRING?
10700		 JRST	 NOTBEG(S)	;NO
10710		SKIPGE	TSCAL(R)	;CHECK DTSCAL ARGUMENT
10713		 TLZA	 TEXTON		;IF USER WANTS TEXT ONLY IN WINDOW.
10716		 TLO	 TEXTON
10719		MOVSI	A,(<12.0>)	;WIDTH OF CHARACTER BOX.
10722		MOVE	E,[PUSHJ P,CODE2(S)](S) ;GET INSTRUCTION.
10725		MOVE	F,[PUSHJ P,CONV2(S)](S)
10728		TLNE	LAST3D		;IF LAST POSITION WAS 3-D
10731		 JRST	 [FDVR A,.X3M(R) ;GET NORMALIZED VIEWPORT COORD
10734			  FMPR A,.ZBEAM(R) ;AND FIX FOR THIS DEPTH.
10737			  TRC E,CODE2CODE3 ;CHANGE TO TEST CODE3.
10740			  TRC F,CONV2CONV3 ;CHANGE TO POSITION WITH CONV3
10743			  JRST .+2(S)](S)
10746		FDVR	A,.XPM(R)	;CONVERT TO PAGE COORDINATES.
10749		MOVEM	A,BOXW(R)	;SAVE AS BOX WIDTH
10752		FMPR	A,[0.6666666](S) ;* 8/12
10755		MOVEM	A,CHARW(R)	;AND SAVE.
10758		MOVEM	E,CHART(R)	;CHARACTER TEST ROUTINE.
10761		MOVEM	F,CHARP(R)	;AND CHARACTER POSITION ROUTINE.
10764		MOVSI	A,(<20.0>)
10767		TLNE	LAST3D		;IF LAST POINT INSTRUCTION WAS 3D.
10770		 JRST	 [FDVR A,.Y3M(R) ;GET NORMALIZED VIEWPORT
10773			  FMPR A,.ZBEAM(R) ;AND FIX FOR DEPTH.
10776			  JRST .+2(S)](S)
10779		FDVR	A,.YPM(R)	;CONVERT TO PAGE COORDINATES.
10782		MOVEM	A,BOXH(R)	;HEIGHT OF BOX.
10785		FMPR	A,[0.60000](S)	;*12/20
10788		MOVEM	A,CHARH(R)	;AND SAVE.
10800		MOVE	A,.XBEAM(R)	;GET CURRENT BEAM POSITION
10900		MOVEM	A,LEFTM(R)	;SAVE AS LEFT MARGINI.
11000		TLO	FTEMP1		;SAY NO TEXT GONE OUT YET
11100		TLZ	DISIFY		;IN CASE POINT MODE INSTRUCTION NEEDED
11200		JRST	QREN(S)		;INITIALIZE STORAGE.
11300	
11400	NOTBEG:	TLNE	A,-1		;CHARACTER?
11500		 JRST	 ENDC(S)	;END STRING.
11600		CAIN	A,15		;CARRIAGE RETRUN
11700		 JRST	 CR(S)
11800		CAIN	A,12
11900		 JRST	 LF(S)		;LINE FEED.
12000		PUSH	P,A		;SAVE CHAR.
12100		MOVE	B,.XBEAM(R)	;GET CURRENT BEAM
12200		MOVE	C,.YBEAM(R)	;
12300		MOVE	D,.ZBEAM(R)
12400		XCT	CHART(R)	;TEST THE CHARACTER IN THE WINDOW
12500		JUMPN	A,TXT0(S)	;NOT IN WINDOW
12600		FADR	B,BOXW(R)
12700		FADR	C,BOXH(R)	;SEE IF UPPER RIGHT HAND CORNER TOO.
12800		XCT	CHART(R)	;TEST UPPER RIGHT HAND CORNER
12900	TXT0:	MOVE	B,.XBEAM(R)	;GET BEAM POSITION BACK.
13000		MOVE	C,.YBEAM(R)
13100		XCT	CHARP(R)	;CONVERT TO SCREEN POSITION.
13200		JUMPN	A,TRYTXT(S)	;NOT ON WINDOW -- BUT SEE IF HE WANTS IT ANYWAY.
13300	TXT1:	CAMN	B,.IXBEAM(R)	;SEE IF WE NEED TO MOVE BEAM
13400		CAME	C,.IYBEAM(R)	;?
13500		 JRST	 [PUSHJ P,ENDC(S) ;YES -- DUMP CHARACTERS.
13600		 	  PUSHJ P,PGEN(S) ;AND PUT OUT POINT-MODE INSTR.
13700			  JRST .+1(S)](S)
13800	
13900	CC:	SKIPN	.COD1(R)	;ENOUGH ROOM?
14000		 PUSHJ	 P,QTST(S)	;NO -- MAKE SOME.
14100		SOS	.COD1(R)	;NOW ONE LESS CHAR.
14200		MOVE	A,(P)		;GET CHARACTER
14300		IDPB	A,.COD2(R)	;STORE IT AWAY.
14400	UPDT:	MOVE	A,BOXW(R)
14500		FADM	A,.XBEAM(R)	;BUMP XBEAM
14600		MOVEI	A,=12
14700		ADDM	A,.IXBEAM(R)	;AND IXBEAM
14800		JRST	POPAJ(S)	;ADJUST STACK AND RETURN.
14900	
15000	TRYTXT:	TLNE	TEXTON		;GO OUTSIDE WINDOW?
15100		 JRST	 UPDT(S)	;NO -- DO NOT DISPLAY CHAR
15200		JUMPL	B,UPDT(S)	;OFF SCREEN TO LEFT.
15300		JUMPL	C,UPDT(S)
15400		CAIG	B,=1012		;OFF AT RIGHT?
15500		CAILE	C,=1003		;AT TOP?
15600		 JRST	 UPDT(S)
15700		JRST	TXT1(S)		;YES -- DISPLAY
15800	
15900	LF:	MOVN	A,BOXH(R)	;DECREMENT YBEAM
16000		FADM	A,.YBEAM(R)
16100		JRST	ENDC(S)		;AND DUMP CHARACTER BUFFER
16200	
16300	CR:	MOVE	A,LEFTM(R)
16400		MOVEM	A,.XBEAM(R)	;STORE IT.
16500	
16502	
16504	;SUBROUTINE TO DUMP CHARACTER BUFFER.
16505	;	CLOBBERS A; CAREFULLY PRESERVES B,C
16506	
16600	ENDC:	MOVE	A,.COD1(R)	;SEE HOW MANY BYTES REMAIN
16700		CAIN	A,4		;IF SOME ARE ALREADY STORED,
16800		 POPJ	 P,
16900	QTST:	PUSH	P,B		;SAVE X COORDINATE IN CASE STOBYT CLOBBERS
16950		PUSH	P,C		;AND SAME FOR Y
16975		MOVE	A,.COD3(R)	;PICK UP WORD OF BYTES.
17000		TLZ	A,740000	;INSTALL OP-CODE
17100		TLO	A,%OTXT
17200		PUSHJ	P,STOBYT(S)	;AND STORE IT.
17202		POP	P,C
17204		POP	P,B		;RESTORE AC'S
17300	QREN:	MOVEI	A,4		;THIS MANY BYTES.
17400		MOVEM	A,.COD1(R)	;
17500		MOVE	A,[POINT 8,.COD3(R),3](S) ;NEW POINTER.
17600		MOVEM	A,.COD2(R)
17700		SETOM	.COD3(R)	;NO ACCUMULATED CHARACTER.
17800		POPJ	P,		;DONE.
     

00100	
00200	
00300	;ROUTINES FOR ACTUALLY TYPING THINGS AT THE TERMINAL.
00400	
00500	
00600	
00700	; TYPA IS ROUTINE TO TYPE CHARACTER IN D, BUT TO MAKE BIT 7
00800	;	THE COMPLEMENT OF BIT 6 BEFORE DOING SO.
00900	; TYP  IS ROUTINE TO TYPE OUT CHARACTER IN D.
01000	
01100	TYPA:	TRZ	D,200		;TURN OFF BIT 8.
01200		TRNN	D,40		;AND MAKE BIT 7 THE
01300		 TROA	 D,100		;COMPLEMENT OF BIT 6.
01400		TRZ	D,100		;LIKE SO.
01500	TYP:	TTCALL	15,D		;PATCH TO SKIPA IF TYPE OUT ON TTY.
01600		POPJ	P,		;RETURN.
01700		ANDI	D,377		;EIGHT BITS.
01800		TTCALL	3,[ASCIZ /OUTPUT: /](S)
01900		D+012000000000
02000		TTCALL	3,[ASCIZ /
02100	/](S)
02200		POPJ	P,
02300	
02400	
02500	
02600	GET4:	SKIPA	D,[34](S)	;GET 4-BYTE MODE.
02700	GET2:	MOVEI	D,35		;GET 2-BYTE MODE.
02800		SKIPN	MODE(R)		;IF MODE IS ZERO
02900		 JRST	 MODGO(S)	;JUST SEND CHAR.
03000		CAMN	D,MODE(R)	;ARE WE ALREADY IN CORRECT MODE?
03100		 POPJ	P,		;YES
03200		PUSH	P,D		;SAVE MODE.
03300		MOVEI	D,100		;SEND ZERO TO CLEAR PRESENT MODE.
03400		PUSHJ	P,TYP(S)
03500		POP	P,D		;RESTORE MODE.
03600	MODGO:	PUSHJ	P,TYP(S)	;SEND THE CORRECT ENTERING CODE.
03700		ANDI	D,77		;JUST KEEP MODE BITS
03800		MOVEM	D,MODE(R)	;AND SAVE IT.
03900		POPJ	P,
04000	
04100	CURSOR:	MOVE	A,CURMOV(R)	;GET THE CURSOR POSITION.
04200		PUSHJ	P,INTERP(S)	;INTERPRET IT. (WILL SKIP IF CURMOV NOT INITIALIZED)
04300	MOD0:	SKIPN	MODE(R)		;RETURN TO SINGLE-BYTE MODE.
04400		 POPJ	 P,		;RETURN TO USER.
04500		MOVEI	D,100		;RETURN TO MODE 0
04600		JRST	MODGO(S)	;LIKE SO.
04700	
04800	
04900	ERASE:	SETZM	MODE(R)		;SAFETY FACTOR.
05000		MOVE	C,[POINT 7,(S)[BYTE (7) 36,100,"@","F",14,0]](S)
05100	ER0:	ILDB	D,C		;GET CHARACTER
05200		JUMPE	D,ER1(S)	;NULL -RETURN.
05300		PUSHJ	P,TYP(S)	;TYPE IT.
05400		JRST	ER0(S)		;GET NEXT CHARACTER.
05500	ER1:	MOVEI	C,1		;SLEEP FOR 1 SECOND.
05600		CALLI	C,31		;SLEEP ZZZZZZZZZZZ WHILE BLINDING GREEN FLASHES
05700		POPJ	P,
05800	
05900	
06000	INTERP:	MOVE	C,MODE(R)	;FOR REFERENCE
06100		LDB	B,[POINT 4,A,3](S) ;GET OP-CODE
06200		ADDI	B,(S)		;RELOCATE
06300		JRST	@DISP(B)	;DISPATCH
06400	
06500	DISP:	XWD S,DHLT		;HALT (END OF BLOCK)
06600		XWD S,DMOV		;MOVE
06700		XWD S,DMOV		;DOT
06800		XWD S,DDRW		;DRAW
06900		XWD S,DTXT		;TEXT
07000	
07100	DHLT:	AOS	(P)		;SKIP RETURN TO CALLER.
07200		POPJ	P,		;LIKE SO.
07300	
07400	DMOV:	TLZA	FTEMP
07500	DDRW:	TLO	FTEMP		;FLAG WHICH KIND.
07600	IFN 0,<	;NO SHORT MODES FOR NOW!!!!!
07700		TLZE	BEAMUNDEF	;TRY TO USE SHORT MODE.
07800		 JRST	 LONG(S)	;NO -- MUST USE LONG MODE.
07900		HRRZ	B,A		; Y
08000		JUMPE	B,LONG(S)	;CANNOT GET HERE WITH SHORT MODE.
08100		SUB	B,CYBEAM(R)	;SEE HOW FAR WE HAVE TO GO.
08200		MOVM	C,B
08300		CAILE	C,=63		;WITHIN SHORT RANGE?
08400		 JRST	 LONG(S)	;NO
08500		LDB	C,[POINT 10,A,17](S) ;GET Y
08600		TRNE	A,-1		;CANNOT GET HERE WITH
08700		 JRST	 LONG(S)	;SHORT VECTORS.
08800		SUB	C,CXBEAM(R)
08900		MOVM	D,C
09000		CAILE	D,=63		;SHORT ENUF?
09100		 JRST	 LONG(S)
09200		PUSHJ	P,GET2(S)	;SET 2-BYTE MODE.
09300		SKIPGE	B
09400		 SUBI	 B,1		;CONVERT TO 1'S COMPLEMENT
09500		SKIPGE	C
09600		 SUBI	 C,1
09700		ROT	B,2		;NOW INSTALL SIGN BITS
09800		ROT	C,2
09900		TRO	C,1
10000		OUTP	<C>		;PRINT IT.
10100		TLNN	FTEMP
10200		 TRZA	 B,1
10300		 TRO	 B,1		;INTENSIFY
10400		JRST	OUTGO(S)	;PRINT IT AND UPDATE VALUES.
10500	;END OF IFN 0   >
10600	
10700	LONG:	PUSHJ	P,GET4(S)	;GET 4-BYTE MODE.
10800		SETOM	D
10900		DPB	A,[POINT 4,D,33](S) ; STORE LOW FOUR BITS OF Y
11000		TLNN	FTEMP		;INTENSIFY?
11100		 TRZA	 D,1
11200		 TRO	 D,1		;YES
11300		PUSHJ	P,TYPA(S)	;TYPE IT
11400		LDB	D,[POINT 6,A,31](S) ;GET REMAINING 6 BITS OF Y
11500		PUSHJ	P,TYPA(S)
11600	
11700		SETOM	D		;REINITIALIZE
11800		HLRZ	B,A
11900		DPB	B,[POINT 4,D,33](S)
12000		PUSHJ	P,TYPA(S)	;PRINT IT.
12100		LDB	D,[POINT 6,A,13](S) ;REMAINING 6 BITS OF X
12200	OUTGO:	PUSHJ	P,TYPA(S)	;PRINT IT
12300	STOVAL:	HRRZM	A,CYBEAM(R)	;SAVE Y BEAM LOCN.
12400		LDB	B,[POINT 4,A,3](S) ;GET OP CODE AGAIN.
12500		TLZ	A,740000
12600		HLRZM	A,CXBEAM(R)	;AND X BEAM LOCN.
12700		CAIE	B,%ODOT/40000	;WAS IT A DOT?
12800		 POPJ	 P,		;NO -- FINISHED.
12900		ADDI	A,1		;YES -- DRAW A SHORT VECTOR.
13000		JRST	DDRW(S)		;AND GO DO IT.
13100	
13200	
13300	
13400	DTXT:	PUSHJ	P,MOD0(S)	;GET IT IN SINGLE-BYTE MODE.
13500		ROT	A,4		;GET RID OF STUFF.
13600		MOVEI	E,4
13700	DTXL:	MOVEI	B,0
13800		ROTC	A,8		;GET FIRST CHARACTER IN B
13900		CAIN	B,377		;ALL 1'S ?
14000		 POPJ	 P,		;YES -- FINISHED.
14100		MOVEI	D,(B)		;COPY CHARACTER.
14200		CAIN	D,100		;IS THE CHARACTER @ ?
14300		 JRST	 [PUSHJ P,TYP(S) ;TYPE IT.
14400			  MOVEI D,"A"
14500			  JRST  TYPCH(S)](S) ;TYPE A.
14600		CAILE	D,137		;CHARACTER IS OK IN UC?
14700		 JRST	 [PUSH P,D	;SAVE CHARACTER.
14800			  MOVEI D,100
14900			  PUSHJ P,TYP(S)
15000			  MOVEI D,"B"
15100			  PUSHJ P,TYP(S)	;SHIFT TO LOWER CASE
15200			  POP   P,D
15300			  TRC   D,40
15400			  PUSHJ P,TYP(S)
15500			  MOVEI D,100
15600			  PUSHJ P,TYP(S)
15700			  MOVEI D,"C"		;RETURN TO UC MODE (CROCK)
15800			  JRST  TYPCH(S)](S) ;CHECK FOR ANOTHER CHAR.
15900	TYPCH:	PUSHJ	P,TYP(S)	;GO TYPE CHARACTER.
16000		SOJG	E,DTXL(S)	;LOOP FOR MORE.
16100		POPJ	P,		;DONE....
16200	
16300	
16400	
16500	QCODE:	POP	P,D		;GET CHARACTER
16600		PUSHJ	P,TYP(S)	;AND TYPE IT.
16700		JRST	@.RET(S)	;AND RETURN.
16800	
