;<SOURCES>MY-ACCOUNTS.MAC;1     7-NOV-74 13:15:13    EDIT BY LIEB
	TITLE MY-ACCOUNTS EPHEMERON
	SUBTTL JIM LIEB,SUMEX NOV74

;EPHEMERAL PROGRAM TO TELL A USER HIS ENABLED ACCOUNTS
;TELLS ACCOUNTS FOR LOGIN DIR
;IF ENABLED,WILL SHOW ACCOUNTS FOR CONNECTED DIR

	SEARCH STENEX

;ACCUMULATORS

	Z=0
	A=1
	B=2
	C=3
	D=4
	E=5
	DIR=6		;DIR NUMBER STORAGE
	FILJFN=7	;JFN STORE
	DFAULT=10	;DEFAULT STRING POINTER
	DIRECT=11
	ST=16
	P=17

OPDEF CALL [PUSHJ P,]
OPDEF RET  [POPJ P,]

;MAIN PROGRAM

START:	RESET
	MOVE	P,[IOWD STKSIZ,STACK]
	MOVE	ST,[IOWD STRSIZ,STRSTK] ;SET UP PROCESS AND STRING STACKS
	SETZ	Z,		;CLEAR STATUS
	MOVEI	A,400000	;CURRENT FORK
	DIR			;DISABLE PSI
	MOVE	B,[XWD LEVTAB,CHNTAB]
	SIR			;SET UP TABLES
	MOVE	B,[1B10]	;ACTIVATE EOF CHANNEL
	AIC
	EIR			;NOW ENABLE IT
	RPCAP			;GET THIS USERS CAPABILITIES
	MOVE	E,C		;SAVE ENABLED CAPABILITIES
	GJINF			;GET LOGIN AND CONNECTED DIRS
	TRNE	E,7B20		;IS HE ENABLED?
	MOVE	A,B		;YES,THEN USE CONNECTED DIR
	MOVEM	A,DIRECT	;SAVE IT
	HRLZI	A,1B20+1B35	;OLD FILE ONLY
	MOVE	B,[POINT 7,[ASCIZ /<ACCOUNTS>NAMES.TXT/]] ;THIS FILE
	GTJFN
	JRST JFNERR		;ERROR,QUIT
	MOVEM	A,FILJFN	;SAVE THE JFN
	MOVE	B,[7B5+1B19]	;7BIT BYTES,READ
	OPENF
	JRST JFNERR		;RELEASE JFN BEFORE QUIT
	MOVE	A,[POINT 7,STRSPC] ;POINT O STRING SPACE
	MOVE	B,DIRECT	;GET DIR NUMBER
	DIRST
	JFCL			;CANT BE JUST GOT IT FROM SYS
	SETZB	B,DFAULT	;MAKE A NULL,INIT DFAULT
	IDPB	B,A		;PUT A NULL ON END
	PUSH	ST,A		;PUSH REST OF STRING SPACE
	MOVE	A,FILJFN	;NAMES FILE
	MOVE	B,0(ST)		;GET TOP OF STRING SPACE
	MOVEI	C,^D200		;CNT 2 LINES+
	MOVEI	D,72		;STOP ON A COLON
	SIN
	SKIPA	B,0(ST)		;WE WANT IT FROM THE BEGINNING
LOOP:	CALL	SKIPER		;ZIP TO JUST PAST EOL OR CRLF
	MOVE	C,[POINT 7,STRSPC] ;POINT TO DIR STRING
LOOP1:	ILDB	D,C		;DIR NAME BYTE
	JUMPE	D,HIT		;NULL BYTE =>FOUND STRING IF NEXT INP BYTE A COLON
	ILDB	E,B		;NOT YET,GET NEXT INPUT CHAR
	CAIN	D,0(E)		;A MATCH?
	JRST LOOP1		;YES TRY NEXT CHAR
LOOP2:	MOVE	B,0(ST)		;NO MATCH GET NEXT STRING
	MOVEI	C,^D200		;FROM FILE
	MOVEI	D,72		;STOPPING ON A COLON
	SIN
	MOVE	B,0(ST)		;POINT TO BEGINNING OF NEW LINE
	JRST LOOP
;SKIP STRING TO JUST AFTER EOL OR CRLF

SKIPER:	ILDB	E,B		;GET A BYTE
	CAIL	E,40		;PRINTABLE?
	JRST SKIPER		;YES,PASS OVER IT
	PUSH	P,B		;NO,SAVE WHERE WE ARE
SKIP1:	ILDB	E,B		;GET NEXT BYTE
	CAIL	E,40		;PRINTABLE?
	JRST SKIP2		;YES
	IBP	0(P)		;NO, MOVE DOWN ONE BYTE
	JRST SKIP1		;AND CHECK NEXT  BYTE

SKIP2:	POP	P,B		;B NOW PROPER FOR ILDB
	RET

;FOUND A MATCH

HIT:	ILDB	E,B		;GET NEXT INPUT CHAR TO BE SURE
	CAIE	E,72		;IS IT A COLON?
	JRST LOOP2		;NO,FAKE MATCH; GET A NEW STRING
	SETO	Z,		;SAY WE HAVE HIT TO EOF PROCESSOR
	MOVE	B,0(ST)		;POINT O BEGINNING AGAIN
	MOVEI	C,^D200		;GET 2 LINES+
	MOVEI	D,15		;BUT GO ONLY TO CR
	SIN
	SETZ	E,		;MAKE A NULL
	MOVE	B,0(ST)		;TO BEGINNING OF STRING
HIT1:	ILDB	C,B		;GET A CHAR
	CAIN	C,52		;IS THIS A "*"?
	JRST HITDF		;YES MARK DEFAULT
	CAIN	C,15		;NO, IS IT A CR?
	JRST HITEND		;AT END OF LINE
	CAIE	C,54		;IS IT ","?
	JRST HIT1		;KEEP ON TRUCKIN
	DPB	E,B		;MAKE THE COMMA A NULL
	PUSH	ST,B		;PUSH NEW POINTER ON STRING STACK
	JRST HIT1

;WE FOUND DEFAULT
HITDF:	DPB	E,B		;MAKE STAR A NULL
	POP	ST,DFAULT	;POP THIS ACCOUNT INTO DEFAULT
HITDF1:	ILDB	C,B		;GET NEXT CHAR
	CAIN	C,15		;CR?
	JRST HITEND		;YES,PRINT OUT WHAT WE FOUND
	CAIE	C,54		;COMMA?
	JRST HITDF1		;KILL THE PADDING
	DPB	E,B		;YES, NULL IT
	PUSH	ST,B		;POINT TO NEXT ACCOUNT
	JRST HIT1		;AND GET IT

;END OF STRING

HITEND:	DPB	E,B		;NULL THE CR
	MOVE	A,[POINT 7,[ASCIZ /
/]]				;A CR
	PSOUT
	MOVE	A,[POINT 7,STRSPC] ;POINT TO DIR STRING
	PSOUT
	MOVE	A,[POINT 7,[ASCIZ / HAS/]]
	PSOUT
	JUMPE	DFAULT,END1	;JUMP IF NO DEFAULT
	MOVE	A,[POINT 7,[ASCIZ / A DEFAULT ACCOUNT: /]]
	PSOUT
	MOVE	A,DFAULT	;GET DEFAULT STRING
	PSOUT
	SKIPN	0(ST)		;IS THERE ANYTHING ON STRING STACK?
	JRST ENDX		;NO,THEN DONT TRY TO PRINT IT
	SKIPA	A,[POINT 7,[ASCIZ /
AND /]]
END1:	MOVE	A,[POINT 7,[ASCIZ /
/]]
	PSOUT
	MOVE	A,[POINT 7,[ASCIZ /ACCOUNTS:
/]]
	PSOUT
ENDL:	POP 	ST,A		;GET AN ACCOUNT STRING
	JUMPE	A,ENDX		;QUIT AT END OF STACK
	PSOUT
	MOVE	A,[POINT 7,[ASCIZ /
/]]
	PSOUT
	JRST ENDL		;GO BACK AND PRINT NEXT ONE

ENDX:	HRRZ	A,FILJFN	;CLOSE AND
	CLOSF			;RELEASE JFN
	JRST JFNERR
	MOVEI	A,400000
	HALTF			;NO MORE GO AWAY

;FILE GTJFN AND OPENF ERRORS

JFNERR:	MOVE	B,A		;GET ERROR NUMBER
	HRLI	B,400000	;THIS FORK
	MOVE	A,[POINT 7,STRSPC]
	SETZ	C,		;UNLIMITED STRING
	ERSTR
	JFCL
	SKIPA	A,[POINT 7,[ASCIZ /WIERD ERROR/]]
	MOVE	A,[POINT 7,STRSPC]
	ESOUT			;PRINT IT
	HALTF			;CLEAN UP AND GO AWAY

;PSI HANDLER FOR THE EOF

NMEOF:	JUMPE	Z,KILLER	;JUMP IF NOT AFTER HIT
	MOVEI	D,15		;MAKE A CR
	IDPB	D,B		;FORCE A CR AT THE END
	DEBRK			;RESUME

KILLER:	HRRZ	A,FILJFN
	CLOSF			;CLOSE AND RELEASE THE NAMES FILE
	JRST JFNERR		;AN ERROR
	MOVE	A,[POINT 7,[ASCIZ /
YOU DO NOT EXIST--PLEASE CHECK WITH <RINDFLEISCH> OR <CARPENTER>
TO GET YOU ON THE ACCOUNTING FILES
/]]				;SEARCH LOST
	PSOUT
	MOVEI	A,400000
	HALTF			;KILL THIS FORK



;LOCAL STORAGE

LEVTAB:	XWD 0,INTPC1		;PSI TABLES
	EXP 0
	EXP 0

INTPC1:	0

CHNTAB:	REPEAT ^D10,<0>		;TERM CHARS AND APR STUFF
	XWD 1,NMEOF		;NAME FILE EOF
	REPEAT ^D25,<0>		;EVERYTHING ELSE
	LIT			;PUT THEM HERE TO KEEP THEM OUT OF STRSPC

	EXP 0 ;END OF STRING STACK
STRSTK:	BLOCK 100
STRSIZ=<.-STRSTK>

	EXP 0 ;END OF PROCESS STACK
STACK:	BLOCK 20
STKSIZ=<.-STACK>

;STRING SPACE FROM HERE TO ETERNITY
STRSPC: 0
	END START
