;<ALLEN>MATRIX.MAC;12     2-OCT-74 15:14:04    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;11     2-OCT-74 15:09:20    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;10     2-OCT-74 13:42:50    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;9     2-OCT-74 13:41:09    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;8     2-OCT-74 13:38:33    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;7     2-OCT-74 13:07:12    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;6    19-SEP-74 11:49:26    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;5     9-SEP-74 11:36:31    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;4    30-AUG-74 12:30:09    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;15     7-JUN-74 11:22:38    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;14     6-JUN-74 16:02:47    EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;12    10-APR-74 13:57:23	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;11    10-APR-74 13:50:46	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;10    10-APR-74 12:47:40	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;9    10-APR-74 12:35:24	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;8    10-APR-74 11:43:51	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;7    10-APR-74 10:37:01	EDIT BY ALLEN
;<ALLEN>MATRIX.MAC;6    10-APR-74 10:34:30	EDIT BY ALLEN
	TITLE	MATRIX -- MATRIX FILE ALTER AND DISPLAY PROGRAM
	SUBTTL	D.C. ALLEN

	SEARCH	MATPRO,STENEX

	EXTERNAL ENTERH,DELETH,GBYTE,HASH,PBYTE

PTR=16	;AC USED TO MAINTAIN POINTER TO INPUT STRING
;THIS PROGRAM PROVIDES A TERMINAL USER WITH DISPLAY AND
;ALTER FUNCTIONS RELATED TO THE MATRIX FILE.

MATRIX:	RESET		;RESET EVERYTHING

	MOVE	P,[XWD -NPDL,PDL-1]	;SET UP STACK POINTER
;SET UP TTY MODE WORD AND CCOC
	MOVEI	A,100
	RFMOD		;GET MODE WORD
	TRZ	B,3B23	;DONT WAKE UP ON PUNCT OR ALPHA
	SFMOD

	MOVE	B,[BYTE (2)1,0,1,0,1,1,1,2,0,3,2,3,3,2,1,1,1,1]
	MOVE	C,[BYTE (2)0,1,0,1,1,1,1,1,1,0,0,0,0,3]
	SFCOC		;SET ECHO MODE



;OPEN MATRIX FILE
	MOVSI	A,100001
	HRROI	2,[ASCIZ /UACHK.FILE/]
	GTJFN
	0
	MOVEM	A,MATJFN	;SAVE IT

	MOVE	B,[XWD 440000,300000]
	OPENF
	0

;OBTAIN HASH TABLE PARAMS FROM FILE
	FMOVE	RHASHO
	MOVEM	B,UHASHO
	FMOVE	RHASHL
	MOVEM	B,UHASHL

	FMOVE	CHASHO
	MOVEM	B,AHASHO
	FMOVE	CHASHL
	MOVEM	B,AHASHL
	FMOVE	DTABO
	MOVEM	B,DEFO
	FMOVE PTABO
	MOVEM B,PRIO



;MAIN COMMAND LOOP
CMNDL:	MOVE	PTR,BPTR	;GET POINTER TO BEGINNING OF BUFFER
	HRROI	A,[ASCIZ /
*/]
	PSOUT

COMLUP:	SETZM	EXTPTR
	SETZM	EXTCNT
	PUSHJ	P,GCH	;GET A CHAR TO A

	CAIE	A,"A"-100	;CONTROL A?
	CAIN	A,"H"-100	;OR CNTRL H?
	 JRST	DELCH	;YES

	CAIN	A,"R"-100	;CTRL R?
	 JRST	RETYPE	;YES, RETYPE THE LINE

	CAIN	A,"?"	;QUESTION MARK?
	 JRST	[CAME PTR,BPTR	;FIRST CHAR?
		JRST STORE	;NO
		JRST PRQUES]

	CAIE	A,33	;ALTMODE?
	CAIN	A,37	;EOL?
	 JRST	SYMEND	;YES, TERMINATE 

STORE:	IDPB	A,PTR	;STORE THE CHAR
	PUSHJ	P,TRMST	;APPEND A NULL
	JRST	COMLUP	;GET ANOTHER

;DELETE LAST CHAR
DELCH:	CAMN	PTR,BPTR	;ARE WE AT THE BEGINNING?
	JRST	DING	;YES, RING THE BELL

	MOVEI	A,"\"	;PRINT A BACK SLASH
	PBOUT

	LDB	A,PTR	;GET THE LAST CHAR HE TYPED
	PBOUT

	MOVE	A,PTR
	BKJFN		;BACK UP THE POINTER
	0
	MOVEM	A,PTR
	JRST	COMLUP


;RING THE BELL
DING:	MOVEI	A,7	;CNTRL-G
	PBOUT
	JRST	COMLUP

;RETYPE THE LINE
RETYPE:	MOVE	A,PTR
	SETZ	B,
	IDPB	B,A
	MOVEI	A,37	;SEND EOLL
	PBOUT

	MOVE	A,BPTR
	PSOUT
	JRST	COMLUP

;QUESTION
PRQUES:	HRROI	A,CMNDMS
	PSOUT
	JRST	COMLUP

;STUFF A NULL CHAR ON END OF STRING WITHOUT  CHANGING PTR
TRMST:	PUSH	P,A
	PUSH	P,PTR
	SETZ	A,
	IDPB	A,PTR
	POP	P,PTR
	POP	P,A
	POPJ	P,

;SAVE TERMINATOR AND LOOKUP SYMBOL
SYMEND:	MOVEM	A,TERM
	PUSHJ	P,TRMST

;REGISTER ALLOC:
;	E- POINTER TO INPUT STRING
;	F- POINTER TO TABLE ENTRY
;	G- AOBJI WORD TO CONTROL LOOP
;	H,I- BYTE RECEIVERS
;	J,K- SAVE REGS FOR G AND F

SYM2:	MOVE	G,CMDTAB	;GET AOBJN WORD
	SETOB	J,K	;RESET FLAG WORDS

LUKLUP:	MOVE	E,BPTR	;POINTER TO INPUT STRING
	MOVE	F,0(G)

COMP:	ILDB	H,E	;GET BYTE FROM INPUT
	ILDB	I,F	;GET BYTE FROM TABLE

	CAIE	H,0(I)	;ARE THEY EQUEAL?
	JRST	TSTSUB	;NO

	JUMPE	H,MATCH	;BOTH NULL
	JRST	COMP	;GET NEXT CHARS

;CHARS NOT EQUAL, HAS INPUT TERMINATED?
TSTSUB:	JUMPE	H,MATCH	;INPUT IS TERMINATED

TSTNXT:	AOBJN	G,LUKLUP	;GET NEXT TABLE ENTRY


	JUMPN	J,[MOVEI A,"?"
		PBOUT
		JRST CMNDL]
	JRST	HLPHIM


;WE HAVE FOUND A UNIQUE MATCH. DOES HE NEED TO SEE REST OF COMMAND?
UNIQUE:	MOVE	A,TERM	;DID HE TERMINATE WITH ALTMODE?
	CAIE	A,33
	JRST	GETCOM	;NO, JUST EXECUTE HIS WISHES



	MOVE	A,K
	BKJFN
	0
	MOVEM	A,K

	PSOUT		;PRINT RESST OF COMMAND

	ILDB	A,K
	JUMPN	A,.-1	;FIND END OF STRING

GETCOM:	XCT	1(K)
	JRST	CMNDL

;WE HAVE A MATCH. RECORD IT IF FIRST ONE
MATCH:	JUMPE	J,[MOVE J,TERM
		CAIN J,33 ;ALTMODE?
		JRST EXTEND
		MOVEI A,"?"
		PBOUT
		JRST CMNDL]
	SETZ	J,
	MOVE	K,F
	JRST	TSTNXT	;GO THRU REST OF TABLE


;TRY TO EXTEND WHAT HE TYPED
EXTEND:	SKIPN	EXTPTR	;FIRST TIME?
	MOVEM	PTR,EXTPTR	;YES
	IDPB	I,PTR	;PUTINTO INPUT BUFFER
	PUSHJ	P,TRMST
	AOS	EXTCNT
	JRST	SYM2	;NOW TRY THIS

;WE'VE HELPED HIM AS MUCH AS WE CAN. TYPE WHAT WE'VE DONE
HLPHIM:	SKIPN	EXTPTR	;HAVE WE HELPED HIM?
	JRST	UNIQUE	;NO

;TYPE CHARS TO HIM
	SOSG	EXTCNT	;DECREMENT BECAUSE LAST CHAR DIDNT WORK
	JRST	HLP3	;NOTHING LEFT SO JUST DING

HLP2:	ILDB	A,EXTPTR	;GET A CHAR
	PBOUT
	SOSE	EXTCNT
	JRST	HLP2

HLP3:	MOVE	A,PTR	;BACK UP POINTER
	BKJFN
	0
	MOVEM	A,PTR
	PUSHJ	P,TRMST
	JRST	DING

;GETT CHARACTER ROUTINE
GCH:	PBIN
	CAIE	A,177	;RUBOUT?
	POPJ	P,
	HRROI	A,[ASCIZ /XXX
/]
	PSOUT
	POP	P,A
	JRST	CMNDL
;COMMANDS
	DEFINE	CC(STR,VAL)
<
	POINT	7,[ASCIZ /STR/
		   VAL]
>

COMS:	CC	<BUILD.FILE>,<PUSHJ P,BF>
	CC	<QUIT>,<PUSHJ P,QUIT>
	CC	<MAKE.USER.ENTRY>,<PUSHJ P,MUE>
	CC	<MAKE.MATRIX.ENTRY>,<PUSHJ P,MME>
	CC	<DISPLAY.MATRIX.ENTRY>,<PUSHJ P,DME>
	CC	<MAKE.ACCT.ENTRY>,<PUSHJ P,MAE>
	CC	<DELETE.ACCT.ENTRY>,<PUSHJ P,DAE>
	CC	DELETE.USER.ENTRY,<PUSHJ P,DUE>
	CC	<DISPLAY.USERS>,<PUSHJ P,DISPU>
	CC	<DISPLAY.ACCOUNTS>,<PUSHJ P,DISPA>
	CC	<DISPLAY.ALL>,<PUSHJ P,DSPMAT>
CMDTAB:	XWD	COMS-.,COMS


;MAKE.MATRIX.ENTRY
MME:	PUSHJ	P,GTIND	;GET INDICES

	PUSHJ	P,GTMATE	;GET THE ENTRY FROM USER

	MOVE	A,MATJFN
	HRR	B,AINDEX
	HRL	B,UINDEX
	PUSHJ	P,PBYTE
	0
	POPJ P,

;QUIT COMMAND
QUIT:	RESET
	HALTF


;DISPLAY.MATRIX.ENTRY
DME:	PUSHJ	P,GTIND

	MOVE	A,MATJFN
	HRR	B,AINDEX
	HRL	B,UINDEX
	PUSHJ	P,GBYTE
	0
	PUSHJ	P,PRMATE
	POPJ P,

;MAKE.USER.ENTRY COMMAND
MUE:	PUSHJ	P,GTUSER

	MOVE	A,MATJFN
	HRR	B,UHASHO
	HRL	B,UHASHL
	PUSHJ	P,ENTERH
	JRST	[CAIE A,EHERR1
		0
		HRROI A,[ASCIZ /
THAT USER ENTRY ALREADY EXISTS/]
		PSOUT
		POPJ P,]
	POPJ P,



;DISPLAY.USERS COMMAND
DISPU:	MOVEI	A,37
	PBOUT

	MOVE	C,UHASHO
	MOVE	D,UHASHL
	MOVE E,[JFCL]	;DSPALL WILL XCT THIS
	PUSHJ	P,DSPALL
	POPJ P,

;DISPLAY.ACCOUNTS COMMAND
DISPA:	MOVEI	A,37
	PBOUT

	MOVE	C,AHASHO
	MOVE	D,AHASHL
	MOVE E,[PUSHJ P,DISPPR]	;DSPALL WILL XCT THIS
	PUSHJ	P,DSPALL
	POPJ P,



;MAKE.ACCT.ENTRY COMMAND
MAE:	PUSHJ	P,GTACCT

;STRING ACCOUNT
	MOVE	A,MATJFN
	HRR	B,AHASHO
	HRL	B,AHASHL
	PUSHJ	P,ENTERH
	JRST	[CAIE A,EHERR1	;ALREADY THERE?
		0
		HRROI A,[ASCIZ /
THAT ACCOUNT DESIGNATOR ENTRY ALREADY EXISTS/]
		PSOUT
		POPJ P,]
	POPJ P,

;DELETE USER.ENTRY COMMAND
DUE:	PUSHJ	P,GTUSER

	MOVE	A,MATJFN
	HRR	B,UHASHO
	HRL	B,UHASHL
	MOVEI	C,INPUT
	PUSHJ	P,DELETH
	 JRST	[CAIE A,DHERR1
		0
		HRROI A,UM1
		PSOUT
		POPJ P,]
	POPJ P,

;DELETE ACCT.ENTRY COMMAND
DAE:	PUSHJ	P,GTACCT

;STRING ACOUNT
	MOVE	A,MATJFN
	HRR	B,AHASHO
	HRL	B,AHASHL
	PUSHJ	P,DELETH
	JRST	[CAIE A,DHERR1
		0
		HRROI A,AM1
		PSOUT
		POPJ P,]
	POPJ P,







;DISPLAY ALL COMMAND

DSPMAT:	MOVE A,MATJFN
	MOVE	E,UHASHL

	MOVE	C,UHASHO
	MOVEM	C,UPLACE

DULOOP:	MOVE	A,MATJFN
	RIN

	JUMPE	B,DNXTU

	CAMN	B,[-1]
	JRST	B,DNXTU

	MOVEI	A,37
	PBOUT

	PUSHJ	P,DSPLAY

	HRROI	A,[ASCIZ /: /]
	PSOUT

	MOVE	A,MATJFN
	MOVE	F,AHASHL
	MOVE	C,AHASHO
	MOVEM	C,APLACE
	SETZM	COMFLG

DALOOP:	MOVE	A,MATJFN
	RIN

	JUMPE	B,DNXTA
	CAMN	B,[-1]
	JRST	B,DNXTA

;NOW SEE IF ANY BITS ARE ON
	PUSH	P,B
	MOVE	B,C
	SUB	B,AHASHO

	MOVE	G,UPLACE
	SUB	G,UHASHO

	HRL	B,G

	PUSHJ	P,GBYTE
	0

	POP	P,B

	TRNN	C,3
	JRST	DNXTA



	SKIPN	COMFLG
	JRST	[SETOM COMFLG
		JRST DDSP]

	MOVEI	A,","
	PBOUT

DDSP:	PUSHJ	P,DSPLAY


	TRNE	C,1
	JRST	[MOVEI A,"#"
		PBOUT
		JRST .+1]



	MOVE	A,MATJFN
	MOVE	C,UPLACE
	SUB	C,UHASHO
	ADD	C,DEFO
	RIN
	JUMPL	B,DNXTA

	ADD	B,AHASHO
	CAMN	B,APLACE
	 JRST	[MOVEI A,"*"
		PBOUT
		JRST .+1]

DNXTA:	SOJLE	F,DNXTU
	MOVE	C,APLACE
	ADDI	C,1
	MOVEM	C,APLACE
	JRST	DALOOP

DNXTU:	SOJLE	E,CMNDL
	MOVE	C,UPLACE
	ADDI	C,1
	MOVEM	C,UPLACE
	JRST	DULOOP

;BUILD FILE COMMAND
BF:	HRROI	A,[ASCIZ /
INPUT FILE NAME: /]
	PSOUT

	MOVSI	A,(1B2!1B3!1B4!1B16!1B17)
	MOVE	B,[100,,101]
	GTJFN
	 JRST	BF

	MOVE	B,[70000,,200000]
	OPENF
	 JRST	[HRROI A,[ASCIZ /
CANT OPEN FILE/]
		PSOUT
		JRST BF]
	MOVEM	A,INJFN

;GET USER NAME
NXTU:	MOVE	PTR,BPTR
GCHR1:	PUSHJ	P,GTCHAR

	CAIN	B," "
	JRST	GCHR1

	CAIN	B,":"
	JRST	GOTU

	CAIN B,15
	 JRST [PUSHJ P,GTCHAR
		JRST GPRACT]


	IDPB	B,PTR
	PUSHJ	P,TRMST
	JRST	GCHR1

GOTU:	MOVE	A,MATJFN
	HRR	B,UHASHO
	HRL	B,UHASHL
	HRROI	C,INPUT
	PUSHJ	P,ENTERH
	 JRST	[CAIE A,EHERR1
		0
		JRST .+1]

	HRRZM	D,UINDEX

;NOW LOOK FOR LOGIN ACCOUNTS
	SETZM	EOLFLG
	SETZM	CHKFLG
	SETZM INPUT
NXTAC:	MOVE	PTR,BPTR
	SETZM	DEFFLG
	SETZM	SEEFLG

GCHR2:	PUSHJ	P,GTCHAR

	CAIN	B," "
	JRST	GCHR2

	CAIN	B,","
	JRST	GOTAC

	CAIN	B,"*"
	JRST	[SKIPE CHKFLG
		JRST [HRROI A,[ASCIZ /
MULTIPLE DEFAULTS -- ILLEGAL
/]
			PSOUT
			JRST GCHR2]
		SETOM DEFFLG
		JRST GCHR2]

	CAIN	B,"#"
	JRST	[SETOM SEEFLG
		JRST GCHR2]


	CAIN	B,15
	 JRST [PUSHJ P,GTCHAR
		SKIPN INPUT
		JRST NXTU
		SETOM EOLFLG
		JRST GOTAC]


	SKIPN	DEFFLG
	SKIPE	SEEFLG
	 JRST	[HRROI A,[ASCIZ /
EXPECTED COMMA OR EOL NOT FOUND
/]
		PSOUT
		JRST GCHR2]

	IDPB	B,PTR
	PUSHJ	P,TRMST
	JRST	GCHR2

GOTAC:	PUSHJ	P,GTAC2

	MOVE	A,MATJFN
	HRR	B,AHASHO
	HRL	B,AHASHL
	PUSHJ	P,ENTERH
	 JRST	[CAIE A,EHERR1
		0
		JRST .+1]

	HRRZM	D,AINDEX

	MOVE	A,MATJFN
	HRR	B,AINDEX
	HRL	B,UINDEX
	MOVEI	C,2
	SKIPE	SEEFLG
	IORI	C,1

	PUSHJ	P,PBYTE
	0

	SKIPE	DEFFLG
	JRST	[MOVE B,AINDEX
		MOVE C,UINDEX
		ADD C,DEFO
		ROUT
		JRST .+1]

	SKIPN	EOLFLG
	JRST	NXTAC
	JRST	NXTU


;PROCESS PRIMARY ACCOUNT SECTION OF INPUT FILE

GPRACT:	MOVE PTR,[POINT 6,PRIACT]
	SETZM EOLFLG
	SETZM PRIACT
	MOVEI D,6

GCHR3:	PUSHJ P,GTCHAR

	CAIN B," "
	 JRST GCHR3

	CAIN B,":"
	 JRST NXTAC2

	CAIN B,15
	 POPJ P,

	SOJL D,[HRROI A,[ASCIZ /
PRIMARY ACCOUNT STRING TOO LONG/]
		PSOUT
		POPJ P,]

	CAIGE B,40		;CONVERT TO SIXBIT
	ADDI B,40
	CAIL B,140
	SUBI B,40
	SUBI B,40

	IDPB B,PTR
	JRST GCHR3

NXTAC2:	SETZM INPUT
	MOVE PTR,BPTR
GCHR4:	PUSHJ P,GTCHAR

	CAIN B," "
	 JRST GCHR4

	CAIN B,","
	 JRST GOTAC2

	CAIN B,15
	 JRST [PUSHJ P,GTCHAR
		SKIPN INPUT
		JRST GPRACT
		SETOM EOLFLG
		JRST GOTAC2]

	IDPB B,PTR
	PUSHJ P,TRMST
	JRST GCHR4

GOTAC2:	PUSHJ P,GTAC2

	MOVE A,MATJFN
	HRR B,AHASHO
	HRL B,AHASHL
	PUSHJ P,ENTERH
	 JRST [CAIE A,EHERR1
		0
		JRST GOTAC3]

	SKIPA B,[0]
GOTAC3:	MOVE B,PRIACT
	MOVE A,MATJFN
	MOVE C,PRIO		;GET ORIGIN OF PRIMARY ACCT TABLE
	ADDI C,0(D)		;ADD HASH INDEX OF ACCT DESIGNATOR
	ROUT			;MAKE THE ENTRY

GOTAC4:	SKIPE EOLFLG
	JRST GPRACT
	JRST NXTAC2


;CHARACTER INPUT ROUTINE

GTCHAR:	MOVE	A,INJFN
	BIN
	JUMPN B,NOGTS

	PUSH	P,B
	GTSTS
	TLNE	B,(1B8)
	JRST	[HRROI A,[ASCIZ /
EOF REACHED -- DONE/]
		PSOUT
		MOVE P,[-NPDL,,PDL-1]
		JRST CMNDL]

	POP	P,B
NOGTS:	MOVE	A,B
	PBOUT
	POPJ	P,


;SUBROUTINE TO GET USER AND ACCT INDICES
GTIND:	PUSHJ	P,GTUSER
	MOVE	A,MATJFN
	HRR	B,UHASHO
	HRL	B,UHASHL
	PUSHJ	P,HASH
	0
	JUMPL	D,[HRROI A,UM1
		PSOUT
		MOVE P,[XWD -NPDL,PDL-1]
		JRST CMNDL]

	MOVEM	D,UINDEX	;SAVE USER INDEX

	PUSHJ	P,GTACCT
	MOVE	A,MATJFN
	HRR	B,AHASHO
	HRL	B,AHASHL
	PUSHJ	P,HASH
	0
	JUMPL	D,[HRROI A,AM1
		PSOUT
		MOVE P,[XWD -NPDL,PDL-1]
		JRST CMNDL]

	MOVEM	D,AINDEX
	POPJ	P,

;SUBROUTINE TO OBTAIN MATRIX ENTRY FROM USER
GTMATE:	HRROI	A,[ASCIZ /
ENTRY: /]
	PSOUT

	SETZ	C,
INCH:	PBIN
	CAIN	A,177	;RUBOUT?
	JRST	GTMATE

	CAIN	A,37	;EOL?
	POPJ	P,

	CAIN	A,"L"
	IORI	C,2
	CAIN	A,"A"
	IORI	C,1
	JRST	INCH

;SUBROUTINE TO PRINT MATRIX ENTRIES
PRMATE:	TRNE	C,2
	JRST	[MOVEI A,"L"
		PBOUT
		JRST .+1]
	TRNE	C,1
	JRST	[MOVEI A,"A"
		PBOUT
		JRST .+1]
	POPJ	P,

;SUBROUTINE TO OBTAIN USER DESIGNATOR
GTUSER:	HRROI	A,[ASCIZ /
USER: /]
	PSOUT

	PUSHJ	P,GTINP	;GET USER NAME

	HRROI	A,INPUT	;TEST IT FOR NUMERIC
	MOVEI	C,^D10
	NIN
	 JRST	[CAIE C,IFIXX2
		0
		MOVEI C,INPUT
		POPJ P,]

;ITS A NUMERIC DESIGNATOR, GIVE ERROR
NUMUS:	MOVEI	A,[ASCIZ /
NUMERIC USER NAME ILLEGAL
/]
	PSOUT
	MOVE P,[XWD -NPDL,PDL-1]
	JRST	CMNDL




;SUBROUTINE TO OBTAIN ACCT DESIGNATOR
GTACCT:	HRROI	A,[ASCIZ /
ACCT: /]
	PSOUT

	PUSHJ	P,GTINP
GTAC2:	HRROI	A,INPUT
	MOVEI	C,^D10
	NIN
	JRST	[CAIE C,IFIXX2
		0
		MOVEI C,INPUT
		POPJ P,]

	TLNE	B,700000	;MAKE SURE OF HIGH ORDER ZEROES
	JRST	[HRROI A,[ASCIZ /
ACCOUNT NUMBER EXCEEDS 2^33 -1; INVALID/]
		PSOUT
		JRST CMNDL]
	TLO	B,500000	;MAKE HIGH ORDER 5
	MOVE	C,B
	POPJ	P,

;SUBROUTINE TO DISPLAY ALL ENTRIES IN A HASH TABLE
DSPALL:	MOVE	A,MATJFN
DLOOP:	RIN
	JUMPE	B,DLOOP2
	CAMN	B,[-1]
	JRST	DLOOP2

	PUSHJ	P,DSPLAY

	XCT E		;CALLER PROVIDES THIS 

	MOVEI	A,37
	PBOUT
	MOVE	A,MATJFN

DLOOP2:	AOJ C,

	SOJG	D,DLOOP

	POPJ	P,

;ROUTINE TO DISPLAY PRIMARY ACCOUNTS
DISPPR:	PUSH P,C
	SUB C,AHASHO
	ADD C,PRIO
	RIN
	CAMN B,[-1]	;ANYTHING THERE?
	 JRST [HRROI 1,[ASCIZ /(!!! THIS ACCOUNT NOT ASSIGNED TO A PIE-SLICE GROUP !!!)/]
		PSOUT
		JRST NOPRI]
	JUMPE B,[HRROI 1,[ASCIZ /(!!! ACCOUNT NOT VALID FOR ANY USER !!!)/]
		PSOUT
		JRST NOPRI]
	MOVEM B,PRIACT
	PUSH P,A
	MOVEI A,"("
	PBOUT
	MOVE B,[POINT 6,PRIACT]
	MOVEI C,6
GET6:	ILDB A,B
	ADDI A,40
	CAIN A,40
	 JRST OUTP
	PBOUT
	SOJG C,GET6
OUTP:	MOVEI A,")"
	PBOUT
	POP P,A
NOPRI:	POP P,C
	POPJ P,


;SUBROUTINE TO DISPLAY DESIGNATOR
DSPLAY:	SAVE	(A,D)

	JUMPE	B,DISPEX	;IS IT EMPTY?

	CAMN	B,[-1]
	JRST	DISPEX

	TLC	B,500000	;NUMERIC
	TLNE	B,700000
	JRST	DISPST	;NO

;NUMERIC DESIGNATOR
	MOVEI	A,101
	MOVEI	C,^D10
	NOUT
	0


DISPEX:	RESTOR	(A,D)
	POPJ	P,

DISPST:	MOVE	D,B
	MOVE	A,B
	ANDI	A,777777
	LSH	A,-^D9
	HRL	A,MATJFN
	MOVSI	B,400000
	HRRI	B,50	;USE PAGE 50 FOR PMAP
	MOVSI	C,(1B2)
	PMAP		;SET UP THE PAGE

	MOVE	A,D
	ANDI	A,777
	IORI	A,50000
	PSOUT
	JRST	DISPEX

;SUBROUTINE TO OBTAIN STRING INPUT FROM PPIMARY FILE
GTINP:	MOVEI	A,40
	PBOUT

	MOVEI	A,100
	MOVE	B,[POINT 7,INPUT]
	MOVEI	C,^D100
	MOVEI	D,37
	SIN
	SETZ	A,
	DPB	A,B	;MAKE EOL DISAPPEAR
	POPJ	P,




	NPDL=^D50
BPTR:	POINT	7,INPUT-1,34
CMNDMS:	ASCIZ	/
COMMANDS ARE:

MAKE.USER.ENTRY
MAKE.ACCT.ENTRY
DELETE.USER.ENTRY

/

;DIRTY STUFF GOES HERE
PDL:	BLOCK	NPDL
INPUT:	BLOCK	^D100
TERM:	BLOCK	1
MATJFN:	BLOCK 1
UHASHO:	BLOCK 1
UHASHL:	BLOCK 1
AHASHO:	BLOCK 1
AHASHL: BLOCK 1
DEFO:	BLOCK 1
PRIO:	BLOCK 1
EXTPTR:	BLOCK 1
EXTCNT:	BLOCK 1
AM1:	ASCIZ /
THAT ACCOUNT DESIGNATOR ENTRY DOES NOT EXIST/
UM1:	ASCIZ /
THAT USER ENTRY DOES NOT EXIST/
UINDEX:	BLOCK 1
AINDEX:	BLOCK 1
INJFN:	BLOCK 1
EOLFLG:	BLOCK 1
CHKFLG:	BLOCK 1
DEFFLG:	BLOCK 1
SEEFLG:	BLOCK 1
COMFLG:	BLOCK 1
UPLACE:	BLOCK 1
APLACE:	BLOCK 1
PRIACT:	BLOCK 1




	END	MATRIX
