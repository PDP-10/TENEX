C	ACCT10
C	PERFORMS ACCOUNTING FOR THE PDP-10 TENEX SYSTEM FROM
C	THE BINARY FACT FILES
C	JOHN MAKHOUL - DECEMBER 20,1971 - VERSION 4

	IMPLICIT INTEGER (A-Z)
	REAL DISCRT,CHARGE,TCHARG,SCHARG,OTHER,TOTHER,FILFIX,DOLLAR
	REAL GRCPU,GRCON,GRCHAR,CRCPU,CRCON,CRCHAR,XTEM,SHIFDF
	REAL RCPU,RCON,CPU2,CON2,DCPU,DCON,HOURS
	LOGICAL ALL,INSERT,DELETE,SPL,ITEM,REPORT,SUMARY
	LOGICAL FIRST,EOF,WORDR,BOUTF,ACTINF
	LOGICAL USEFLG
	INTEGER ACNR
	COMMON /TIME/STRTDT,ENDDAY
	COMMON /QBOUT/BOUTF,ACTINF
	COMMON /ACCOUNT/ID(1001),ACNT(10001),ACTNM(501),ACTAL(3000)
	COMMON /ENTRY/WORD(64),NID,NENTRY,NNACT,NFLCK,NCRASH,UPTIME,
	1	EMPTY
	COMMON /BDATA/BIT0,BIT1,BIT2,BIT12,BIT17,L7,R7,ACTMSK,NBIT2
	COMMON /OUT/ZERO,CRLF,CRLF2,FORMF
	COMMON /FACT/LOG(1001),ASCI(15)
	COMMON /SHIFDF/SHIFDF(21)
	COMMON /BOFIL/BOFIL
	DIMENSION PAYDT(8),REASON(9),SP(1200)
	DATA GRCPU,GRCON,GRCHAR/6.,3.,.384/
	DATA CRCPU,CRCON,CRCHAR/6.,3.,.384/
	DATA STAR4,BIT01,DISCRT/"251245225000,"600000000000,1./
	DATA SIXMSK,LBYTE/"375767737576,"774000000000/
	DATA COLON,MINUS/"350000000000,"264000000000/

	DATA SHIFDF/3.,800.,1.,0,0,1900.,1.,0,0,2400.,1.,10*0/
C CHARG(RCPU,RCONS,RPAGE) - COMPUTES THE CHARGES USING GIVEN RATES
	REAL CHARG,C,D,E
	CHARG(C,D,E)=CPU*C/60.+CONS*D/3600.+PAGE*E*DISCRT+OTHER

C VISBLE(FOO) - DETERMINES IF ANYTHING NON-ZERO WILL PRINT
C THE VARIABLE FOO IS TO KEEP F40 HAPPY AND IS NOT USED
	LOGICAL VISBLE
	VISBLE(FOO)=(OTHER.GE..005).OR.(CPU.GE..5).OR.(CONS.GE..5)
	1 .OR.(PAGE.GE..5).OR.(OTHER.LT.0).OR.(CPU.LT.0).OR.(CONS.LT.0)
	1 .OR.(PAGE.LT.0)


C COMMANDS TO ACCT10
	ASSIGN 7 TO CNTLE
	CALL ION(CNTLE)
	CALL CLOSE
	CALL OPENOF('TTY:')
	GO TO 8
3	ASSIGN 7 TO CNTLE
	CALL ION(CNTLE)
	GO TO 8
7	CALL CLOSI
8	CALL PSOUTR(ZERO)
1	TYPE 2
2	FORMAT(2H <$)
	COMND2=0
	COMND3=0
	CALL RCHAR(COMAND)
	IF (COMAND.EQ.'Z') GO TO 30
	IF (COMAND.EQ.'P') GO TO 35
	IF (COMAND.EQ.'R') GO TO 40
	IF (COMAND.EQ.'W') GO TO 5
	IF (COMAND.EQ.'F') GO TO 20
	IF (COMAND.EQ.'G') GO TO 200
	IF (COMAND.EQ.'A') GO TO 500
	IF (COMAND.EQ.'H') GO TO 50
	IF (COMAND.EQ.'B') GO TO 60
	IF (COMAND.EQ.'D') GO TO 90
	TYPE 4

4	FORMAT (/2H+?/)
	GO TO 1
5	TYPE 6
6	FORMAT ('+RITE ONTO FILE: '$)
	CALL OPENOF
	IF (COMND2.EQ.'W') GO TO 240
	GO TO 1

C FILE DISCOUNT RATE - DISCRT
20	TYPE 21
21	FORMAT ('+ILE DISCOUNT RATE: '$)
	ACCEPT 22, DISCRT
22	FORMAT (F)
	GO TO 1

C INITIALIZE ACCOUNTING SYSTEM
30	TYPE 31
31	FORMAT ('+ INITIALIZE ACCOUNTING SYSTEM'/'  P'$)
C SET PAY PERIOD
35	CALL FPSOUT('AY PERIOD IS:  ')
	CALL RALPH(PAYDT,NCHAR)
	PAYDT(6)=PAYDT(6).AND."777777700000
	CALL PSOUTR(0)
	CALL FPSOUT('STARTING DATE: ')
	CALL IDTIMT(STRTDT)
	CALL PSOUTR(0)
	CALL FPSOUT('ENDING DATE: ')
	CALL IDTIMT(ENDDAY)
	CALL PSOUTR(0)
	IF(COMAND.EQ.'P') GO TO 1
	CALL PSOUTR(0)
	CALL FPSOUT('  ACCOUNTING INFORMATION?(Y,N)')
	CALL RCHAR(CHAR)
	CALL PSOUTR(0)
	ACTINF=.FALSE.
	IF(CHAR.EQ.'Y') ACTINF=.TRUE.
	CALL FPSOUT('  LOGOUT DATA FILE?(Y,N) ')
	CALL RCHAR(CHAR)
	CALL PSOUTR(0)
        BOFIL="377777
	BOUTF=.FALSE.
	IF(CHAR.NE.'Y') GO TO 32
	CALL FPSOUT('  BINARY-FILE NAME: ')
	CALL BINOF
	BOUTF=.TRUE.
32	CALL FSOUT(FORMF)
	CALL FSOUT('   FACT FILE RECORD FOR PAY PERIOD ')
	CALL SOUTCR(PAYDT)
	CALL FSOUT(CRLF)
	SHMAX=SHIFDF(1)
	DO 3269 I=1,SHMAX
	SHIFDF(4*I)=0
3269	SHIFDF(4*I+1)=0
	ID(1)=0
	ACNT(1)=2
	ACTNM(1)=-1
	ACTAL(1)=0
	LOG(1)=-2
	SP(1)=2
	CALL RFACT(-2)
	NCRASH=0
	NFLCK=0
	NID=0
	NENTRY=0
	NNACT=0
	EMPTY=0
	UPTIME=-1
	REPORT=.TRUE.
	GO TO 1


C READ ACCOUNTS FROM FACT FILES
40	CALL RFACT(0)
	CALL FSOUT(CRLF)
	REPORT=.FALSE.
	GO TO 1

C CPU AND CONSOLE TIME HISTOGRAM
50	CALL PSOUTR('ISTOGRAM')
	CALL FPSOUT(' OUTPUT FILE:')
	CALL OPENOF
	CALL RFACT(-1)
	CALL OPENOF('TTY:')
	GO TO 1

C OUTPUT BINARY FILE AS OCTAL NUMBERS
60	CALL PSOUTR('INARY-FILE LISTING')
	TYPE 61
61	FORMAT('  WRITE ONTO FILE:  '$)
	CALL OPENOF
	CALL FPSOUT(' READ BINARY FILE:  ')
	CALL FOPENF(1)
	ASSIGN 65 TO EOF
	WORDNO=-1
63	CALL RWORD(BWORD,EOF)
	WORDNO=WORDNO+1
	ENCODE (20,64,ASCI) WORDNO,BWORD
64	FORMAT(O6,O14)
	ASCI(5)=0
	CALL SOUTCR(ASCI)
	GO TO 63
65	CALL SOUTCR('END OF FILE')
	CALL OPENOF('TTY:')
	GO TO 1

C PRINT LOCAL TIME, GIVEN TENEX FORMAT TIME
90	CALL FPSOUT('ATE (TENEX FORMAT): ')
	ACCEPT 91,DATE
91	FORMAT(O)
	CALL FPSOUT(BIT1)
	CALL ODTIMT(DATE)
	CALL PSOUTR(0)
	GO TO 1

C REPORTS PROGRAM
200	CALL PSOUTR('O TO REPORTS')
	IF(NENTRY.NE.0) GO TO 203
	CALL PSOUTR('NO CHARGES')
	GO TO 3
203	IACF=-3+5*NENTRY
	IF(REPORT) GO TO 205
C PERFORM ACCOUNTING FOR JOBS NOT LOGGED OUT
	CALL SOUTCR('ACCOUNTING FOR JOBS NOT LOGGED OUT')
	CALL RFACT(1)
	REPORT=.TRUE.


C CLOSE LOGOUT DATA FILE
	IF(BOUTF) CALL CLOSB
	BOUTF=.FALSE.

C OUTPUT ALPHANUMERIC ACCOUNTS
	IF(.NOT.ACTINF) GO TO 199
	CALL SOUTCR(0)
	CALL SOUTCR('ALPHANUMERIC ACCOUNTS')
	IA=0
	SIZE=0
197	IA=IA+SIZE+1
	IF(ACTAL(IA).EQ.0) GO TO 199
	II=-IA
	ENCODE(10,198,ASCI) II
198	FORMAT(1X,I6,3X)
	ASCI(3)=0
	CALL FSOUT(ASCI)
	CALL SOUTCR(ACTAL(IA+1))
	SIZE=ACTAL(IA).AND.R7
	GO TO 197

C PUT CPU AND CONSOLE TIME IN SECONDS
C DIVIDE NO. OF PAGES BY NFLCK
199	DO 202 I=2,IACF,5
	ACNT(I+2)=IFIXR(ACNT(I+2)/1000.)
	ACNT(I+3)=IFIXR(ACNT(I+3)/1000.)
	IF (NFLCK.EQ.0)  ACNT(I+4)=0
202	IF (NFLCK.NE.0) ACNT(I+4)=IFIXR((ACNT(I+4)+0.)/NFLCK)

C CLASSIFY USERS:BIT0=1,ALPHANUMERIC; OTHERWISE NUMERIC
C GET FIRST WORD OF USER NAME
C LOG TABLE IS NOW USED TO ALPHABETIZE USER ID'S
	CALL PSOUTR('CLASSIFICATION OF USERS AND ACCOUNTS, ETC.')
	DO 201 I=1,NID
	CALL CATEG(ID(I))
	USER=ID(I).AND.R7
	CALL FDIRST(USER,LOG(I+1),NCHAR)
	IF(NCHAR.NE.0) GO TO 201
	LOG(I+1)='?????'
	TYPE 204,USER
204	FORMAT('  USER ID ',O12,' NOT IN USE'/)
201	LOG(I+1)=LOG(I+1).AND.SIXMSK

C ORDER NUMERIC ACCOUNTS
205	IF (NNACT.LE.1) GO TO 210
206	FLAG=0
	DO 207 I=NNACT,2,-1
	J=I-1
	IF(ACTNM(I).GE.ACTNM(J)) GO TO 207
	TEMP=ACTNM(I)
	ACTNM(I)=ACTNM(J)
	ACTNM(J)=TEMP
	FLAG=1
207	CONTINUE
	IF(FLAG.EQ.1) GO TO 206


C ORDER USERS ALPHABETICALLY
210	IF(NID.LE.1) GO TO 220
211	FLAG=0
	DO 212 I=NID,2,-1
	K=I+1
	J=I-1
	IF(LOG(K)-LOG(I)) 214,213,212
213	IF((ID(J).AND.R7).LT.(ID(I).AND.R7)) GO TO 212
214	TEMP=LOG(I)
	LOG(I)=LOG(K)
	LOG(K)=TEMP
	TEMP=ID(I)
	ID(I)=ID(J)
	ID(J)=TEMP
	FLAG=1
212	CONTINUE
	IF(FLAG.EQ.1) GO TO 211

C CLASSIFY ACCOUNTS BY CHARGE CLASS
220	DO 221 I=1,NID
	USER=ID(I).AND.R7
	IAC=(ID(I).AND.L7)/BIT17
222	NACCT=ACNT(IAC)
	ASSIGN 223 TO CLASS
	GO TO 1200
223	ACNT(IAC)=NACCT
	IF(ACNT(IAC+1).LT.0) GO TO 221
	IAC=ACNT(IAC+1).AND.R7
	GO TO 222
221	CONTINUE
C CLASSIFY SPECIAL CHARGES
225	K=0
	S=2
226	S=S+K
	IF(S.EQ.SP(1)) GO TO 228
	USER=(SP(S).AND.L7)/BIT17
	NACCT=SP(S+1)
	ASSIGN 227 TO CLASS
	GO TO 1200
227	SP(S+1)=NACCT
	K=SP(S).AND.R7
	GO TO 226

228	IF(COMAND.EQ.'A'.AND.COMND3.EQ.0) GO TO 597


C COMMANDS TO REPORTS PROGRAM
	ASSIGN 247 TO CNTLE
	CALL ION(CNTLE)
	GO TO 246
247	CALL CLOSI
246	CALL PSOUTR(ZERO)
240	TYPE 241
241	FORMAT (2H *$)
	ALL=.FALSE.
	COMND3=0
	ITEM=.FALSE.
	SUMARY=.FALSE.
	CALL RCHAR(COMND2)
	IF (COMND2.EQ.'E') GO TO 242
	IF (COMND2.EQ.'D') GO TO 250
	IF (COMND2.EQ.'C') GO TO 260
	IF (COMND2.EQ.'F'.OR.COMND2.EQ.'T') GO TO 300
	IF (COMND2.EQ.'J') GO TO 340
	IF (COMND2.EQ.'N') GO TO 6000
	IF (COMND2.EQ.'U') GO TO 350
	IF (COMND2.EQ.'I') GO TO 360
	IF (COMND2.EQ.'A') GO TO 500
	IF (COMND2.EQ.'W') GO TO 5
	IF (COMND2.EQ.'Y') GO TO 450
	IF (COMND2.EQ.'S') GO TO 475
	TYPE 4
	GO TO 240
242	CALL PSOUTR('XIT')
	GO TO 3

C DO ALL COST SUMMARIES
250	CALL PSOUTR('O ALL COST SUMMARIES')
	ALL=.TRUE.
	GO TO 260
251	COMND2='F'
	GO TO 300
252	IF (COMND2.EQ.'T') GO TO 253
	COMND2='T'
	GO TO 300
253	COMND2='J'
	GO TO 340


C COST SUMMARY BY CATEGORY
260	CALL PSOUTR('OST SUMMARY')
	CALL FSOUT(FORMF)
	CALL FSOUT('     TENEX SUMMARY SHEET FOR PAY PERIOD ')
	CALL SOUTCR(PAYDT)
	CALL FSOUT(CRLF)
	CALL FSOUT('JOB TYPE')
	ENCODE (61,261,ASCI) BIT1
261	FORMAT(A1,'   CPU TIME   CONSOLE TIME   FILE PAGES         ',
	1      5X,'       ')
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
	CALL FSOUT(CRLF)
	TYPE=0
	ASSIGN 262 TO TZERO
	GO TO 1100
262	TYPE=TYPE+1
	CPU=0
	CONS=0
	PAGE=0
	OTHER=0.
	CHARGE=0.
	GO TO (270,275,277,280,282,285) TYPE

C EXTERNAL CLIENTS - TYPE=1
C ACCOUNTS < 200000
270	CALL SOUTCR('EXTERNAL CLIENTS')
	CALL FSOUT('          ')
	ACODE=BIT2
	ASSIGN 265 TO SUM
	GO TO 290
265	ASSIGN 262 TO OUT
	GO TO 1010
C CHARGEABLE OVERHEAD - TYPE=2
275	CALL SOUTCR('CHARGEABLE OVERHEAD')
	CALL FSOUT('          ')
	ACODE=BIT2
	GO TO 290
C NONCHARGEABLE - TYPE=3
277	CALL SOUTCR('NONCHARGEABLE')
	CALL FSOUT('          ')
	ACODE=0
	GO TO 290
C COMPUTER CENTERS - TYPE=4
280	CALL SOUTCR('COMPUTER CENTERS')
	CALL FSOUT('          ')
	ACODE=0
	GO TO 290
C TOTAL
282	CALL FSOUT(CRLF)
	CALL FSOUT('TOTAL     ')
	CPU=TCPU
	CONS=TCONS
	PAGE=TPAGE
	OTHER=TOTHER
	CHARGE=TCHARG
	GO TO 1020


C FINAL SUMMARY
285	CALL FSOUT(CRLF2)
	ENCODE(60,286,ASCI) GRCPU,GRCON,GRCHAR
286	FORMAT('CHARGE RATES  $'F5.2,'@MIN   $'F5.2,'@HR  $',
	1      F5.3,'/PAGE/PAY PERIOD')
	ASCI(13)=0
	CALL SOUTCR(ASCI)
	ENCODE(60,289,ASCI) BIT1
289	FORMAT(39X,'(1 PAGE=512*5 CHARS)',A1)
	ASCI(13)=0
	CALL SOUTCR(ASCI)
	CALL FSOUT(CRLF)
	ENCODE(50,287,ASCI) NCRASH
287	FORMAT('THERE WERE'I4,' SYSTEM RESTARTS THIS PAY PERIOD    ')
	ASCI(11)=0
	CALL SOUTCR(ASCI)
	CALL FSOUT(CRLF)
	IF(UPTIME.EQ.-1) UPTIME=0
	MIN=UPTIME/60
	SEC=UPTIME-MIN*60
	HOUR=MIN/60
	MIN=MIN-HOUR*60
	ENCODE(40,284,ASCI) HOUR,MIN,SEC
284	FORMAT('TOTAL UPTIME THIS PAY PERIOD:',I4,':'I2,':'I2,1X)
	ASCI(9)=0
	CALL SOUTCR(ASCI)
	CALL FSOUT(CRLF)
	CALL FSOUT('FILE CHARGES HAVE BEEN DISCOUNTED BY A FACTOR OF')
	ENCODE(5,288,ASCI) DISCRT
288	FORMAT(F5.3)
	ASCI(2)=0
	CALL SOUTCR(ASCI)
	CALL SOUTCR('SHIFT UTILIZATION CPU,CONS   DISCOUNT')
	CALL FSOUT(CRLF)
	SHMAX=SHIFDF(1)
	DO 28801 I=1,SHMAX
	CALL FSOUT(CRLF)
	S=IFIXR(SHIFDF(4*I)/1000)
	MIN=S/60
	SEC=S-MIN*60
	HOUR=MIN/60
	MIN=MIN-HOUR*60
	S=IFIXR(SHIFDF(4*I+1)/1000)
	MIN1=S/60
	SEC1=S-MIN1*60
	HOUR1=MIN1/60
	MIN1=MIN1-HOUR1*60
	ISHIFT=SHIFDF(4*I-2)
	ENCODE (60,28802,ASCI) ISHIFT,HOUR,MIN,SEC,HOUR1,
	1 MIN1,SEC1,SHIFDF(4*I-1)
	ASCI(13)=0
28802	FORMAT (I4,2X,I4,':',I2,':',I2,',',I4,':',I2,':',I2,2X,F5.3)
28801	CALL FSOUT(ASCI)

	CALL FSOUT(CRLF)
	IF (ALL) GO TO 251
	GO TO 240

C (SUM) - SUM ACCOUNTS
290	DO 291 I=2,IACF,5
	IF(ACNT(I).EQ.NBIT2) GO TO 291
	IF((ACNT(I).AND.BIT12).NE.ACODE) GO TO 291
	NACCT=ACNT(I).AND.ACTMSK
	ASSIGN 294 TO SCLASS
	ASSIGN 291 TO NOSUM
	GO TO 296
294	CPU=CPU+ACNT(I+2)
	CONS=CONS+ACNT(I+3)
	PAGE=PAGE+ACNT(I+4)
291	CONTINUE
	K=0
	S=2

292	S=S+K
	IF(S.EQ.SP(1)) GO TO SUM
	IF(SP(S).LT.0) GO TO 293
	IF((SP(S+1).AND.BIT12).NE.ACODE) GO TO 293
	NACCT=SP(S+1).AND.ACTMSK
	ASSIGN 295 TO SCLASS
	ASSIGN 293 TO NOSUM
	GO TO 296
295	OTHER=OTHER+SP(S+2)/100.
293	K=SP(S).AND.R7
	GO TO 292
C (SCLASS) - SUBCLASSIFY
C (NOSUM)  - DO NOT SUM
296	IF(ACODE.NE.BIT2) GO TO 297
	IF(NACCT.GE.200000.AND.TYPE.EQ.2) GO TO SCLASS
	IF(NACCT.LT.200000.AND.TYPE.EQ.1) GO TO SCLASS
	GO TO NOSUM
297	IF(NACCT.GT.999.AND.ACNT(I).GE.0.AND.TYPE.EQ.4) GO TO SCLASS
	IF((NACCT.LE.999.OR.ACNT(I).LT.0).AND.TYPE.EQ.3) GO TO SCLASS
	GO TO NOSUM


C COST SUMMARY BY ACCOUNT NUMBER
300	IF (COMND2.EQ.'F') GO TO 302
	CALL PSOUTR('OTAL COST')
	GO TO 305
302	CALL PSOUTR('INAL COST SUMMARY FOR ACCOUNTING')
305	CALL FSOUT(FORMF)
	CALL FSOUT('        TENEX TIME SHEET FOR PAY PERIOD ')
	CALL SOUTCR(PAYDT)
	CALL FSOUT(CRLF)
	CALL FSOUT('JOB NUMBER')
	ENCODE(61,261,ASCI) BIT1
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
C NUMERIC ACCOUNTS
301	IA=0
	ASSIGN 306 TO TZERO
	GO TO 1100
306	IA=IA+1
313	CPU=0
	CONS=0
	PAGE=0
	OTHER=0.
	CHARGE=0.
	SPL=.FALSE.
	IF(COMND2.NE.'Y') GO TO 303
	ASSIGN 303 TO READB
	GO TO 455
303	IF(IA.GT.NNACT) GO TO 315
	NACCT=ACTNM(IA)
	IF(COMND2.NE.'Y') GO TO 304
	ACNUM=NACCT
	IF(WORD(1).LT.0.OR.WORD(1).GE.NACCT.OR.EOF.OR.FIRST)
	1 GO TO 304

314	ASSIGN 313 TO BINO
	GO TO 460
315	IF(COMND2.NE.'Y') GO TO 320
	IF(WORD(1).LT.0.OR.EOF.OR.FIRST) GO TO 320
	GO TO 314
304	DO 307 I=1,NID
	ASSIGN 308 TO LOCENT
	ASSIGN 307 TO ENTNF
	GO TO 1700
308	ACODE=ACNT(IAC).AND.BIT12
	IF(COMND2.EQ.'F'.AND.ACODE.EQ.0) GO TO 306
	IF((ACNT(IAC+1).AND.L7).NE.0) SPL=.TRUE.
	CPU=CPU+ACNT(IAC+2)
	CONS=CONS+ACNT(IAC+3)
	PAGE=PAGE+ACNT(IAC+4)
307	CONTINUE
	IF(COMND2.EQ.'Y') GO TO 310
	ASSIGN 310 TO ACTNO
	IF ((.NOT.SPL).AND.(.NOT.(VISBLE(FOO)))) GO TO 310
	GO TO 1600
310	IF(.NOT.SPL) GO TO 311
	NACCT1=NACCT
	USER=-1
	ASSIGN 311 TO SPAD
	IF ((.NOT.SPL).AND.(.NOT.(VISBLE(FOO)))) GO TO 311
	GO TO 1800
311	ASSIGN 306 TO OUT
	IF(COMND2.EQ.'Y') ASSIGN 319 TO OUT
	IF ((.NOT.SPL).AND.(.NOT.(VISBLE(FOO)))) GO TO 319
	GO TO 1010
319	ASSIGN 306 TO BINO
	IF(WORD(1).EQ.NACCT) GO TO 461
	GO TO 462
C ALPHANUMERIC ACCOUNTS
320	SUMARY=.TRUE.
	DO 326 I=1,NID
	USER=ID(I).AND.R7
	IAC=(ID(I).AND.L7)/BIT17
	ALPHA=.FALSE.
324	SCPU=0
	SCONS=0
	SPAGE=0
	OTHER=0.
	SCHARG=0.
	SPL=.FALSE.
	IF(COMND2.NE.'Y') GO TO 328
	ASSIGN 321 TO READB
	GO TO 455
321	ACNUM=-USER
	IF(ACNUM.EQ.WORD(1).OR.EOF.OR.FIRST) GO TO 328
	USER2=-WORD(1)
	CALL FDIRST(USER2,ASCI,NCHAR)
	ASCI(1)=ASCI(1).AND.SIXMSK
	IF(ASCI(1)-LOG(I+1)) 323,322,328

322	IF(WORD(1).LT.ACNUM) GO TO 328
323	ASSIGN 324 TO BINO
	GO TO 460
328	IF(ACNT(IAC).GE.0) GO TO 30069
	ALPHA=.TRUE.
	CPU=ACNT(IAC+2)
	CONS=ACNT(IAC+3)
	PAGE=ACNT(IAC+4)
	ACODE=ACNT(IAC).AND.BIT12
	IF((ACNT(IAC+1).AND.L7).NE.0) SPL=.TRUE.
	ASSIGN 327 TO OUT
	GO TO 1010
327	SCPU=SCPU+CPU
	SCONS=SCONS+CONS
	SPAGE=SPAGE+PAGE
	SCHARG=SCHARG+CHARGE
30069	IF(ACNT(IAC+1).LT.0) GO TO 330
	IAC=ACNT(IAC+1).AND.R7
	GO TO 328
330	IF(.NOT.ALPHA) GO TO 326
	IF(.NOT.SPL) GO TO 331
	NACCT1=NBIT2
	ASSIGN 331 TO SPAD
	GO TO 1800
331	CPU=SCPU
	CONS=SCONS
	PAGE=SPAGE
	CHARGE=SCHARG
	TOTHER=TOTHER+OTHER
	IF(COMND2.EQ.'Y') GO TO 332
	IF(CHARGE.EQ.0.AND.COMND2.EQ.'F') GO TO 326
	ASSIGN 326 TO OUT
	ASSIGN 1020 TO NAME
	GO TO 1500
332	ASSIGN 326 TO BINO
	IF(ACNUM.EQ.WORD(1)) GO TO 461
	GO TO 462
326	CONTINUE
	IF(COMND2.NE.'Y') GO TO 335
	ASSIGN 333 TO READB
	GO TO 455
333	IF(EOF.OR.FIRST) GO TO 454
	ASSIGN 455 TO BINO
	GO TO 460
C TOTAL
335	SUMARY=.FALSE.
	ASSIGN 336 TO OUT
	GO TO 282
336	IF(COMND2.EQ.'T') GO TO 337
	CALL FSOUT(CRLF2)
	CALL SOUTCR('APPROVED BY: ..............................')
	CALL SOUTCR('                     (SIGNATURE)')
337	IF (ALL) GO TO 252
	GO TO 240



C JOB SUMMARIES
340	CALL PSOUTR('OB SUMMARIES')
6001	IA=0
341	IA=IA+1
	IF (IA.GT.NNACT.AND.COMND2.EQ.'N') GO TO 6002
	IF (IA.GT.NNACT) GO TO 351
349	CALL FSOUT(FORMF)
	CALL FSOUT('      TENEX CHARGES FOR PAY PERIOD ')
	CALL SOUTCR(PAYDT)
	CALL FSOUT(CRLF)
	ENCODE(40,342,ASCI) ACTNM(IA)
342	FORMAT(23X,'ACCOUNT:',I9)
	ASCI(9)=0
	CALL FSOUT(ASCI)
	CALL FSOUT(CRLF2)
	CALL FSOUT('  USER    ')
	ENCODE(61,261,ASCI) BIT1
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
	SPL=.FALSE.
	NACCT=ACTNM(IA)
	ASSIGN 347 TO TZERO
	GO TO 1100
347	DO 343 I=1,NID
	ASSIGN 345 TO LOCENT
	ASSIGN 343 TO ENTNF
	GO TO 1700
345	USER=ID(I).AND.R7
	ASSIGN 346 TO NAME
	GO TO 1500
346	CPU=ACNT(IAC+2)
	CONS=ACNT(IAC+3)
	PAGE=ACNT(IAC+4)
	OTHER=0.
	CHARGE=0.
	ASSIGN 343 TO OUT
	ACODE=ACNT(IAC).AND.BIT12
	IF((ACNT(IAC+1).AND.L7).NE.0) GO TO 344
	GO TO 1010
344	NACCT1=NACCT
	ASSIGN 1010 TO SPAD
	GO TO 1800
343	CONTINUE
	ASSIGN 410 TO OUT
	GO TO 282
C ITEMIZE OTHER
410	IF(.NOT.SPL) GO TO 415
	CALL SOUTCR(CRLF2)
	ENCODE(50,411,ASCI) ACTNM(IA)
411	FORMAT(15X,'ITEMIZED OTHER COSTS FOR',I9,2X)
	ASCI(11)=0
	CALL FSOUT(ASCI)
	CALL FSOUT(CRLF2)
	CALL FSOUT('  USER    ')
	ENCODE (50,412,ASCI) BIT1

412	FORMAT(12X,'ITEM',A1,26X,'CHARGE')
	CALL SOUTCR(ASCI)
	ITEM=.TRUE.
	USER=-1
	ASSIGN 413 TO SPAD
	GO TO 1800
413	ITEM=.FALSE.
415	IF (COMND2.EQ.'I') GO TO 240
	GO TO 341



C TABLE OF USERS FOR EACH ACCOUNT
6000	CALL PSOUTR('UMERIC AND STRING ACCOUNT SUMMARIES')
	GO TO 6001
6002	J1=1
6050 	ACNR=ACTAL(J1).AND.R7
	IF (ACNR.EQ.0) GO TO 240
	ASSIGN 6075 TO TZERO
	GO TO 1100
6075	USEFLG=.FALSE.
	CALL FSOUT(FORMF)
	CALL FSOUT('TENEX CHARGES FOR PAY PERIOD')
	CALL FSOUT(PAYDT)
	CALL FSOUT(CRLF)
	CALL FSOUT('        ACCOUNT: ')
	NCHAR=(ACTAL(J1).AND.L7)/BIT17
	CALL FSOUT(ACTAL(J1+1))
	CALL FSOUT(CRLF)
	DO 6500 I=1,NID
	IAC=(ID(I).AND.L7)/BIT17
6100	NACCT=(ACNT(IAC).XOR.BIT0).AND.ACTMSK
	IF (NACCT.NE.J1) GO TO 6300
	USER=ID(I).AND.R7
	CPU=ACNT(IAC+2)
	CONS=ACNT(IAC+3)
	PAGE=ACNT(IAC+4)
	OTHER=0.
	CHARGE=0.
	TCPU=TCPU+CPU
	TCONS=TCONS+CONS
	TPAGE=TPAGE+PAGE
	IF (.NOT.VISBLE(FOO)) GO TO 6500
	IF (.NOT.USEFLG) GO TO 6200
6125	USEFLG=.TRUE.
	ASSIGN 6130 TO NAME
	GO TO 1500
6130	ASSIGN 6150 TO OUT
	GO TO 1020
6150	GO TO 6500
6200	CALL FSOUT('  USER  ')
	ENCODE(61,261,ASCI) BIT1
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
	GO TO 6125
6300	IF (ACNT(IAC+1).LT.0) GO TO 6500
	IAC=ACNT(IAC+1).AND.R7
	GO TO 6100
6500	CONTINUE
	IF (USEFLG) GO TO 6600
	CALL SOUTCR('NO USAGE MADE OF THIS ACCOUNT')
	GO TO 6700
6600	ASSIGN 6700 TO OUT
	GO TO 282
6700	J1=J1+ACNR+1
	GO TO 6050
C USER COST SUMMARIES
350	CALL PSOUTR('SER COST SUMMARIES')
351	DO 352 I=1,NID
	IF(COMND2.EQ.'J'.AND.ID(I).GE.0) GO TO 352
	USER=ID(I).AND.R7
358	IAC=(ID(I).AND.L7)/BIT17
	CALL FSOUT(FORMF)
	CALL FSOUT('      TENEX CHARGES FOR PAY PERIOD ')
	CALL SOUTCR(PAYDT)
	CALL FSOUT(CRLF)
	CALL FDIRST(USER,ASCI,NCHAR)
	CALL UTYPE(USER,UTYP)
	GO TO (4001,4002,4003),UTYP
4003	CALL FSOUT('                       USER: ')
4004	CALL FSOUT(ASCI)
	CALL FSOUT(CRLF2)
	SPL=.FALSE.
	IF(ID(I).LT.0) GO TO 400
	CALL FSOUT('  ACCOUNT ')
	GO TO 401
400	CALL FSOUT('ACCOUNT   ')
401	ENCODE (61,261,ASCI) BIT1
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
	ASSIGN 357 TO TZERO
	GO TO 1100
357	ASSIGN 354 TO OUT
	ASSIGN 356 TO ACTNO
353	NACCT=ACNT(IAC)
	ACODE=ACNT(IAC).AND.BIT12
	CPU=ACNT(IAC+2)
	CONS=ACNT(IAC+3)
	PAGE=ACNT(IAC+4)
	OTHER=0.
	CHARGE=0.
	NACCT1=NACCT
	K=0
	S=2
	TSPL=.FALSE.
4005	S=S+K
	IF(S.EQ.SP(1)) GO TO 4010
	IF(SP(S).LT.0) GO TO 4008
	IF(USER.EQ.-1) GO TO 4006
	USE=(ID(I).AND.R7)*BIT17
	IF(USE.NE.(SP(S).AND.L7)) GO TO 4008
4006	IF(NACCT1.EQ.NBIT2) GO TO 4007
	TEM=SP(S+1).AND.ACTMSK
	IF(NACCT.NE.TEM) GO TO 4008
4007	TSPL=.TRUE.
	GO TO 4010
4008	K=SP(S).AND.R7
	GO TO 4005
4010	IF ((.NOT.TSPL).AND.(.NOT.(VISBLE(FOO))))
	1 GO TO 354
	IF(ID(I).LT.0.AND.ACNT(IAC).GE.0) GO TO 402
	IF(ID(I).GE.0.AND.ACNT(IAC).LT.0) GO TO 403
	GO TO 1600
402	CALL SOUTCR('**NUMERIC ACCOUNT**')
	GO TO 1600
403	CALL SOUTCR('**ALPHANUMERIC ACCOUNT**')
	GO TO 1600
356	IF((ACNT(IAC+1).AND.L7).NE.0) GO TO 359
	GO TO 1010

359	ASSIGN 1010 TO SPAD
	GO TO 1800
354	IF(ACNT(IAC+1).LT.0) GO TO 355
	IAC=ACNT(IAC+1).AND.R7
	GO TO 353
355	ASSIGN 420 TO OUT
	GO TO 282
C ITEMIZE OTHER
420	IF(.NOT.SPL) GO TO 425
	CALL FSOUT(CRLF2)
	CALL FSOUT(CRLF)
	CALL FDIRST(USER,ASCI,NCHAR)
	CALL FSOUT('               ITEMIZED OTHER COSTS FOR ')
	CALL FSOUT(ASCI)
	CALL FSOUT(CRLF2)
	IF(ID(I).LT.0) GO TO 421
	CALL FSOUT('  ACCOUNT ')
	GO TO 423
421	CALL FSOUT('ACCOUNT   ')
423	ENCODE(50,412,ASCI) BIT1
	ASCI(11)=0
	CALL SOUTCR(ASCI)
	ITEM=.TRUE.
	NACCT1=NBIT2
	ASSIGN 422 TO SPAD
	GO TO 1800
422	ITEM=.FALSE.
425	IF(COMND2.EQ.'I') GO TO 240
352	CONTINUE
	GO TO 240

4001	CALL FSOUT('                    BBN USER: ')
	GO TO 4004

4002	CALL FSOUT('                   DIRECTORY: ')
	GO TO 4004

C INDIVIDUAL JOB SUMMARY
360	TYPE 361
361	FORMAT('+NDIVIDUAL JOB SUMMARY FOR (N,U): '$)
	CALL RCHAR(NA)
	IF(NA.EQ.'N'.OR.NA.EQ.'U') GO TO 362
	TYPE 4
	GO TO 240
362	TYPE 363
363	FORMAT(2H+ $)
	IF(NA.EQ.'U') GO TO 370
C NUMERIC
365	ACCEPT 366,NACCT
366	FORMAT(I)
	DO 367 IA=1,NNACT
	IF(ACTNM(IA).EQ.NACCT) GO TO 349
367	CONTINUE
	CALL PSOUTR(' NONEXISTENT ACCOUNT')
	GO TO 240
C USER
370	ASSIGN 372 TO DIRERR
	CALL FSTDIR(USER,TYPE,DIRERR)
	DO 371 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 358

371	CONTINUE
	CALL PSOUTR(' USER NOT ON USER LIST FOR THIS PAY PERIOD')
	GO TO 240
372	CALL PSOUTR(' USER ID NOT IN DIRECTORY')
	GO TO 240

C YEAR-TO-DATE ACCOUNTING
450	CALL PSOUTR('EAR-TO-DATE ACCOUNTING')
451	CALL FPSOUT('IS THIS THE FIRST PAY PERIOD OF THE YEAR? (Y,N)
	1  ')
	CALL RCHAR(CHAR)
	CALL PSOUTR(BIT1)
	IF(CHAR.EQ.'Y'.OR.CHAR.EQ.'N') GO TO 452
	TYPE 4
	GO TO 451
452	FIRST=.FALSE.
	IF(CHAR.EQ.'Y') FIRST=.TRUE.
	IF(FIRST) GO TO 453
	CALL FPSOUT('MOST RECENT YEAR-TO-DATE FILE:')
	ASSIGN 457 TO ENDF
	REASON(1)=0
	CALL FOPENF(REASON)
	EOF=.FALSE.
453	CALL FPSOUT('NEW YEAR-TO-DATE OUTPUT FILE:')
	CALL BINOF
	DO 449 I=1,6
	CALL WWORD(PAYDT(I))
	IF(FIRST) GO TO 449
	CALL RWORD(WORD(I),ENDF)
449	CONTINUE
	WORD(1)=-1
	WORDR=.FALSE.
	SUMARY=.TRUE.
	GO TO 301
C CLOSE BINARY FILE
454	CALL CLOSB
	GO TO 240

C (READB) - READ FROM BINARY FILE
455	IF(EOF.OR.FIRST.OR.WORDR) GO TO READB
	DO 456 II=1,6
456	CALL RWORD(WORD(II),ENDF)
	WORDR=.TRUE.
	GO TO READB
C END OF FILE
457	EOF=.TRUE.
	GO TO READB


C (BINO) - OUTPUT TO BINARY FILE
460	CPU=0
	CONS=0
	PAGE=0
	OTHER=0.
	CHARGE=0.
461	ACNUM=WORD(1)
	CPU=CPU+WORD(2)
	CONS=CONS+WORD(3)
	PAGE=PAGE+WORD(4)
	OTHER=OTHER+WORD(5)/100.
	CHARGE=CHARGE+WORD(6)/100.
	WORDR=.FALSE.
462	CALL WWORD(ACNUM)
	CALL WWORD(CPU)
	CALL WWORD(CONS)
	CALL WWORD(PAGE)
	TEMP=IFIXR(OTHER*100.)
	CALL WWORD(TEMP)
	TEMP=IFIXR(CHARGE*100.)
	CALL WWORD(TEMP)
	GO TO BINO

C YEAR-TO-DATE SUMMARY
475	CALL FPSOUT('UMMARY FOR YEAR-TO-DATE FILE: ')
	SCOMND='S1'
	ASSIGN 485 TO ENDF
	REASON(1)=0
476	CALL FOPENF(REASON)
	CALL FSOUT(FORMF)
	CALL SOUTCR('                  CUMULATIVE YEAR-TO-DATE
	1 TIME SHEET')
	CALL FSOUT('              ENDING IN PAY PERIOD ')
	DO 477 I=1,6
477	CALL RWORD(ASCI(I),ENDF)
	CALL FSOUT(ASCI)
	CALL FSOUT(CRLF2)
	CALL FSOUT('JOB NUMBER')
	ENCODE(61,261,ASCI) BIT1
	ASCI(13)=ASCI(13).AND.LBYTE
	CALL SOUTCR(ASCI)
	ASSIGN 480 TO TZERO
	GO TO 1100
480	DO 481 I=1,6
481	CALL RWORD(WORD(I),ENDF)
	IF(SCOMND.EQ.'S1'.AND.WORD(6).EQ.0) GO TO 480
	CPU=WORD(2)
	CONS=WORD(3)
	PAGE=WORD(4)
	OTHER=WORD(5)/100.
	CHARGE=WORD(6)/100.
	IF(WORD(1).LT.0) GO TO 482
	NACCT=WORD(1)
	ASSIGN 483 TO ACTNO
	GO TO 1600

482	USER=-WORD(1)
	ASSIGN 483 TO NAME
	GO TO 1500
483	ASSIGN 480 TO OUT
	GO TO 1000
C TOTAL
485	ASSIGN 486 TO OUT
	GO TO 282
486	IF(SCOMND.EQ.'S2') GO TO 240
	CALL FSOUT(CRLF2)
	CALL SOUTCR('APPROVED BY: ..............................')
	CALL SOUTCR('                      (SIGNATURE)')
	SCOMND='S2'
	GO TO 476


C ADJUST CHARGES PROGRAM
599	CALL PSOUTR(' *OK*')
	GO TO 501
500	CALL PSOUTR('DJUST CHARGES')
	IF(.NOT.REPORT.AND.NENTRY.GT.0) GO TO 203
597	ASSIGN 598 TO CNTLE
	CALL ION(CNTLE)
598	CALL PSOUTR(ZERO)
501	TYPE 504
504	FORMAT(' :ADJUST'/)
	NACCT1=NBIT2
	WORD(5)=NBIT2
	USER=-1
	NACCT2=NBIT2
	CONS=0
	CPU=0
	PAGE=0
	FILFIX=1.
	DELETE=.FALSE.
	REASON(1)=0
	DOLLAR=0.
	INSERT=.FALSE.
	COMND=0
502	TYPE 503
503	FORMAT(2H+:$)
	CALL RCHAR(COMND3)
	IF (COMND3.EQ.'I') GO TO 507
	COMND=COMND+1
	IF (COMND3.EQ.'E') GO TO 505
	IF (COMND3.EQ.'G') GO TO 200
	IF (COMND3.EQ.'D') GO TO 506
	IF (COMND3.EQ.'A') GO TO 510
	IF (COMND3.EQ.'U') GO TO 520
	IF (COMND3.EQ.'N') GO TO 530
	IF (COMND3.EQ.'C') GO TO 540
	IF (COMND3.EQ.'F') GO TO 550
	IF (COMND3.EQ.'$') GO TO 560
	IF (COMND3.EQ.'R') GO TO 570
	IF (COMND3.EQ.'P') GO TO 580
	IF (COMND3.EQ.'B') GO TO 600
	TYPE 4

509	COMND=COMND-1
	GO TO 502
505	CALL PSOUTR('XIT')
	GO TO 3

C DELETE,INSERT
506	CALL PSOUTR('ELETE')
	IF(INSERT) GO TO 508
	DELETE=.TRUE.
	GO TO 502
507	CALL PSOUTR('NSERT')
	IF (COMND.NE.0) GO TO 508
	INSERT=.TRUE.
	GO TO 502
508	CALL PSOUTR(' INCONSISTENT COMMAND')
	GO TO 502

C ACCOUNT NUMBER
510	TYPE 511
511	FORMAT('+CCOUNT NUMBER (N,A)= '$)
	CALL RCHAR(NA)
	IF(NA.EQ.'N'.OR.NA.EQ.'A') GO TO 512
	TYPE 4
	GO TO 502
512	TYPE 363
	IF(NA.EQ.'A') GO TO 517
C NUMERIC
515	ACCEPT 366,WORD(5)
	CALL ACCT(-2,0,NACCT1,0,0,0)
516	IF(NACCT1.NE.NBIT2) GO TO 502
	IF(INSERT) GO TO 502
	CALL PSOUTR(' NONEXISTENT ACCOUNT')
	GO TO 509
C ALPHANUMERIC
517	CALL RALPH(WORD(6),NCHAR)
	WORD(5)=-NCHAR
	SIZE=(NCHAR+4)/5
	WORD(1)=SIZE+5
	CALL ACCT(-2,0,NACCT1,0,0,0)
	GO TO 516

C USER ID CODE
520	TYPE 521
521	FORMAT('+SER ID CODE: '$)
	ASSIGN 522 TO DIRERR
	CALL FSTDIR(USER,TYPE,DIRERR)
	IF(INSERT) GO TO 502
	GO TO 523
522	CALL PSOUTR(' USER ID NOT IN DIRECTORY')
	GO TO 509
523	DO 524 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 502
524	CONTINUE
	CALL PSOUTR(' USER NOT IN USER TABLE THIS PAY PERIOD')
	USER=-1
	GO TO 509


C NEW ACCOUNT NUMBER
530	TYPE 531
531	FORMAT('+EW ACCOUNT NUMBER (N,A)= '$)
	IF(INSERT) GO TO 508
	CALL RCHAR(NA)
	IF(NA.EQ.'N'.OR.NA.EQ.'A') GO TO 532
	TYPE 4
	GO TO 502
532	TYPE 363
	IF(NA.EQ.'A') GO TO 533
	ACCEPT 366,NACCT2
	GO TO 502
533	CALL RALPH(ASCI,NCHAR2)
	NACCT2=-1
	GO TO 502

C CONSOLE AND CPU TIME CHANGE
540	TYPE 541
541	FORMAT('+PU TIME = '$)
	FLAG=0
542	CALL RALPH(ASCI,NCHAR)
	IF(NCHAR.EQ.0) GO TO 538
	N=0
	DO 535 I=1,3
	TEMP=ASCI(I)
	DO 535 J=1,5
	IF((TEMP.AND.LBYTE).NE.COLON) GO TO 536
	N=N+1
	IF(N.EQ.2) GO TO 537
536	TEMP=LSH(TEMP,7)
535	CONTINUE
	GO TO 538
537	TEMP=LSH(TEMP,7)
	IF(J.EQ.5) TEMP=ASCI(I+1)
	IF((TEMP.AND.LBYTE).NE.0) GO TO 539
538	CALL PSOUTR(' INCORRECT FORMAT')
	GO TO 502
539	MINS=1
	IF((ASCI(1).AND.LBYTE).NE.MINUS) GO TO 546
	MINS=-1
	ASCI(1)=(ASCI(1).XOR.MINUS).OR.BIT1
546	TEMP=NCHAR/5
	N=NCHAR-TEMP*5
	TEMP=TEMP+1
	ASCI(TEMP)=ASCI(TEMP).OR.LSH(COLON,-N*7)
	DECODE(15,543,ASCI) HOUR,MIN,SEC
543	FORMAT(3I)
	TEMP=(HOUR*3600+MIN*60+SEC)*MINS
	IF(FLAG.EQ.1) GO TO 547
	CPU=TEMP
544	TYPE 545
545	FORMAT('+ CONSOLE TIME = '$)
	FLAG=1
	GO TO 542
547	CONS=TEMP
	GO TO 502


C FILE PAGE DISCOUNT
550	TYPE 551
551	FORMAT('+ILE PAGE DISCOUNT = '$)
	ACCEPT 552,FILFIX
552	FORMAT(F)
	GO TO 502

C $ TO BE CHARGED
560	TYPE 561
561	FORMAT('+ TO BE CHARGED = '$)
	ACCEPT 552,DOLLAR
	GO TO 502

C REASON FOR CHARGE:
570	TYPE 571
571	FORMAT('+EASON FOR CHARGE: '$)
	CALL RALPH(REASON,NCHAR)
	IF(NCHAR.EQ.0) GO TO 502
	SIZE=NCHAR/5+1
	REASON(9)=SIZE
	TEMP=SIZE*5-NCHAR-1
	IF(TEMP.EQ.0) GO TO 502
C FILL IN SPACES
	J="100
	DO 573 I=1,TEMP
	J=128*J
573	REASON(SIZE)=REASON(SIZE).OR.J
	GO TO 502

C PAGE ADJUSTEMT
580	TYPE 581
581	FORMAT('+AGE ADJUSTMENT = '$)
	ACCEPT 366,PAGE
	GO TO 502


C BEGIN ADJUSTMENT
600	CALL PSOUTR('EGIN')
	IF(INSERT) GO TO 610
	IF(NACCT1.NE.NBIT2.AND.USER.NE.-1) GO TO 605
	IF(USER.NE.-1) GO TO 602
	IF(NACCT1.EQ.NBIT2) GO TO 601
	IF(NACCT1.GE.0) GO TO 620
601	CALL PSOUTR(' ILLEGAL ACCOUNT-USER COMBINATION')
	GO TO 501
602	IF(TYPE.GE.0) GO TO 601
	IF(NACCT2.EQ.NBIT2) GO TO 603
	CALL PSOUTR(' OLD ACCOUNT NOT GIVEN')
	GO TO 501
603	IF(DELETE) GO TO 620
	GO TO 601
605	CALL ACCT(-1,USER,NACCT1,0,0,0)
	IF(NACCT1.NE.NBIT2) GO TO 620
	CALL PSOUTR(' ACCOUNT-USER COMBINATION NONEXISTENT')
	GO TO 501


C INSERT
610	IF(REASON(1).NE.0.OR.DOLLAR.EQ.0.) GO TO 613
	CALL PSOUTR(' REASON FOR $ TO BE CHARGED NOT GIVEN')
	GO TO 501
613	IF(WORD(5).NE.NBIT2.AND.USER.NE.-1) GO TO 612
	IF(USER.NE.-1) GO TO 611
	CALL PSOUTR(' USER ID MISSING')
	GO TO 501
611	IF(TYPE.LT.0) GO TO 615
	CALL PSOUTR(' NUMERIC ACCOUNT MISSING')
	GO TO 501
612	IF((WORD(5).XOR.TYPE).GE.0) GO TO 616
	CALL PSOUTR(' ACCOUNT NO. AND USER ID OF MIXED TYPES')
	GO TO 501
615	IF(WORD(5).NE.NBIT2) GO TO 616
	WORD(5)=-4
	WORD(6)=STAR4
	WORD(1)=6
616	TEMP=NID
	CALL ACCT(0,USER,NACCT1,0,0,0)
	IF(TEMP.EQ.NID) GO TO 620
	CALL CATEG(ID(NID))
	CALL FDIRST(USER,LOG(NID+1),NCHAR)
	LOG(NID+1)=LOG(NID+1).AND.SIXMSK


C ADJUSTMENTS
620	IF(.NOT.DELETE) GO TO 700

C DELETE
	NACCT=NACCT1
	IF(USER.EQ.-1) GO TO 650
	DO 621 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 623
621	CONTINUE
622	CALL PSOUTR(' OPERATION ABORTED')
	GO TO 501
623	IF(NACCT1.EQ.NBIT2) GO TO 640
	ASSIGN 624 TO LOCENT
	ASSIGN 622 TO ENTNF
	GO TO 1700
624	ACNT(IAC)=NBIT2
	EMPTY=EMPTY+1
	IF(IAC2.EQ.0) GO TO 626
	ACNT(IAC2+1)=(ACNT(IAC+1).AND.R7).OR.(ACNT(IAC2+1).AND.L7)
	1            .OR.(ACNT(IAC+1).AND.BIT0)
625	IF((ACNT(IAC+1).AND.L7).EQ.0) GO TO 630
	ASSIGN 630 TO SPAD
	GO TO 1800
626	IF(ACNT(IAC+1).LT.0) GO TO 627
	ID(I)=(ID(I).AND.R7).OR.((ACNT(IAC+1).AND.R7)*BIT17).OR.
	1     (ID(I).AND.BIT0)
	GO TO 625

627	IF((ACNT(IAC+1).AND.L7).EQ.0) GO TO 628
	ASSIGN 628 TO SPAD
	GO TO 1800
628	DO 629 J=I,NID
	LOG(J+1)=LOG(J+2)
629	ID(J)=ID(J+1)
	NID=NID-1
	I=I-1
630	IF(.NOT.DELETE) GO TO 715
	IF(NACCT1.EQ.NBIT2) GO TO 599
	IF(USER.EQ.-1) GO TO 651
	GO TO 599
C DELETE ALPHANUMERIC USER
640	IAC=(ID(I).AND.L7)/BIT17
641	IAC=IAC.AND.R7
	NACCT=ACNT(IAC).AND.ACTMSK
	ACNT(IAC)=NBIT2
	EMPTY=EMPTY+1
	IF((ACNT(IAC+1).AND.L7).EQ.0) GO TO 642
	ASSIGN 642 TO SPAD
	GO TO 1800
642	IAC=ACNT(IAC+1)
	IF(IAC.GT.0) GO TO 641
	GO TO 628
C DELETE ACCOUNT
650	I=0
651	I=I+1
	IF(ID(I).EQ.0) GO TO 655
	ASSIGN 624 TO LOCENT
	ASSIGN 651 TO ENTNF
	GO TO 1700
655	IF(NACCT1.LT.0) GO TO 599
	DO 656 I=1,NNACT
	IF(NACCT1.EQ.ACTNM(I)) GO TO 657
656	CONTINUE
	GO TO 622
657	DO 658 J=I,NNACT
658	ACTNM(J)=ACTNM(J+1)
	NNACT=NNACT-1
	GO TO 599

C NEW ACCOUNT
700	IF(NACCT2.EQ.NBIT2) GO TO 750
	WORD(5)=NACCT2
	IF(NACCT2.GE.0) GO TO 705
	WORD(5)=-NCHAR2
	SIZE=(NCHAR2+4)/5
	WORD(1)=SIZE+5
	DO 701 I=1,SIZE
701	WORD(5+I)=ASCI(I)
705	IF(USER.EQ.-1) GO TO 720
	DO 706 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 707

706	CONTINUE
	GO TO 622
707	NACCT=NACCT1
	ASSIGN 708 TO LOCENT
	ASSIGN 622 TO ENTNF
	GO TO 1700
708	AC1=IAC
	TEMP=ID(I).AND.R7
	CALL ACCT(0,TEMP,NACCT2,0,0,0)
	NACCT=NACCT2
	ASSIGN 710 TO LOCENT
	ASSIGN 622 TO ENTNF
	GO TO 1700
710	DO 711 J=2,4
711	ACNT(IAC+J)=ACNT(IAC+J)+ACNT(AC1+J)
	NACCT=NACCT1
	GO TO 623
715	IF(USER.EQ.-1) GO TO 721
	IF(NACCT1.LT.0) GO TO 599
	DO 716 IA=2,IACF,5
	IF((ACNT(IA).AND.ACTMSK).EQ.NACCT1) GO TO 599
716	CONTINUE
	GO TO 655
C ALL USERS
720	I=0
721	I=I+1
	IF(ID(I).EQ.0) GO TO 655
	NACCT=NACCT1
	ASSIGN 722 TO LOCENT
	ASSIGN 721 TO ENTNF
	GO TO 1700
722	GO TO 708

C SPECIAL CHARGES
750	IF(REASON(1).EQ.0) GO TO 770
	IF(USER.NE.-1) GO TO 751
	CALL PSOUTR(' USER ID MISSING')
	GO TO 501
751	DO 752 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 754
752	CONTINUE
	GO TO 622
754	NACCT=NACCT1
	ASSIGN 757 TO CLASS
	GO TO 1200
757	IF((NACCT.AND.BIT12).NE.0) GO TO 753
	CALL PSOUTR(' NO SPECIAL CHARGES FOR NONCHARGEABLE ACCOUNTS')
	GO TO 501
753	NACCT=NACCT1
	ASSIGN 755 TO LOCENT
	ASSIGN 622 TO ENTNF
	GO TO 1700

755	ACNT(IAC+1)=ACNT(IAC+1).OR.BIT17
	S=SP(1)
	K=REASON(9)+3
	SP(1)=SP(1)+K
	SP(S)=K.OR.(USER*BIT17)
	SP(S+1)=NACCT1
	SP(S+2)=DOLLAR*100.
	DO 756 I=1,REASON(9)
756	SP(S+I+2)=REASON(I)
	GO TO 599

C CONS,CPU & PAGE CHARGES
C FILE CHARGE DISCOUNT
C DOLLARS TO BE CHARGED
770	NACCT=NACCT1
	ASSIGN 776 TO CLASS
	GO TO 1200
776	ACODE=NACCT.AND.BIT12
	IF(ACODE.EQ.BIT1) GO TO 778
	IF(ACODE.EQ.BIT2) GO TO 777
	IF(DOLLAR.EQ.0.) GO TO 778
	CALL PSOUTR(' NO DOLLAR CHARGES FOR NONCHARGEABLE ACCOUNTS')
	GO TO 501
777	RCPU=GRCPU
	RCON=GRCON
	GO TO 779
778	RCPU=CRCPU
	RCON=CRCON
779	IF(USER.EQ.-1) GO TO 785
	DO 771 I=1,NID
	IF((ID(I).AND.R7).EQ.USER) GO TO 772
771	CONTINUE
	GO TO 622
772	NACCT=NACCT1
	ASSIGN 775 TO LOCENT
	ASSIGN 622 TO ENTNF
	GO TO 1700
775	TCPU=ACNT(IAC+2)
	TCONS=ACNT(IAC+3)
780	DCPU=TCPU/60.*RCPU
	DCON=TCONS/3600.*RCON
	CHARGE=DCPU+DCON
	CPU2=CPU
	CON2=CONS
	IF(CHARGE.EQ.0.) GO TO 783
	CPU2=DCPU/CHARGE*DOLLAR/RCPU*60.+CPU2
	CON2=DCON/CHARGE*DOLLAR/RCON*3600.+CON2
783	IF((CPU2+TCPU).GE.0..AND.(CON2+TCONS).GE.0.) GO TO 782
	CALL PSOUTR(' ADJUSTMENT RESULTS IN NEGATIVE CPU OR CONSOLE
	1 TIME')
	GO TO 501

782	IF(USER.EQ.-1) GO TO 790
	ACNT(IAC+2)=IFIXR(TCPU+CPU2)
	ACNT(IAC+3)=IFIXR(TCONS+CON2)
	ACNT(IAC+4)=IFIXR((ACNT(IAC+4)+PAGE)*FILFIX)
	GO TO 599
C ALL USERS
785	NACCT=NACCT1
	TCPU=0
	TCONS=0
	TPAGE=0
	DO 786 I=1,NID
	ASSIGN 787 TO LOCENT
	ASSIGN 786 TO ENTNF
	GO TO 1700
787	TCPU=TCPU+ACNT(IAC+2)
	TCONS=TCONS+ACNT(IAC+3)
	TPAGE=TPAGE+ACNT(IAC+4)
786	CONTINUE
	GO TO 780
790	DO 791 I=1,NID
	ASSIGN 792 TO LOCENT
	ASSIGN 791 TO ENTNF
	GO TO 1700
792	IF(TCPU.EQ.0) GO TO 793
	ACNT(IAC+2)=IFIXR(ACNT(IAC+2)*(1.+CPU2/TCPU))
793	IF(TCONS.EQ.0) GO TO 794
	ACNT(IAC+3)=IFIXR(ACNT(IAC+3)*(1.+CON2/TCONS))
794	XTEM=ACNT(IAC+4)*FILFIX
	IF(TPAGE.EQ.0) GO TO 795
	XTEM=ACNT(IAC+4)*(1.+(PAGE+0.)/TPAGE)*FILFIX
795	ACNT(IAC+4)=IFIXR(XTEM)
791	CONTINUE
	GO TO 599



C (TZERO) - ZERO TOTALS
1100	TCPU=0
	TCONS=0
	TPAGE=0
	TOTHER=0.
	TCHARG=0.
	GO TO TZERO

C (OUT) - OUTPUT CHARGES
1010	CHARGE=0.
	IF(ACODE.EQ.BIT1) GO TO 1011
	IF(ACODE.EQ.0) GO TO 1000
	CHARGE=CHARG(GRCPU,GRCON,GRCHAR)
	GO TO 1000
1011	CHARGE=CHARG(CRCPU,CRCON,CRCHAR)


1000	CHARGE=IFIXR(CHARGE*100.)/100.
	TCPU=TCPU+CPU
	TCONS=TCONS+CONS
	TPAGE=TPAGE+PAGE
	TOTHER=TOTHER+OTHER
	TCHARG=TCHARG+CHARGE
	IF(SUMARY) GO TO OUT

1020	TIME=CPU
	IND=1
	GO TO 1005
1001	ENCODE(10,1002,ASCI) HOURS
1002	FORMAT(F10.2)
	ASCI(3)=0
	CALL FSOUT(ASCI)
	TIME=CONS
	IND=2
	GO TO 1005
1003	ENCODE (10,1002,ASCI) HOURS
	ASCI(3)=0
	CALL FSOUT('    ')
	CALL FSOUT(ASCI)
	ENCODE(10,1004,ASCI) PAGE
1004	FORMAT(I10)
	ASCI(3)=0
	CALL FSOUT('    ')
	CALL SOUTCR(ASCI)
	GO TO OUT
1005	HOURS=TIME/3600.0
	GO TO (1001,1003),IND

C (CLASS) - CLASSIFY ACCOUNT NUMBERS BY CHARGE CLASS
C GOVERNMENT RATE(01),COMMERCIAL RATE(10),FREE(00)
1200	IF((NACCT.AND.BIT12).NE.0) GO TO 1221
	IF(NACCT.LT.0) GO TO 1230
C NUMERIC ACCOUNTS
	TEMP=NACCT
C NON-CHARGEABLE ACCOUNTS
	IF(TEMP.LE.999) GO TO 1221
	IF(TEMP.GE.220100.AND.TEMP.LE.220199) GO TO 1221
	GO TO 1225
C COMMERCIAL RATE
1226	NACCT=TEMP.OR.BIT1
	GO TO 1221
C GOVERNMENT RATE
1225	NACCT=TEMP.OR.BIT2
1221	GO TO CLASS
C ALPHANUMERIC ACCOUNTS
C	ALL ARE NON-CHARGEABLE
1230	GO TO 1221


C (NAME) - OUTPUT USER NAME
1500	CALL FDIRST(USER,ASCI,NCHAR)
	IF(NCHAR.GT.0) GO TO 1511
	ENCODE(41,1512,ASCI) USER
1512	FORMAT('*USER ID CODE ',O12,' NOT IN USE    ')
	ASCI(9)=ASCI(9).AND.LBYTE
	CALL FSOUT(ASCI)
	GO TO 1504
1511	CALL FSOUT(ASCI)
1510	IF (NCHAR-10) 1501,1505,1504
1501	IF (NCHAR.GT.5) GO TO 1502
	CALL FSOUT('     ')
	IF (NCHAR.EQ.5) GO TO 1505
1502	TEMP=5-NCHAR+NCHAR/5*5
	DO 1503 J=1,TEMP
1503	CALL FSOUT(BIT1)
	GO TO 1505
1504	CALL FSOUT(CRLF)
	CALL FSOUT('          ')
1505	GO TO NAME

C (ACTNO) - OUTPUT ACCOUNT NUMBER
1600	IF(NACCT.LT.0) GO TO 1602
C NUMERIC
	NACCT=NACCT.AND.ACTMSK
	ENCODE(10,1601,ASCI) NACCT
1601	FORMAT(I9,1X)
	ASCI(3)=0
	CALL FSOUT(ASCI)
	GO TO ACTNO
C ALPHANUMERIC
1602	IA=(NACCT.XOR.BIT0).AND.ACTMSK
	NCHAR=(ACTAL(IA).AND.L7)/BIT17
	CALL FSOUT(ACTAL(IA+1))
	ASSIGN 1605 TO NAME
	GO TO 1510
1605	GO TO ACTNO

C (LOCENT) - LOCATE ENTRY
C (ENTNF) - ENTRY NOT FOUND
1700	IAC2=0
	NACCT=NACCT.AND.ACTMSK
	IAC=(ID(I).AND.L7)/BIT17
1701	TEM=ACNT(IAC).AND.ACTMSK
	IF(TEM.EQ.NACCT) GO TO LOCENT
	IF(ACNT(IAC+1).LT.0) GO TO ENTNF
	IAC2=IAC
	IAC=ACNT(IAC+1).AND.R7
	GO TO 1701


C (SPAD) - SPECIAL CHARGES - ADDED OR DELETED
1800	K=0
	S=2
1801	S=S+K
	IF(S.EQ.SP(1)) GO TO SPAD
	IF(SP(S).LT.0) GO TO 1805
	IF(USER.EQ.-1) GO TO 1802
	USE=(ID(I).AND.R7)*BIT17
	IF(USE.NE.(SP(S).AND.L7)) GO TO 1805
1802	IF(NACCT1.EQ.NBIT2) GO TO 1803
	TEM=SP(S+1).AND.ACTMSK
	IF(NACCT.NE.TEM) GO TO 1805
1803	IF(COMND3.EQ.0) GO TO 1804
	SP(S)=SP(S).OR.BIT0
	GO TO 1805
1804	IF(ITEM) GO TO 1810
	OTHER=OTHER+SP(S+2)/100.
	SPL=.TRUE.
1805	K=SP(S).AND.R7
	GO TO 1801
C ITEMIZE
1810	IF(NACCT1.EQ.NBIT2) GO TO 1811
	USER=(SP(S).AND.L7)/BIT17
	ASSIGN 1815 TO NAME
	GO TO 1500
1815	USER=-1
	GO TO 1812
1811	NACCT=SP(S+1)
	ASSIGN 1812 TO ACTNO
	GO TO 1600
1812	CALL FSOUT(BIT1)
	CALL FSOUT(SP(S+3))
	SIZE=(SP(S).AND.R7)-3
	TEMP=8-SIZE
	IF(TEMP.EQ.0) GO TO 1816
	DO 1813 J=1,TEMP
1813	ASCI(J)='     '
	ASCI(TEMP+1)=0
	CALL FSOUT(ASCI)
1816	OTHER=SP(S+2)/100.
	ENCODE(10,1814,ASCI) OTHER
1814	FORMAT(F9.2,1X)
	ASCI(3)=0
	CALL SOUTCR(ASCI)
	GO TO 1805
	END
C	DATA

	BLOCK DATA
	IMPLICIT INTEGER (A-Z)
	COMMON /BDATA/BIT0,BIT1,BIT2,BIT12,BIT17,L7,R7,ACTMSK,NBIT2
	COMMON /OUT/ZERO,CRLF,CRLF2,FORMF
	DATA BIT0,BIT1,BIT2/"400000000000,"200000000000,"100000000000/
	DATA BIT12,BIT17/"300000000000,"1000000/
	DATA L7,R7,ACTMSK/"377777000000,"777777,"477777777777/
	DATA CRLF,CRLF2,ZERO/"64240000000,"64241505000,0/
	DATA FORMF/"60000000000/
	DATA NBIT2/"677777777777/
	END
C	RFACT
C	SUBROUTINE THAT READS IN BINARY FACT FILES

	SUBROUTINE RFACT(N)

C	N=-2; ZERO HIST(I,J)
C	N=-1; OUTPUT HISTOGRAM
C	N=0 ; READ FACT FILE
C	N=1 ; PERFORM ACCOUNTING FOR JOBS NOT LOGGED OUT

	IMPLICIT INTEGER (A-Z)
	REAL XTEM,SHIFDF,DISCNT
	LOGICAL BOUTF,ACTINF
	COMMON /TIME/STRTDT,ENDDAY
	COMMON /QBOUT/BOUTF,ACTINF
	COMMON /ENTRY/WORD(64),NID,NENTRY,NNACT,NFLCK,NCRASH,UPTIME
	COMMON /FACT/LOG(1001),ASCI(15)
	COMMON /BDATA/BIT0,BIT1,BIT2,BIT12,BIT17,L7,R7
	COMMON /SHIFDF/SHIFDF(21)
	DIMENSION HIST(40,20)
	DATA JBMSK/"777000000/
	DATA T1,N1,M1,T2,N2,M2/5,3,9,5,3,5/

C CONSTM(A,B) - COMPUTES THE CONSOLE TIME IN MSEC BETWEEN DATE A
C	        AND DATE B ; A & B ARE IN TENEX FORMAT
	CONSTM(A,B)=(((B.AND.L7)-(A.AND.L7))/BIT17*86400+
	1           (B.AND.R7)-(A.AND.R7))*1000

	IF (N) 400,40,200
40	TYPE 41
41	FORMAT ('+EAD FACT FILE: '$)
	ASSIGN 45 TO EOF
	CALL FOPENF(1)
	IF(ACTINF) GO TO 1
	CALL SOUTCR('   INT. DATE       LOCAL TIME         COMMENT')
	GO TO 2
1	CALL FSOUT('  USER      DIR   ACCOUNT       DATE         ')
	CALL SOUTCR('CPU    CONSOLE')
2	WORDNO=-1
44	IF(WORD(3).GT.0) LASTDT=WORD(3)
46	IF(WORD(3).LE.0) WORD(3)=LASTDT
	CALL RWORD(WORD(1),EOF)
	WORDNO=WORDNO+1
	SIZE=WORD(1).AND."77
	IF(SIZE.NE.0) GO TO 42
	SIZE=1
	GO TO 10
42	CODE=WORD(1).AND."777000000000
	IF(CODE.EQ."501000000000.OR.CODE.EQ."502000000000
	1  .OR.CODE.EQ."601000000000) GO TO 30
	IF(CODE.EQ."161000000000.OR.CODE.EQ."162000000000
	1 .OR.CODE.EQ."163000000000) GO TO 38
	COD=WORD(1).AND."777000000077
	IF(COD.NE."141000000005.AND.COD.NE."142000000003.AND.
	4  COD.NE."141000000006.AND.
	1  COD.NE."143000000003.AND.COD.NE."201000000005.AND.
	2  COD.NE."740000000001.AND.COD.NE."741000000003.AND.
	3  COD.NE."540000000001.AND.CODE.NE."750000000000) GO TO 10
	IF (SIZE.EQ.1) GO TO 47
38	DO 43 I=2,SIZE
	CALL RWORD(WORD(I),EOF)
43	WORDNO=WORDNO+1
	IF (WORD(3).NE.-1.AND.(STRTDT.GT.WORD(3).OR.ENDDAY.LT.WORD(3)))
	1  GO TO 46
	WORD(2) = WORD(2).AND.R7
	IF(CODE.EQ."161000000000.OR.CODE.EQ."162000000000
	1 .OR.CODE.EQ."163000000000) GO TO 46
47	IF (CODE.EQ."750000000000) GO TO 46
	NOWDAT=WORD(3)
	IF(WORD(3).GT.0) GO TO 470
	WORD(3)=0
	FRSTDT=0
	NOWDAT=LASTDT
	GO TO 471
470	IF(FRSTDT.EQ.0) FRSTDT=WORD(3)
471	ENCODE(15,48,ASCI) NOWDAT
48	FORMAT(2X,O12,1X)
	ASCI(4)=0
	DATE=NOWDAT
	IF(UPTIME.GE.0.OR.SIZE.LT.3) GO TO 49
	OLDATE=NOWDAT
	UPTIME=0
49	IF (CODE.EQ."501000000000) GO TO 50
	IF (CODE.EQ."141000000000) GO TO 70
	IF (CODE.EQ."502000000000) GO TO 80
	IF (CODE.EQ."201000000000) GO TO 90
	IF (CODE.EQ."601000000000) GO TO 105
	IF (CODE.EQ."540000000000) GO TO 100
	IF (CODE.EQ."740000000000) GO TO 110
	IF (CODE.EQ."741000000000) GO TO 120
	GO TO 44
45	CALL SOUTCR('END OF FILE')
	RETURN
C CHECK 501,502 AND 601 ENTRIES
30	IF(SIZE.LT.5.OR.SIZE.GT.13) GO TO 10
	DO 39 I=2,5
	CALL RWORD(WORD(I),EOF)
39	WORDNO=WORDNO+1
	WORD(2) = WORD(2).AND.R7
	IF(WORD(5).LT.0) GO TO 31
	IF (WORD(3).NE.-1.AND.(STRTDT.GT.WORD(3).OR.ENDDAY.LT.WORD(3)))
	1  GO TO 46
	IF(SIZE.EQ.5) GO TO 47
	GO TO 35
31	IF (WORD(5) .LT. -5*(SIZE-5)) GO TO 35
	TEMP=(4-WORD(5))/5+5
	IF(TEMP.NE.SIZE.AND.TEMP+1.NE.SIZE) GO TO 33
	DO 32 I=1,SIZE-5
	CALL RWORD(WORD(I+5),EOF)
32	WORDNO=WORDNO+1
	IF (WORD(3).NE.-1.AND.(STRTDT.GT.WORD(3).OR.ENDDAY.LT.WORD(3)))
	1  GO TO 46
	IF(TEMP.EQ.SIZE) GO TO 340
	IF(WORD(SIZE).NE.0) GO TO 35
	SIZE=SIZE-1
	WORD(1)=WORD(1).AND."777777777700.OR.SIZE
	GO TO 340
33	IF (SIZE.NE.13) GO TO 35
	DO 34 I=1,SIZE-5
	CALL RWORD(WORD(I+5),EOF)
34	WORDNO=WORDNO+1
	IF (WORD(3).NE.-1.AND.(STRTDT.GT.WORD(3).OR.ENDDAY.LT.WORD(3)))
	1 GO TO 46
	SIZE=TEMP
	WORD(1)=WORD(1).AND."777777777700.OR.SIZE
340	SIZETP=-WORD(5)-(-WORD(5)/5*5)
	IF (SIZETP.EQ.1) WORD(SIZE)=WORD(SIZE).AND."774000000000
	IF (SIZETP.EQ.2) WORD(SIZE)=WORD(SIZE).AND."777760000000
	IF (SIZETP.EQ.3) WORD(SIZE)=WORD(SIZE).AND."777777700000
	IF (SIZETP.EQ.4) WORD(SIZE)=WORD(SIZE).AND."777777777400
	GO TO 47
35	NERR=5
	GO TO 11
C FACT FILE ERROR
10	NERR=1
11	WORDNO=WORDNO-NERR
	DO 13 I=1,NERR
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL FSOUT('FACT FILE ERROR')
	WORDNO=WORDNO+1
	ENCODE(20,12,WORD(6)) WORDNO,WORD(I)
12	FORMAT(2X,O5,O13)
	WORD(10)=0
13	CALL SOUTCR(WORD(6))
	GO TO 46


C LOGIN
50	JOBN=WORD(1).AND.JBMSK
	ILG=1
51	IF (LOG(ILG).EQ.-2) GO TO 52
	IF ((LOG(ILG).AND.L7).EQ.JOBN) GO TO 55
	ILG=ILG+5
	GO TO 51
C CORRECT LOGIN
52	DO 53 JLG=1,ILG,5
	IF (LOG(JLG).EQ.-1) GO TO 54
53	CONTINUE
	LOG(ILG+5)=-2
60	JLG=ILG
54	LOG(JLG)=JOBN.OR.WORD(2)
	CALL ACCT(0,WORD(2),NACCT,0,0,0)
	LOG(JLG+1)=NACCT
	LOG(JLG+2)=WORD(3)
	LOG(JLG+3)=-1
	LOG(JLG+4)=0
	GO TO 44
C ALREADY LOGGED IN
55	USER=LOG(ILG).AND.R7
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	IF (USER.NE.WORD(2)) GO TO 59
	CALL SOUTCR('ALREADY LOGGED IN')
	GO TO 62
59	CALL SOUTCR('ALREADY LOGGED IN UNDER DIFFERENT ID')
62	CPUT=0
	CONST=0
58	ASSIGN 60 TO ACOUNT
	GO TO 1000

C LOGOUT
70	JOBN=WORD(1).AND.JBMSK
	ILG=1
71	IF (LOG(ILG).EQ.-2) GO TO 75
	IF ((LOG(ILG).AND.L7).EQ.JOBN) GO TO 72
	ILG=ILG+5
	GO TO 71
72	USER=LOG(ILG).AND.R7
	IF (USER.EQ.WORD(2)) GO TO 74
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('LOGOUT ID CODE DIFFERENT FROM LOGIN')
74	CPUT=-1
	IF(LOG(ILG+4).GE.0 .AND. WORD(4).GE.LOG(ILG+4))
     &	   CPUT=WORD(4)-LOG(ILG+4)
	IF(LOG(ILG+2).LE.0) LOG(ILG+2)=FRSTDT
	CONST=-1
	IF(LOG(ILG+2).GT.0 .AND. WORD(3).GT.LOG(ILG+2))
     &	   CONST=CONSTM(LOG(ILG+2),WORD(3))
	IF(WORD(5).LT.CONST) CONST=WORD(5)
	IF(CPUT.GT.CONST) CPUT=-1
	ASSIGN 73 TO ACOUNT
	GO TO 1000
73	LOG(ILG)=-1
	IF (LOG(ILG+5).EQ.-2) LOG(ILG)=-2
	GO TO 300
75	LOG(ILG+5)=-2
	JLG=ILG
	LOG(JLG)=JOBN.OR.WORD(2)
	TEMP1=WORD(4)
	TEMP2=WORD(5)
	WORD(4)=0
	WORD(5)=0
	CALL ACCT(0,WORD(2),NACCT,0,0,0)
	WORD(4)=TEMP1
	WORD(5)=TEMP2
	USER=LOG(JLG).AND.R7
	LOG(JLG+1)=NACCT
	LOG(JLG+2)=FRSTDT
	LOG(JLG+3)=-1
	LOG(JLG+4)=0
  	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('LOGOUT WITHOUT LOGIN')
	GO TO 74

C ACCOUNT NUMBER CHANGE
80	JOBN=WORD(1).AND.JBMSK
	ILG=1
81	IF (LOG(ILG).EQ.-2) GO TO 85
	IF ((LOG(ILG).AND.L7).EQ.JOBN) GO TO 82
	ILG=ILG+5
	GO TO 81
82	USER=LOG(ILG).AND.R7
	IF (USER.EQ.WORD(2)) GO TO 84
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('ACCT NO. CHANGE WITH DIFFERENT ID CODE')
84	CPUT=-1
	IF(LOG(ILG+4).GE.0 .AND. WORD(4).GE.LOG(ILG+4))
     &	   CPUT=WORD(4)-LOG(ILG+4)
	IF(LOG(ILG+2).LE.0) LOG(ILG+2)=FRSTDT
	CONST=-1
	IF(LOG(ILG+2).GT.0 .AND. WORD(3).GT.LOG(ILG+2))
     &	   CONST=CONSTM(LOG(ILG+2),WORD(3))
	IF(CPUT.GT.CONST) CPUT=-1
	ASSIGN 60 TO ACOUNT
	GO TO 1000
85	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('ACCT NO. CHANGE WITHOUT LOGIN')
	GO TO 52

C CHKPNT
90	JOBN=WORD(1).AND.JBMSK
	IF (JOBN.NE.0) GO TO 93
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('START CHECKPOINT')
93	ILG=1
91	IF (LOG(ILG).EQ.-2) GO TO 95
	IF ((LOG(ILG).AND.L7).EQ.JOBN) GO TO 92
	ILG=ILG+5
	GO TO 91
92	IF ((LOG(ILG).AND.R7).EQ.WORD(2)) GO TO 94
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('CHKPNT WITH DIFFERENT ID CODE')
94	CPUT=-1
	IF(LOG(ILG+4).GE.0 .AND. WORD(4).GE.LOG(ILG+4))
     &	   CPUT=WORD(4)-LOG(ILG+4)
	IF(LOG(ILG+2).LE.0) LOG(ILG+2)=FRSTDT
	CONST=-1
	IF(LOG(ILG+2).GT.0 .AND. WORD(3).GT.LOG(ILG+2))
     &	   CONST=CONSTM(LOG(ILG+2),WORD(3))
	IF(CPUT.GT.CONST) CPUT=-1
	LOG(ILG+2)=WORD(3)
	LOG(ILG+3)=WORD(3)
	LOG(ILG+4)=WORD(4)
	USER=LOG(ILG).AND.R7
	ASSIGN 44 TO ACOUNT
	GO TO 1000
95	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('CHKPNT FOR JOB NOT LOGGED IN')
	LOG(ILG+5)=-2
	JLG=ILG
	LOG(JLG)=JOBN.OR.WORD(2)
	TEMP1=WORD(4)
	WORD(4)=0
	CALL ACCT(0, WORD(2), NACCT, 0, 0, 0)
	LOG(JLG+1)=NACCT
	LOG(JLG+2)=FRSTDT
	LOG(JLG+3)=-1
	LOG(JLG+4)=0
	WORD(4)=TEMP1
	CONST=0
	IF(LOG(JLG+2).GT.0 .AND. WORD(3).GT.LOG(JLG+2))
     &	   CONST=CONSTM(LOG(JLG+2),WORD(3))
	IF(CONST.GT.3*86400*1000/2) LOG(JLG+2)=WORD(3)
	GO TO 92

C START OF DISC UTILIZATION STATISTICS
100	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('START DISC UTILIZATION STATISTICS')
	NFLCK=NFLCK+1
	GO TO 44

C DISK UTILIZATION
105	CALL ACCT(0,WORD(2),NACCT,0,0,0)
	CALL ACCT(1,WORD(2),NACCT,0,0,WORD(4))
	GO TO 44


C SYSTEM RESTARTED FROM SCRATCH
110	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('SYSTEM RESTARTED')
	IF (LASTDT.GT.STRTDT.AND.LASTDT.LT.ENDDAY) NCRASH=NCRASH+1
	ILG=-4
112	ILG=ILG+5
	IF (LOG(ILG).EQ.-2) GO TO 113
	IF (LOG(ILG).EQ.-1) GO TO 112
	CPUT=0
	IF(LOG(ILG+2).LE.0) LOG(ILG+2)=FRSTDT
	CONST=-1
	IF(LOG(ILG+2).GT.0 .AND. LASTDT.GT.LOG(ILG+2))
     &	   CONST=CONSTM(LOG(ILG+2),LASTDT)
	USER=LOG(ILG).AND.R7
	ASSIGN 112 TO ACOUNT
	GO TO 1000
113	LOG(1)=-2
	IF(OLDATE.LE.0) OLDATE=STRTDT
	IF(OLDATE.GT.0 .AND. LASTDT.GT.OLDATE)
     &	   UPTIME=UPTIME+CONSTM(OLDATE,LASTDT)/1000
	OLDATE=LASTDT
	GO TO 46

C TIME SET
120	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('TIME RESET')
	IF(LASTDT.LE.0) LASTDT=WORD(3)
	DAY=(WORD(3).AND.L7)-(LASTDT.AND.L7)
	SEC=(WORD(3).AND.R7)-(LASTDT.AND.R7)
	IF(FRSTDT.NE.WORD(3)) FRSTDT=RSTIME(FRSTDT,DAY,SEC)
	ILG=-4
121	ILG=ILG+5
	IF (LOG(ILG).EQ.-2) GO TO 125
	IF (LOG(ILG).EQ.-1) GO TO 121
	IF(LOG(ILG+2).GT.0) GO TO 122
	LOG(ILG+2)=FRSTDT
	GO TO 123
122	LOG(ILG+2)=RSTIME(LOG(ILG+2),DAY,SEC)
123	IF(LOG(ILG+3).GT.0)
     &	   LOG(ILG+3)=RSTIME(LOG(ILG+3),DAY,SEC)
	GO TO 121
125	IF(OLDATE.LE.0) OLDATE=STRTDT
	IF(OLDATE.GT.0 .AND. LASTDT.GT.OLDATE)
     &	   UPTIME=UPTIME+CONSTM(OLDATE,LASTDT)/1000
	OLDATE=DATE
	GO TO 44


C PERFORM ACCOUNTING FOR JOBS NOT LOGGED OUT
200	ILG=-4
	LASTDT=0
201	ILG=ILG+5
	IF(LOG(ILG).EQ.-2) GO TO 202
	IF(LOG(ILG).EQ.-1) GO TO 201
C THIS SHOULD RESULT IN CPUT=0 AS WELL AS CONST WITH NEW SHFT STUFF
	CPUT=0
	IF(LOG(ILG+2).LE.0) LOG(ILG+2)=FRSTDT
	CONST=-1
	IF(LOG(ILG+2).GT.0 .AND. LASTDT.GE.LOG(ILG+2))
     &	   CONST=CONSTM(LOG(ILG+2),LASTDT)

	USER=LOG(ILG).AND.R7
	DATE=LOG(ILG+3)
	IF(DATE.GT.LASTDT) LASTDT=DATE
	ENCODE (15,48,ASCI) DATE
	ASCI(4)=0
	ASSIGN 201 TO ACOUNT
	GO TO 1000
202	LOG(1)=-2
	IF(OLDATE.LE.0) OLDATE=STRTDT
	IF(OLDATE.GT.0 .AND. LASTDT.GT.OLDATE)
     &	   UPTIME=UPTIME+CONSTM(OLDATE,LASTDT)/1000
	OLDATE=LASTDT
	RETURN

C (ACOUNT) - PERFORM ACCOUNTING AND CHECK FOR NEGATIVE CONST
1000	IF(CONST.GE.0) GO TO 1001
	CONST=0
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('NEGATIVE CONSOLE TIME')
1001	IF(CPUT.GE.0) GO TO 1002
	CPUT=0
	CALL FSOUT(ASCI)
	CALL FODTIM(DATE)
	CALL SOUTCR('NEGATIVE CPU TIME')
1002	CALL CTIME(DATE,HOUR)
	SHMAX=SHIFDF(1)
	DO 10022 ISHFT=1,SHMAX
C THE NEXT TEST IS SPECIAL FOR ELIMINATING 2400 HOURS WRAP AROUND PROBS
	IF (ISHFT.EQ.SHIFDF(1)) GO TO 10021
	IF (HOUR.LT.SHIFDF(4*ISHFT-2)) GO TO 10022
	IF (HOUR.LT.SHIFDF(4*ISHFT+2)) GO TO 10021
10022	CONTINUE
10021	DISCNT=SHIFDF(4*ISHFT-1)
	SHIFDF(4*ISHFT)=SHIFDF(4*ISHFT)+CPUT
	SHIFDF(4*ISHFT+1)=SHIFDF(4*ISHFT+1)+CONST
	CPUT=CPUT*DISCNT
	CONST=CONST*DISCNT
	CALL ACCT(1,USER,LOG(ILG+1),CPUT,CONST,0)
C OUTPUT ACCOUNTING INFORMATION
	IF(.NOT.ACTINF) GO TO 1020
	CALL FDIRST(USER,ASCI(5),NCHAR)
	ASCI(7)=0
	CALL FSOUT(ASCI(5))
	NCHAR=10-NCHAR
	IF(NCHAR.LE.0) GO TO 1011
	DO 1010 I=1,NCHAR
1010	CALL FSOUT(BIT1)
1011	IACCT=LOG(ILG+1)
	IF(IACCT.LT.0) IACCT=-(IACCT.XOR.BIT0)
	ENCODE(40,1012,ASCI(5)) USER,IACCT,DATE
1012	FORMAT(3X,O12,I9,4X,O12)
	ASCI(13)=0
	CALL FSOUT(ASCI(5))
	TIME=IFIXR(CPUT/1000.)
	IND=0
1013	MIN=TIME/60
	SEC=TIME-MIN*60
	HOUR=MIN/60
	MIN=MIN-HOUR*60
	ENCODE(10,1015,ASCI(5)) HOUR,MIN,SEC

1015	FORMAT(I4,':'I2,':'I2)
	ASCI(7)=0
	CALL FSOUT(ASCI(5))
	IF(IND.EQ.1) GO TO 1019
	TIME=IFIXR(CONST/1000.)
	IND=1
	GO TO 1013
1019	CALL SOUTCR(0)
1020	GO TO ACOUNT


C HISTOGRAM ENTRY
300	T=T1*1000
	NN=N1
	M=M1
	TIME=WORD(4)
	IND=1
	GO TO 302
301	TEMP=DIM
	IND=2
	T=T2*60000
	NN=N2
	M=M2
	TIME=WORD(5)
302	TAU=T
	TTL=0
	DO 303 I=1,M
	TTL=TTL+NN*TAU
	IF(TIME.LE.TTL) GO TO 304
303	TAU=TAU*2
	DIM=M*NN+1
	GO TO 307
304	TTL=TTL-NN*TAU
	DO 305 J=1,NN
	TTL=TTL+TAU
	IF(TIME.LE.TTL) GO TO 306
305	CONTINUE
306	DIM=(I-1)*NN+J
307	IF(IND.EQ.1) GO TO 301
	HIST(TEMP,DIM)=HIST(TEMP,DIM)+1
C OUTPUT LOGOUT DATA
	IF(.NOT.BOUTF) GO TO 44
	DO 310 I=2,5
310	CALL WWORD(WORD(I))
	GO TO 44


C OUTPUT HISTOGRAM
400	MAX1=N1*M1+1
	MAX2=N2*M2+1
	IF (N.EQ.-2) GO TO 450
	ENCODE(25,401,ASCI) T1,N1,M1,T2,N2,M2,MAX1,MAX2
401	FORMAT(8(I2,1H,),1X)
	ASCI(6)=0
	CALL FSOUT(ASCI)
	ASCI(2)=0
	DO 402 I=1,MAX1
	DO 402 J=1,MAX2
	ENCODE(5,403,ASCI) HIST(I,J)
403	FORMAT(I4,1H,)
402	CALL FSOUT(ASCI)
	RETURN

C ZERO HIST(I,J)
450	DO 451 I=1,MAX1
	DO 451 J=1,MAX2
451	HIST(I,J)=0
	RETURN
	END
C	ROUTINE TO ADJUST TIMES AFTER A RESET

	INTEGER FUNCTION RSTIME(OTIME,DAY,SEC)

	IMPLICIT INTEGER (A-Z)
	COMMON /BDATA/ BIT0,BIT1,BIT2,BIT12,BIT17,L7,R7

	NSEC=(OTIME.AND.R7)+SEC
	NDAY=DAY
	IF(NSEC.LT.0) GO TO 10
	IF(NSEC.LT.86400) GO TO 20
	NSEC=NSEC-86400
	NDAY=NDAY+BIT17
	GO TO 20
10	NSEC=NSEC+86400
	NDAY=NDAY-BIT17
20	RSTIME=(OTIME.AND.L7)+NDAY+NSEC
	RETURN
	END

C ACCT - A SUBROUTINE THAT PERFORMS THE ACCOUNTING FOR EACH JOB

	SUBROUTINE ACCT(N,USER,NACCT,CPUT,CONST,NPAGE)

C	N=-2; CHECK IF ACCOUNT IS IN ACCOUNT TABLES
C	N=-1; CHECK IF ACCT-USER ENTRY IS IN TABLE
C	     AND IF NOT RETURN  NACCT=NBIT2
C 	N=0 ; GET ACCOUNT NUMBER, INSERT POSSIBLE ENTRY
C	N=1 ; PERFORM ACCOUNTING
C	USER_USER ID CODE
C	NACCT_ACCOUNT NUMBER
C	CPUT_CPU TIME IN MSEC
C	CONST_CONSOLE TIME IN MSEC
C	NPAGE_NUMBER OF FILE BLOCKS IN PAGES

	IMPLICIT INTEGER (A-Z)
	COMMON /ACCOUNT/ID(1001),ACNT(10001),ACTNM(501),ACTAL(3000)
	COMMON /ENTRY/WORD(64),NID,NENTRY,NNACT,NFLCK,NCRASH,UPTIME,
	1	EMPTY
	COMMON /BDATA/BIT0,BIT1,BIT2,BIT12,BIT17,L7,R7,ACTMSK,NBIT2

	IF (N.EQ.1) GO TO 50
C GET ACCOUNT NUMBER
	IF (WORD(5).LT.0) GO TO 13
C NUMERIC ACCOUNTS
	NACCT=WORD(5)
	I=0
10	I=I+1
	IF (ACTNM(I).EQ.-1) GO TO 11
	IF (ACTNM(I).NE.NACCT) GO TO 10
	IF(N.EQ.-2) RETURN
	GO TO 25
11	IF(N.EQ.0) GO TO 12
20	NACCT=NBIT2
	RETURN
12	ACTNM(I)=NACCT
	NNACT=NNACT+1
	ACTNM(I+1)=-1
	GO TO 25
C ALPHANUMERIC ACCOUNTS
13	SIZE=(WORD(1).AND."77) -5
	TEMP=0
	IA=0
14	IA=IA+TEMP+1
	NACCT=IA.OR.BIT0
	IF (ACTAL(IA).EQ.0) GO TO 16
	TEMP=ACTAL(IA).AND.R7
	IF (TEMP.NE.SIZE) GO TO 14
	DO 15 J=1,SIZE
	IF (ACTAL(IA+J).NE.WORD(5+J)) GO TO 14
15	CONTINUE
	IF(N.EQ.-2) RETURN
	GO TO 25
16	IF(N.LT.0) GO TO 20
	TEMP=-WORD(5)
	ACTAL(IA)=SIZE.OR.TEMP*BIT17
	DO 17 J=1,SIZE
17	ACTAL(IA+J)=WORD(5+J)
	ACTAL(IA+SIZE+1)=0

C CHECK USER ID
25	IID=0
26	IID=IID+1
	IF (ID(IID).EQ.0) GO TO 27
	IF ((ID(IID).AND.R7).NE.USER) GO TO 26
	IAC=(ID(IID).AND.L7)/BIT17
29	TEMP=ACNT(IAC).AND.ACTMSK
	IF(TEMP.EQ.NACCT) RETURN
	IF(ACNT(IAC+1).LT.0) GO TO 28
	IAC=ACNT(IAC+1).AND.R7
	GO TO 29
C INSERT ID AND ACCT NO. ENTRY
27	IF(N.LT.0) GO TO 20
	ID(IID+1)=0
	NID=NID+1
28	IF(N.LT.0) GO TO 20
	IF(EMPTY.EQ.0) GO TO 31
	IAC=-3
30	IAC=IAC+5
	IF(IAC.EQ.ACNT(1)) GO TO 31
	IF(ACNT(IAC).NE.NBIT2) GO TO 30
	EMPTY=EMPTY-1
	GO TO 32
31	IAC=ACNT(1)
	ACNT(1)=IAC+5
	NENTRY=NENTRY+1
32	ACNT(IAC)=NACCT
	ACNT(IAC+1)=(ID(IID).AND.L7)/BIT17
	IF (ID(IID).EQ.0) ACNT(IAC+1)=BIT0
	ACNT(IAC+2)=0
	ACNT(IAC+3)=0
	ACNT(IAC+4)=0
	ID(IID)=(BIT17*IAC).OR.USER.OR.(ID(IID).AND.BIT0)
	RETURN

C PERFORM ACCOUNTING
50	IID=0
51	IID=IID+1
	IF (ID(IID).EQ.0) GO TO 55
	IF ((ID(IID).AND.R7).NE.USER) GO TO 51
	IAC=(ID(IID).AND.L7)/BIT17
52	IF (ACNT(IAC).EQ.NACCT) GO TO 53
	IF (ACNT(IAC+1).LT.0) GO TO 55
	IAC=ACNT(IAC+1).AND.R7
	GO TO 52
53	ACNT(IAC+2)=ACNT(IAC+2)+CPUT
	ACNT(IAC+3)=ACNT(IAC+3)+CONST
	ACNT(IAC+4)=ACNT(IAC+4)+NPAGE
	RETURN
55	TYPE 56
56	FORMAT(/' ERROR IN ACCT'/' INITIALIZE ACCOUNTING SYSTEM
	1 FIRST, THEN READ FACT FILES'/)
	RETURN
	END

