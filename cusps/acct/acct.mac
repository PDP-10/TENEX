
	TITLE IO
	SUBTTL JOHN MAKHOUL - DECEMBER 20, 1971
	SEARCH STENEX


;ION - TURNS INTERRUPT ON FOR ^E
;	CALL ION(CNTLE)
;CNTLE IS ASSIGNED TO A STATEMENT NUMBER TO WHICH CONTROL IS
;TRANSFERRED UPON RECEIVING A ^E

;FOPENF - OPENS BINARY INPUT FILE
;	CALL FOPENF(N)
;N=0,1 - FILE NAME READ FROM TTY
;OTHERWISE N IS POINTER TO FILE NAME
;N=1   - FILE NAME WRITTEN ON OUTFIL
;N=0   - FILE NAME WRITTEN IN MEMORY STARTING AT N

;OPENOF - CLOSES OLD OUTPUT ASCII FILE AND OPENS NEW ONE
;	CALL OPENOF(FILNAM)
;OR	CALL OPENOF  , IF FILE NAME IS TO BE TYPED IN

;BINOF - OPENS BINARY OUTPUT FILE. NAME IS TYPED IN.
;	CALL BINOF

;CLOSE - CLOSES ALL FILES, INITIALIZES JFN'S, RESETS FORTRAN IO 
;        CHANNELS, AND SETS INTERRUPT SYSTEM
;	CALL CLOSE

;CLOSE INPUT BINARY FILE IF OPEN
;	CALL CLOSI

;CLOSB - CLOSE BINARY OUTPUT FILE
;	CALL CLOSB

;ASCIF - OPENS ASCII INPUT FILE
;	CALL ASCIF(ASCI)
;ASCI=0 - FILE NAME READ FROM TTY:
;OTHERWISE ASCI IS POINTER TO FILE NAME

;CLOSA - CLOSE ASCII INPUT FILE
;	CALL CLOSA

;RWORD - READS ONE BINARY WORD FROM OPENED FILE
;	CALL RWORD(WORD,EOF)
;BINARY WORD IS STORED IN (WORD)
;EOF IS AN ASSIGNED STATEMENT NUMBER TO WHICH THE PROGRAM
;RETURNS UPON DETECTING AN END OF FILE.

;WWORD - WRITE ONE BINARY WORD ON BINARY OUTPUT FILE
;	CALL WWORD(WORD)

;RCHAR - READS ONE CHARACTER FROM PRIMARY INPUT FILE INTO (CHAR)
;	CALL RCHAR(CHAR)


;FNOUT  - OUTPUT INTEGER IN RADIX 10 WITH LEADING BLANKS
;NOUTZ - OUTPUT INTEGER IN RADIX 10 WITH LEADING ZEROES
;	CALL FNOUT(I,NCOL)
;	CALL NOUTZ(I,NCOL)
;I=THE INTEGER TO BE OUTPUT
;NCOL=NUMBER OF COLUMNS. NCOL=0 MEANS PRINT AS MANY COLUMNS AS NECESSARY

;NCONV - CONVERTS ASCII NUMERIC STRING IN RADIX 10 INTO AN INTEGER
;	CALL NCONV(I,ASCI)
;I=CONVERTED NUMBER
;ASCI=ARRAY CONTAINING NUMERIC STRING

;SINA - STRING INPUT FROM ASCII FILE
;	CALL SINA(ASCI,NCHAR,EOF)
;ASCI=ARRAY TO CONTAIN ASCII STRING
;NCHAR=NO. OF CHARACTERS
;     =0, ZERO BYTE TERMINATES
;     <0, NEGATIVE BYTE COUNT
;     >0, POSITIVE BYTE COUNT OR END-OF-LINE, WHICHEVER COMES FIRST
;EOF  - ASSIGNED STATEMENT NO. FOR END OF FILE TRANSFER

;FSOUT - OUTPUTS A STRING OF ASCII TO OUTPUT FILE
;	CALL FSOUT(POINT)
;POINT IS POINTER TO THE BEGINNING OF THE STRING

;FPSOUT - SAME AS SOUT EXCEPT THAT OUTPUT IS TO TTY

;SOUTCR - LIKE SOUT EXCEPT THAT A CARRIAGE RETURN - LINE FEED IS
;ADDED TO OUTPUT STRING

;PSOUTR - SAME AS SOUTCR EXCEPT THAT OUTPUT IS TO CONTROL TTY

;FODTIM - OUTPUT DATE AND TIME ON OUTPUT FILE, GIVEN INTERNAL DATE
;	CALL ODTIM(INTDATE)

;ODTIMT - SAME AS ODTIM EXCEPT OUTPUT IS TO PRIMARY OUTPUT
;	CALL ODTIMT(INTDATE)

;FDIRST - TRANSLATES DIRECTORY NUMBER TO STRING
;	CALL DIRST(IDCODE,ASCI,NCHAR)
;IDCODE - DIRECTORY NUMBER
;ASCI   - ARRAY TO CONTAIN STRING
;NCHAR	- NUMBER OF CHARACTERS IN STRING

;FSTDIR - TRANSLATES TYPED IN STRING (WITH RECOGNITION) TO DIRECTORY
;NUMBER.
;	CALL FSTDIR(USER,TYPE,DIRERR)
;USER WILL CONTAIN THE DIRECTORY NUMBER
;IF TYPE < 0 USER IS ALPHANUMERIC, OTHERWISE NUMERIC
;DIRERR IS ASSIGNED TO A STATEMENT NUMBER TO WHICH THE PROGRAM RETURNS
;IF USER NAME IS NOT IN THE DIRECTORY


;CATEG - FINDS OUT WHETHER USER IS NUMERIC OR ALPHANUMERIC
;	CALL CATEG(USER)
;USER CONTAINS THE DIRECTORY NUMBER IN THE RIGHT HALF
;BIT0 OF USER IS TURNED ON IF ALPHANUMERIC, OTHERWISE NO CHANGE

;RALPH - READ ALPHANUMERIC STRING FROM TTY
;	CALL RALPH(ASCI,NCHAR)
;ASCI IS ARRAY IN WHICH STRING IS STORED WITH A NULL TERMINATOR
;NCHAR IS THE NUMBER OF CHARACTERS IN THE STRING

;LSH - LOGICAL SHIFT - F4 FUNCTION CALL
;	K=LSH(I,N)
;I IS INTEGER TO BE SHIFTED
;N IS NUMBER OF SHIFTS: + FOR LEFT AND - FOR RIGHT SHIFTS

;IFIXR - ROUNDS A FLOATING POINT NUMBER INTO AN INTEGER.
;	 RESULT IN AC0.
;	I=IFIXR(X)

	ENTRY FOPENF,RWORD,RCHAR,OPENOF,FSOUT,SOUTCR,PSOUTR,CLOSE
	ENTRY FDIRST,FSTDIR,CATEG,RALPH
	ENTRY ION,CLOSI,FPSOUT,CLOSB,WWORD,BINOF,FODTIM,ODTIMT,IDTIMT
	ENTRY ASCIF,CLOSA,FNOUT,NOUTZ,NCONV,SINA
	ENTRY LSH,IFIXR,UTYPE,CTIME
	EXTERNAL BOFIL

A=1
B=2
C=3
D=4
E=5
F=6
Q=16
P=17
CTRLA=1
ALT=33
EOL=37

	MLON
	OPDEF RESET. [15B8]	;RESET FORTRAN IO CHANNELS

;INTERRUPT ON FOR ^E
ION:	0
	MOVEI A,400000
	RPCAP
	MOVE C,B
	EPCAP	;ENABLE ALL POSSIBLE SPECIAL CAPABILITIES
	MOVEI A,101
	RFCOC
	MOVEM B,CONT1#		;STORE TTY CONTROL STATUS
	MOVEM C,CONT2#
	MOVE A,@(Q)
	MOVEM A,CNTLE#
	MOVE A,[XWD 5,1]
	ATI		;ASSIGN ^E TO CHANNEL 1
	PUSHJ P,SETINT	;SET INTERRUPT SYSTEM
	JRA Q,1(Q)


;SET INTERRUPT SYSTEM - USE PSEUDO-INTERRUPT LEVEL 2
;LEVEL 1 IS RESERVED FOR THE COMPATIBILITY SYSTEM
SETINT:	MOVEI A,400000
	RIR		;GET [LEVTAB,CHNTAB] IN AC2
	MOVE C,[XWD 2,CTRIH]
	MOVEM C,1(B)
	MOVE C,[XWD 2,EOFIH]
	MOVEM C,^D10(B)
	MOVE C,[XWD 2,ERRIH]
	MOVEM C,^D15(B)
	MOVS B,B
	MOVEI C,RETSAV
	MOVEM C,1(B)
	MOVSI B,200000
	AIC		;ACTIVATE CHANNEL 1
	POPJ P,
RETSAV:	0

;^E INTERRUPT HANDLER
CTRIH:	MOVEI A,100
	CFIBF		;CLEAR TTY INPUT BUFFER
	SETZ Q,		;RESET FORTRAN IO CHANNELS
	RESET.
	PUSHJ P,SETINT	;SET INTERRUPT SYSTEM
	MOVE A,CNTLE
	MOVEM A,RETSAV
	MOVEI A,101
	MOVE B,CONT1
	MOVE C,CONT2
	SFCOC			;RESET TTY CONTROL STATUS
	HRROI A,[XWD 572120,0]
	PSOUT			;ECHO ^E
	DEBRK
	JRST @CNTLE	;EXECUTED ONLY IF NO INTERRUPT

;ERROR INTERRUPT HANDLER
ERRIH:	MOVEI A,EOL	;CR-LF
	PBOUT
	MOVEI A,101
	MOVE B,[XWD 400000,-1]	;THIS FORK, LAST ERROR
	SETZ C,			;AS LONG AS NEEDED
	ERSTR
	JRST CTRIH
	JRST CTRIH
	JRST CTRIH



;END-OF-FILE INTERRUPT HANDLER
EOFIH:	MOVE A,@1(Q)
	MOVEM A,RETSAV
	MOVE A,INFIL
	GTSTS		;TEST FOR END OF BINARY FILE
	TLNE B,1000
	JRST EOF2
	MOVE A,AIFIL	;ASSUME END OF ASCII INPUT FILE
EOF2:	CLOSF
	JRST ERRIH
	JRA Q,.+1
	DEBRK

;OPEN INPUT FILE
FOPENF:	0
	MOVSI A,120003
	MOVE D,@(Q)
	MOVE E,D
	JUMPE E,START	;N=0,1 READ FILE NAME
	SOJE E,START	;FROM TTY
	HRRO B,(Q)	;OTHERWISE, STRING POINTER
	TLZA A,2
START:	MOVE B,[XWD 100,101]
	GTJFN		;GET INPUT FILE NAME
	JRST ERRIH
	MOVEM A,INFIL
	MOVE B,[XWD 440000,201000]
	OPENF
	JRST ERRIH
	JUMPN E,OP2
	HRRO A,(Q)
	JUMPE D,.+2
	MOVE A,OUTFIL
	MOVE B,INFIL
	SETZ C,
	JFNS		;OUTPUT FILE NAME
	JUMPE D,OP2	;N=0 NO CR-LF
	HRROI B,[XWD 64240,0]	;CR-LF
	SOUT
OP2:	MOVEI A,400000
	MOVSI B,200
	AIC		;ACTIVATE CHANNEL 10
	JRA Q,1(Q)
INFIL:	-1


;OPEN OUTPUT FILE
OPENOF:	0
BEG:	MOVSI A,460003
	HLRZ (Q)
	ANDI 777000
	CAIN (JUMP)
	JRST STRING
	MOVE B,[XWD 100,101]
GET:	GTJFN
	JRST ERRIH
	MOVE C,A
	MOVE B,[XWD 70000,101000]
	OPENF
	JRST ERRIH
	MOVE A,OUTFIL
	JUMPL A,.+3
	CLOSF		;CLOSE OLD OUTPUT FILE
	JRST ERRIH
	MOVE A,C
	MOVEM A,OUTFIL
	JRA Q,(Q)
OUTFIL:	-1

STRING:	TLZ A,2		;STRING PROVIDED
	HRRO B,(Q)	;STRING POINTER
	JRST GET

;OPEN BINARY OUTPUT FILE
BINOF:	0
	MOVSI A,460003
	MOVE B,[XWD 100,101]
	GTJFN
	JRST ERRIH
	MOVEM A,BOFIL
	MOVE B,[XWD 440000,101000]
	OPENF
	JRST ERRIH
	JRA Q,(Q)

;CLOSE ALL OPEN FILES AND INITIALIZE SYSTEM
CLOSE:	0
	RESET.
	PUSHJ P,SETINT	;SET INTERRUPT SYSTEM WHICH WAS TURNED OFF
			;BY COMPATIBILITY WHILE EXECUTING RESET.
	SETOM INFIL	;INITIALIZE INPUT JFN
	SETOM OUTFIL	;AND OUTPUT JFN
	SETOM AIFIL	;AND ASCII INPUT JFN
	SETO A,
CLOS2:	CLOSF
	JRST ERRIH
	JRA Q,(Q)


;CLOSE INPUT BINARY FILE
CLOSI:	0
	MOVE A,INFIL
	JUMPL A,.+3	;JUMP IF NO INPUT FILE HAS BEEN OPENED
	GTSTS		;CHECK FILE STATUS
	JUMPL B,CLOS2	;IF OPEN, CLOSE IT
	JRA Q,(Q)

;CLOSE BINARY OUTPUT FILE
CLOSB:	0
	MOVE A,BOFIL
	JRST CLOS2

;OPENS ASCII INPUT FILE
ASCIF:	0
	MOVSI A,120003
	SKIPN @(Q)
	JRST ASC2
	HRRO B,(Q)	;STRING POINTER
	TLZA A,2
ASC2:	MOVE B,[XWD 100,101]
	GTJFN
	JRST ERRIH
	MOVEM A,AIFIL
	MOVE B,[XWD 70000,201000]
	OPENF
	JRST ERRIH
	JRA Q,(Q)
AIFIL:	-1

;CLOSES ASCII INPUT FILE
CLOSA:	0
	MOVE A,AIFIL
	JUMPL A,.+3
	GTSTS
	JUMPL B,CLOS2
	JRA Q,(Q)

;READ BINARY WORD
RWORD:	0
	MOVE A,INFIL
	BIN
	MOVEM B,@(Q)
	JRA Q,2(Q)

;WRITE WORD ON BINARY OUTPUT FILE
WWORD:	0
	MOVE A,BOFIL
	MOVE B,@(Q)
	BOUT
	JRA Q,1(Q)


;READ CHARACTER ROUTINE
RCHAR:	0
	MOVEI A,100
	RFMOD
	MOVEM B,BUF	;SAVE MODE WORD
	IORI B,170000	;BREAK ON ANY CHARACTER
	SFMOD
	PBIN
	ROT A,-7	;LEFT JUSTIFY
	IOR A,[XWD 1004,20100]	;FILL IN SPACES
	MOVEM A,@(Q)
	MOVEI A,100
	MOVE B,BUF
	SFMOD		;RESET MODE FOR TTY
	JRA Q,1(Q)


;OUTPUT INTEGER WITH LEADING BLANKS
FNOUT:	0
	SETZ E,
	JRST NT1
;OUTPUT INTEGER WITH LEADING ZEROES
NOUTZ:	0
	MOVEI E,40000
NT1:	MOVE A,OUTFIL
	MOVE B,@(Q)	;GET INTEGER
	MOVE C,[XWD 130000,12]
	MOVE D,@1(Q)	;GET NUMBER OF COLUMNS
	ANDI D,177
	OR D,E		;LEADING BLANKS OR ZEROES
	TSO C,D
	NOUT
	JRST ERRIH
	JRA Q,2(Q)

;CONVERTS ASCII NUMERIC STRING INTO A NUMBER
NCONV:	0
	HRRO A,1(Q)
	MOVEI C,12
	NIN
	JRST ERRIH
	MOVEM B,@(Q)
	JRA Q,2(Q)

;STRING INPUT FROM ASCII FILE
SINA:	0
	MOVE A,AIFIL
	HRRO B,(Q)	;STRING POINTER
	MOVE C,@1(Q)	;BYTE COUNT
	MOVEI D,EOL	;POSSIBLY TERMINATE ON END-OF-LINE
	SIN
	JRA Q,2(Q)


;OUTPUT STRING ON OUTPUT FILE
FSOUT:	0
	MOVE A,OUTFIL
SOUT2:	HRRO B,(Q)	;STRING POINTER
	SETZ C,
	SOUT
	JRA Q,1(Q)

;OUTPUT STRING ON TTY
FPSOUT:	0
	MOVEI A,101
	JRST SOUT2

;OUTPUT STRING PLUS CR-LF ON OUTPUT FILE
SOUTCR:	0
	MOVE A,OUTFIL
PSOUT2:	HRRO B,(Q)
	SETZ C,
	SOUT
	HRROI B,[XWD 64240,0]	;POINTER TO CR-LF
	SOUT
	JRA Q,1(Q)

;OUTPUT STRING PLUS CR-LF TO CONTROLLING TTY
PSOUTR:	0
	MOVEI A,101	;CONTROL TTY
	JRST PSOUT2

;OUTPUT DATE AND TIME ON OUTFIL
FODTIM:	0
	MOVE A,OUTFIL
	MOVE B,@(Q)	;GET INTERNAL DATE
	SETZ C,		;COLUMNATED OUTPUT
	ODTIM
	HRROI B,[XWD 201000,0]	;OUTPUT 2 SPACES
	SOUT
	JRA Q,1(Q)

;OUTPUT DATE AND TIME TO CONTROLLING TTY
ODTIMT:	0
	MOVEI A,101
	MOVE B,@(Q)
	SETZ C,
	ODTIM
	JRA Q,1(Q)

;INPUTT DATE & TIME FROM CONTROLLING TTY
IDTIMT:	0
	MOVEI	A,100
IDTIM1:	SETZM	B
	IDTIM
	JRST	IDTIM2
	MOVEM	B,@(Q)
	JRA	Q,1(Q)
IDTIM2:	MOVEI	B,"?"
	BOUT
	JRST	IDTIM1


;TRANSLATE DIR NO. TO STRING
FDIRST:	0
	MOVE B,@(Q)
	HRRZ C,1(Q)
	SETZM @1(Q)	;ZERO FIRST WORD
	HRRO A,C
	SETZ D,		;NUMBER OF CHARACTERS
	DIRST
	JRST CHAR
;COMPUTE NUMBER OF CHARACTERS
NCHAR:	MOVSI B,-5	;5 CHARS/WORD
	MOVE E,(C)
NULLT:	TLNN E,774000	;TEST FOR LEFT NULL
	JRST CHAR
	ADDI D,1
	LSH E,7
	AOBJN B,NULLT
	AOJA C,NCHAR
CHAR:	MOVEM D,@2(Q)
	JRA Q,3(Q)

;TRANSLATE STRING TO DIR NO.
FSTDIR:	0
	MOVEI A,101
	RFCOC
	ANDI C,177777	;IGNORE OUTPUT FOR ALT MODE
	SFCOC
ST0:	MOVE C,[POINT 7,BUF,-1]
STA:	PBIN		;INPUT CHARACTER FROM TTY
	CAIN A,CTRLA
	JRST STC	;CHECK FOR CTRL A EDITING
	CAIE A,ALT
	CAIN A,EOL
	JRST .+3
	IDPB A,C	;STORE IN STRING
	JRST STA
	MOVE D,A	;TERMINATOR
	SETZ A,
	MOVE E,C
	IDPB A,E	;NULL AT END
	MOVEI A,1	;NO RECOGNITION
	CAIN D,ALT
	TLO A,400000		;RECOGNIZE
	MOVE B,[POINT 7,BUF,-1]
	STDIR
	JRST STER	;NO MATCH
	JRST [		;AMBIGUOUS
	      MOVEI A,7	;^G BELL
	      PBOUT
	      JRST STA]
	;ECHO REST AFTER ALT MODE
	MOVE E,A	;STORE DIR INFO
	CAIE D,ALT
	JRST STB
	MOVE A,C
	PSOUT
	PBIN
	CAIE A,EOL	;CHECK FOR CR-LF AFTER RECOGNITION
	JRST STER

STB:	HRRZM	E,@(Q)
	LSH E,1
	MOVEM E,@1(Q)
	JRA Q,3(Q)
STER:	MOVE E,@2(Q)
	JRA Q,@E	;TRANSFER CONTROL TO DIRERR
STC:	CAME C,[POINT 7,BUF,-1]
	CAMN C,[POINT 7,BUF-1,34]
	JRST STD	;AT BEG OF BUFFER SO QUIT
	MOVEI A,"\"
	PBOUT		;PRINT \ FOLLOWED BY CHAR DELETED
	LDB A,C
	PBOUT
	MOVE A,C
	BKJFN	;BACKUP STRING POINTER THE LAZY WAY
	JFCL
	MOVEM A,C
	JRST STA
STD:	MOVEI A,7	;DING THE BELL
	PBOUT
	JRST ST0



;USER NUMERIC OR ALPHANUMERIC
CATEG:	0
	MOVE B,@(Q)
	ANDI B,-1
	HRROI A,BUF
	DIRST
	JRST CATOUT	;USER NOT IN DIRECTORY
	MOVEI A,1
	HRROI B,BUF
	STDIR
	JRST CATOUT
	JRST CATOUT
	TLNN A,200000
	JRST CATOUT	;USER NUMERIC
	MOVE B,@(Q)	;USER ALPHANUMERIC
	TLO B,400000
	MOVEM B,@(Q)
CATOUT:	JRA Q,1(Q)

BUF:	BLOCK 10

;READ ALPHANUMERIC STRING
RALPH:	0
	MOVEI A,100
	RFMOD
	IORI B,40000	;BREAK ON CONTROL CHARACTERS
	SFMOD
	MOVEI A,101
	RFCOC
	TLZ B,140000	;DO NOT ECHO ^A
	SFCOC
	MOVE B,(Q)
	MOVE C,[POINT 7,(B)]
	HRROI E,^D-40	;MAX 39 CHARACTERS
RB:	HRROI D,-5	;5 CHARS/WORD
RA:	PBIN		;INPUT CHAR FROM TTY
	CAIN A,EOL
	JRST RC
	CAIE A,1	;^A
	JRST RE
	TRNN E,47	;STRING EMPTY?
	JRST RA		;YES, NO ERASURE
	MOVEI A,134	;BACK SLASH \
	PBOUT
	LDB A,C

	PBOUT		;TYPE LAST CHARACTER
	MOVE A,C
	BKJFN		;BACK UP POINTER
	JRST ERRIH
	MOVE C,A
	SOJ E,
	SOJ D,
	TRNN D,5
	SETO D,
	JRST RA
RE:	AOJE E,RD	;JUMP IF MORE THAN 39 CHARS
	IDPB A,C
	AOJL D,RA
	JRST RB
RD:	MOVEI A,EOL	;CR-LF
	PBOUT
	SETO E,
RC:	SETZ A,
	IDPB A,C	;NULL TERMINATOR
	AOJL D,.-1
	ADDI E,^D40
	MOVEM E,@1(Q)	;NUMBER OF CHARACTERS
	JRA Q,2(Q)


;LOGICAL SHIFT
LSH:	0
	MOVE 0,@(Q)
	MOVE A,@1(Q)
	LSH 0,(A)	;ANSWER IN AC0
	JRA Q,2(Q)

;ROUND FLOATING POINT TO INTEGER
IFIXR:	0
	MOVM 0,@(Q)	;GET MAGNITUDE OF ARGUMENT
	MULI 0,400	;SEPARATE FRACTION AND EXPONENT
	EXCH 0,A	;PUT PARTIAL RESULT IN AC0
	LSHC 0,-243(A)	;USE EXPONENT AS INDEX REGISTER
	CAIGE A,0	;SIGNIFICANT BIT?
	AOJ 0,		;YES, ADD 1
	SKIPGE @(Q)	;SET THE
	MOVNS 0,0	;CORRECT SIGN
	JRA Q,1(Q)

;ESTABLISHES TYPE OF USER FOR PRINT OUT OF USER  ACCOUNTING SHEETS
UTYPE:	0
	HRROI A,UBUF1
	MOVE B,@(Q)
	DIRST
	JRST UTYP2
	MOVE A,@(Q)
	MOVEI B,UBUF1
	HRROI C,UBUF2
	GTDIR		;REQUIRES ENABLED WHEEL OR OPER
	SKIPGE UBUF1+4
	JRST UTYP2	;DIRECTORY NAME ONLY
	MOVE 0,UBUF1+13
	TLNE 0,40000
	JRST UTYP1
	MOVEI 0,3	;OUTSIDE USER
UX:	MOVEM 0,@1(Q)
	JRA Q,2(Q)
UTYP1:	MOVEI 0,1	;BBN USER
	JRST UX
UTYP2:	MOVEI 0,2
	JRST UX
UBUF1:	BLOCK 20
UBUF2:	BLOCK 20

;CONVERTS TIME AND DATE TO LOCAL HOUR OF DAY
CTIME:	0
	MOVE B,@(Q)
	SETZ D,
	ODCNV
	HRRZ D,D
	IDIVI D,^D36	;CONVERT TIME IN SECONDS TO HOURS*100
	MOVEM D,@1(Q)
	JRA Q,2(Q)
PAT:	BLOCK 0
PATCH:	BLOCK 100

	END

