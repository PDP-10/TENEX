;<SOURCES>FTSCOM.MAC;13     7-MAY-75 16:12:58    EDIT BY CLEMENTS
;<SOURCES>FTSCOM.MAC;12    16-APR-75 21:35:17    EDIT BY CLEMENTS
; ADD MISSING CALL TO TIMEOK IN PAGED RETR
;<SOURCES>FTSCOM.MAC;11    31-MAR-75 15:28:36    EDIT BY CLEMENTS
; FIX SECURITY BREACH
;<SOURCES>FTSCOM.MAC;10    27-MAR-75 13:00:19    EDIT BY CLEMENTS
; MAKE PASSWORD CHECKING NOT USE GTDIR. FIX BUG IN STOR FROM XTP
;<SOURCES>FTSCOM.MAC;9    12-MAR-75 00:05:00    EDIT BY CLEMENTS
; ADD PAGED MODE RETRIEVE FOR HOLEY FILES
;<SOURCES>FTSCOM.MAC;8     4-MAR-75 18:56:10    EDIT BY CLEMENTS
; AFTER PASSWORD, CHECK FOR DEFAULT ACCT, AND SAY LOGGED IN IF OK.
;<SOURCES>FTSCOM.MAC;7    23-DEC-74 17:09:02    EDIT BY SUSSMAN
;<SOURCES>FTSCOM.MAC;6    13-NOV-74 17:02:39    EDIT BY SUSSMAN
;<SOURCES>FTSCOM.MAC;5    14-AUG-74 21:12:57    EDIT BY SUSSMAN
;<SOURCES>FTSCOM.MAC;4    12-JUL-74 19:25:33    EDIT BY CLEMENTS
;<SOURCES>FTSCOM.MAC;3    11-JUL-74 23:45:39    EDIT BY CLEMENTS
TITLE FTSCOM - FTP SERVER COMMAND HANDLERS
SUBTTL R CLEMENTS / (C) BOLT BERANEK & NEWMAN, INC., 1973

SEARCH STENEX
SEARCH FTSPAR

INTERNAL BYTE$,TYPE$,MODE$,STRU$,RETR$,STOR$,LIST$,NLST$,STAT$
INTERNAL BYE$,CWD$,XCWD$,APPE$,ALLO$,ABOR$
INTERNAL SOCK$,REST$,NOOP$,RNFR$,RNTO$,HELP$,DELE$,USER$,PASS$,ACCT$
INTERNAL BPOPJ,UCASE,FRMHST


EXTERNAL ACTCHK,BNLAPP,BNLBPW,BNLDEL,BNLLGI,BNLMAL,BNLRET,BNLRNM
EXTERNAL BNLSTO,CHKACC,CLOSEK,CLOSER,CLSLOG,COMLP,CRLFM,DECIN,DECIN1
EXTERNAL ERRRPL,JBKINI,JFNTXT,KEYLTR,LINEIN,LPTPFX
EXTERNAL OPNLOG,PREDAT,RPCRLP,SDUMP0,SDUMPA,TIMEOK
EXTERNAL CPOPJ

;COMMAND HANDLERS

COMMENT *

NOTE: ALL COMMANDS WHICH TAKE A LETTER ARGUMENT ARE ARRANGED WITH
THE LETTERS IN A TABLE (SEARCHED BY KEYLTR) SO THAT ENTRY 0 OF THE
TABLE IS THE DEFAULT FOR THE PARAMETER. WHEN STORED IN $TYPE,
$MODE, AND SO ON, A -1 MEANS NO COMMAND WAS RECEIVED FOR THAT
PARAMETER SINCE IT WAS DECLARED DEFAULTED (BY INITIALIZATION, ETC.),
SO SKIPG IS A VALID TEST FOR DEFAULT VS NON-DEFAULT. THE FOLLOWING
MACRO IS USED TO GENERATE THE TABLES AND ASSIGN THE VALUES (SUCH AS
TYPE.A AND THE LIKE).
*
DEFINE KM (A,B)<
ZZ=0
IRP B,<XWD "B",A'$'B
A'.'B==ZZ
ZZ==ZZ+1
>>

ALLO$:	HRROI B,ALLOR		;ALLOCATE COMMAND REPLY
	JRST RPCRLP		;SEND IT AND IGNORE ARGUMENT.
ALLOR:	ASCIZ /200 Allocation ignored on this system./

TYPE$:	MOVE A,[-NTYPES,,TYPTAB]
	PUSHJ P,KEYLTR		;SCAN FOR THIS KEY LETTER
	  JRST TYPX1		;NOT FOUND
	JRST 0(B)		;HANDLE THE TYPE CODE
TYPTAB:	KM (TYPE,<A,E,I,L,P,X>)
NTYPES==.-TYPTAB

TYPEOK:
TYPE$A:
TYPE$I:
TYPE$L:	HRRZM A,$TYPE		;STORE TYPE REQUEST
	HRROI B,TYPER1		;REPLY OK
	JRST RPCRLP		;SEND REPLY AND LISTEN SOME MORE
TYPER1:	ASCIZ /200 TYPE command accepted./

TYPEX1:	HRROI B,TYPER4		;ERROR REPLY
	JRST RPCRLP		; ..

TYPER4:	ASCIZ /506 Unknown TYPE request./

TYPE$P:	HRROI B,TYPER3		;ERROR REPLY
	JRST RPCRLP
TYPE$E:	HRROI B,TYPER2		;UNHAPPY REPLY
	JRST RPCRLP		;SEND IT

TYPE$X:	MOVE BP,SBP		;SEE IF X IS FOLLOWED BY "TP"
	ILDB C,BP		; ..
	CAIE C,"T"		;TENEX GROUP OF XPERIMENTAL TYPES?
	CAIN C,"T"+40		; INCL LOWER CASE
	SKIPA			;YES
	JRST TYPEX1		;NO
	ILDB C,BP		;OK, PAGED?
	CAIE C,"P"		; ..
	CAIN C,"P"+40
	JRST TYPEOK		;YES, STORE TYPE.X (ONLY ONE FOR NOW)
	JRST TYPEX1		;NO.

TYPER2:	ASCIZ /506 We do not speak EBCDIC here./
TYPER3:	ASCIZ /506 The Print-file TYPE is ill-defined and unimplemented./

TYPX1:	HRROI B,TYPXR1		;BAD PARAM MESSAGE
	JRST RPCRLP		;RETURN THIS MSG
TYPXR1:	ASCIZ /501 Incorrect argument to TYPE command/

STRU$:	MOVE A,[-NSTRUS,,STRTAB]
	PUSHJ P,KEYLTR		;SCAN FOR KEY LETTER AFTER STRU COMMAND
	  JRST STRUX1		;NOT FOUND
	JRST 0(B)		;DISPATCH TO HANDLER
STRTAB:	KM (STRU,<F,R>)
NSTRUS==.-STRTAB

STRU$F:				;THESE ARE OK
	HRRZM A,$STRU		;STORE INDEX OF STRU ARG
	HRROI B,STRUF1		;REPLY 1 FOR STRU COMMAND
	JRST RPCRLP		;RETURN IT AND LOOP
STRUF1:	ASCIZ /200 STRU command accepted./
STRU$R:	HRROI B,STRUR1
	JRST RPCRLP
STRUR1:	ASCIZ /506 Record STRUcture not implemented./

STRUX1:	HRROI B,STRUXR		;ERROR REPLY
	JRST RPCRLP		;REPLY WITH ABOVE MSG
STRUXR:	ASCIZ /501 Incorrect argument to STRU command/

NOOP$:	HRROI B,NOOPM1		;OK REPLY
	JRST RPCRLP
NOOPM1:	ASCIZ /200 NOOP command accepted./

;MORE COMMAND HANDLERS

MODE$:	MOVE A,[-NMODES,,MODTAB]
	PUSHJ P,KEYLTR		;SEARCH FOR THE PARAMETER LETTER
	  JRST MODEX1		;NOT FOUND
	JRST 0(B)		;OK. DISPATCH TO LETTER HANDLER
MODTAB:	KM (MODE,<S,B,T,H>)
NMODES==.-MODTAB

MODEOK:
MODE$S:				;THESE MODES ARE OK
	HRRZM A,$MODE		;STORE INDEX OF MODE ARG
	HRROI B,MODER1		;REPLY FOR MODE OK
	JRST RPCRLP		;SEND IT AND LOOP
MODER1:	ASCIZ /200 MODE command accepted./

MODEX1:	HRROI B,MODEXR		;ERROR REPLY
	JRST RPCRLP		;REPLY
MODEXR:	ASCIZ /501 Incorrect argument to MODE command/

MODE$B:
MODE$T:	HRROI B,MODEX3
	JRST RPCRLP
MODEX3:	ASCIZ /506 Unsupported MODE requested./

MODE$H:	HRROI B,HASPXR		;ERROR FOR HASP MODE
	JRST RPCRLP		;REPLY
HASPXR:	ASCIZ /506 We do not speak HASP here./

BYTE$:	PUSHJ P,DECIN		;GET DECIMAL ARGUMENT
	  JRST BYTEX		;NO GOOD
	CAIE A,44		;ONLY ACCEPT 36, 32 AND 8 BIT SIZES
	CAIN A,40		; ..
	JRST BYTEOK		;GOOD
	CAIN A,10		; ..
	JRST BYTEOK		;GOOD
BYTEX:	HRROI B,BYTEXR		;ERROR FOR BYTE CMD
	JRST RPCRLP		;REPLY
BYTEXR:	ASCIZ /506 BYTE size must be 36, 32 or 8 in this system./

BYTEOK:	MOVEM A,$BYTE		;STORE BYTE SIZE
	HRROI B,BYTER1		;OK REPLY
	JRST RPCRLP		;AND LOOP
BYTER1:	ASCIZ /200 BYTE command accepted./

;MORE FTP COMMAND HANDLERS

USER$:	SETOM $PASS		;NO PASSWORD SEEN YET
	SETOM $ACCT		;INVALIDATE ANY PREV ACCOUNT
	SETOM $USER		;USER NUMBER NOT KNOWN
	SETZM USERST		;NO USER NAME YET
	TLZ F,L.LOGI!L.ANON	;NOT LOGGED IN AS THIS USER
	TRZ F,R.PWOK		;NO PASSWORD YET SEEN FOR THIS USER
	MOVEI A,0		;ARG TO DIRST. TRY TO FIND USER.
	MOVSI B,070000		;BACK UP BEFORE FIRST CHAR IN NAME
	ADD B,BP		;ARG TO NAME STRING
	PUSHJ P,UCASE		;MAKE TEST WORD ALL UPPER CASE
	MOVE X,B		;SAVE IN AC X
	STDIR			;TRY TO FIND DIRECTORY NUMBER
	  JRST USERNM		;NO MATCH
	  JRST USERAM		;AMBIGUOUS
	HRRZM A,$USER		;SUCCESS. STORE DIR NUM.
	HRROI A,USERST		;MAKE IT INTO A STRING TOO
	MOVE B,$USER		; ..
	DIRST			;FOR DSP IN GTJFN
	  JRST USERNM		;CAN'T FAIL - SAY DOESNT EXIST.
	MOVEI A,(B)		;JUST THE DIRECTORY NUMBER
	MOVEI B,USRBLK		;READ THE INFO ON THIS USER
	MOVEI C,0		;NO PASSWORD.
	GTDIR			;GET FROM SYSTEM. FAILS WITH PSI
	SKIPGE USRBLK+4		;FILES-ONLY DIRECTORY?
	JRST USERFO		;YES. CAN'T "LOG IN" AS THIS NAME.
	HRROI B,USERM1		;SUCCESS MESSAGE
	JRST RPCRLP		;SEND IT OUT.
USERM1:	ASCIZ /330 User name accepted. Password, please./
USERM2:	ASCIZ /330 Anonymous user accepted, send real ident as PASSword./

USERNM:				;NO MATCH ON USER NAME
USERAM:				;AND AMBIGUOUS ARE TREATED THE SAME.
	SKIPIF ANON
	  JRST USRBAD
	MOVE A,[440700,,[ASCIZ /ANONYMOUS/]]
USERL1:	ILDB B,A		;SEE IF "NAME" IS "ANONYMOUS"
	ILDB C,X		; ..
	CAME B,C
	JRST USRBAD		;NO. BAD NAME
	JUMPN B,USERL1		;OK, LOOP WHOLE NAME
	TLO F,L.ANON		;OK, ACCEPT HIM, FLAG AS ANON.
	SETZM $USER		;ZERO IN USER NUMBER SLOT
	SETZM USRBLK		;AND IN ALL PRIV BITS, ETC.
	MOVE A,[USRBLK,,USRBLK+1]
	BLT A,USRBKE-1		;CLEAR USER DDB AND PASSWORD.
	HRROI B,USERM2		;GIVE HIM SEMI-LOGGED IN MSG
	JRST RPCRLP

USRBAD:	HRROI B,USERX1		;NO SUCH USER MESSAGE
	AOSGE LGICNT		;TOO MANY?
	JRST RPCRLP		;NO. LET HIM TRY AGAIN.
BADLGI:	HRROI B,USERX3		;FATAL MESSAGE.
	JRST ERRRPL		;ERROR REPLY, CLOSE CONNECTIONS
USERX1:	ASCIZ /431 USER name not valid./
USERX3:	ASCIZ /430 LOGIN attempts exceeded, goodbye./

USERFO:	HRROI B,USERX2		;FILES-ONLY MESSAGE
	SETOM $USER		;CLOBBER THE USER INDEX
	JRST RPCRLP		;REPLY TO USER
USERX2:	ASCIZ /431 Files-Only user name not allowed./

UCASE:	PUSH P,B		;SAVE START OF STRING
UCASE2:	ILDB C,B		;GET FIRST CHARACTER
	CAIE C,11		;SKIP SPACES AND TABS
	CAIN C,40		; ..
	JRST [MOVEM B,0(P)	;UPDATE TO PASS SPACE/TAB
		JRST UCASE2]
	PUSH P,B		;STRING AFTER FIRST NON-BLANK
	SKIPA
UCASEL:	ILDB C,B		;GET A CHAR FROM STRING
	JUMPE C,UCASE3		;NOW FLUSH TRAILING SPACES
	CAIL C,"A"+40		;LOWER CASE LETTER?
	CAILE C,"Z"+40
	JRST UCASE1		;NO
	TRZ C,40		;YES
	DPB C,B			;PUT IT BACK AS UPPER
UCASE1:	JRST UCASEL		;LOOP TILL NULL
UCASE4:	POP P,(P)		;DISCARD JUNK
BPOPJ:	POP P,B			;RESTORE POINTER
	POPJ P,0		;RETURN

UCASE3:	CAMN B,0(P)		;BACK TO BEGINNING?
	JRST UCASE4		;YES.
	ADD B,[070000,,0]	;NO. DECREMENT BYTE POINTER
	SKIPGE B		; ..
	SUB B,[430000,,1]	; ..
	LDB C,B			;GET TRAILING CHARACTER
	CAIE C,40		;SPACE OR TAB?
	CAIN C,11		; ..
	TDZA C,C		;YES. MAKE A NULL, SKIPA
	JRST UCASE4		;NO. VALID CHAR. RETURN.
	DPB C,B			;MASH THE SPACE WITH A NULL
	JRST UCASE3		;AND SEE IF ANY MORE.

CWD$:				;CHANGE WORKING DIRECTORY
XCWD$:	MOVEI A,0		;ARG TO STDIR
	MOVSI B,070000
	ADD B,BP		;POINT TO FIRST CHAR IN NAME DESIRED
	PUSHJ P,UCASE		;PUT IT IN UPPER CASE
	STDIR			;SEE IF IT EXISTS
	  JRST XCWD1		;NO
	  JRST XCWD1		; ..
	HRRZ B,A		;IT DOES. JUST DIRECTORY NUMBER
	HRROI A,USERST		;TO STRING FOR USER NAME
	DIRST
	  JRST XCWD1		;CAN'T FAIL
	HRROI B,XCWDM1		;OK MSG
	JRST RPCRLP
XCWD1:	HRROI B,XCWDM2		;LOSE MSG
	JRST RPCRLP
XCWDM1:	ASCIZ /200 Default name accepted./
XCWDM2:	ASCIZ /431 No such directory - CWD./

PASS$:	TRZ F,R.PWOK		;THE PASSWORD ISN'T GOOD YET.
	SKIPGE $USER		;HAS A USER COMMAND BEEN ACCEPTED?
	JRST ORDERX		;NO. OUT OF ORDER.
	MOVE A,[440700,,USRPSW]	;YES. POINT TO PASSWORD OF USER
	MOVEI X,<USRBKE-USRPSW>*5-2
	JUMPE C,PASSNG		;BLANK PASSWORD NEVER GOOD.
	SKIPA			; COLLECT THE ALLEGED PASSWORD
PASINL:	ILDB C,BP		;GET ANOTHER CHAR FROM TELNET LINE
	CAIL C,"A"+40		;LOWER CASE?
	CAILE C,"Z"+40		; ..
	SKIPA			;NO.
	TRZ C,40		;YES, MAKE UPPER CASE.
	IDPB C,A		;STORE IN USRPSW BLOCK
	JUMPE C,PASIN2		;DONE AT END OF LINE
	SOJG X,PASINL		;GET ANOTHER CHARACTER, UNLESS TOO LONG
	JRST PASSNG		;QUIT. TOO LONG.
PASIN2:	TLNE F,L.ANON		;ANONYMOUS USER?
	JRST PASSOK		;YES, ANY NON-BLANK IS OK.
	MOVE A,$USER		;CHECK THE PASSWORD
	HRLI A,(1B0)		;DON'T REALLY CONNECT
	MOVE B,[440700,,USRPSW]	;STRING WHERE ALLEGED PASSWORD IS
	CNDIR			;CHECK IT
	  JRST PASSNG		;NOT RIGHT.
PASSOK:	MOVEI A,1		;DEFAULT ACCOUNT FOR ANON USE
	TLNE F,L.ANON		;SO HE DOESN'T NEED TO TYPE ONE.
	MOVEM A,$ACCT		;SET IT UP FOR HIM
	HRROI B,[ASCIZ /LOGIN /]
	PUSHJ P,OPNLOG		;LOG THE SUCCESSFUL LOGIN
	  JRST PASOK1		;CAN'T
	TLNE F,L.ANON		;PHONY USER?
	JRST [	HRROI B,[ASCIZ /ANON USR /]
		MOVEI C,0
		SOUT
		HRROI B,USRPSW
		SOUT
		JRST PASS02]
	HRRZ B,$USER		;USER NUMBER
	DIRST			;TO STRING
	  JFCL
PASS02:	PUSHJ P,FRMHST		;SAY FROM WHAT SITE
	SKIPIF CCA
	  JRST PASCC3
	MOVEI A,TXPO
	TLNE F,L.ANON
	JRST [	HRROI B,[ASCIZ /ANON USR /]
		MOVEI C,0
		SOUT
		HRROI B,USRPSW
		SOUT
		JRST PASCC2]
	HRRZ B,$USER
	DIRST
	  JFCL
PASCC2:	PUSHJ P,FRMHST
PASCC3:
	PUSHJ P,CLSLOG		;CLOSE LOG FILE
PASOK1:	TRO F,R.PWOK		;FLAG PASSWORD ACCEPTED
	SKIPUNLESS BINL
	  PUSHJ P,BNLLGI	;LOG THE LOGIN IN BINARY FILE
	SKIPUNLESS ALGI		;SKIP IF NO ACCT NEEDED TO LOG IN
	TLNE F,L.ANON		;OR IF FAKED FOR ANONYMOUS.
	JRST LOGDIN		;SAY HE HAS LOGGED IN.
	MOVE A,SVERNM		;GET SYSTEM VERSION
	CAIGE A,^D13300		;DOES DEF ACCT JSYS EXIST?
	JRST PASOK2		;NO.
	SETZM ACCTST		;YES. PREPARE SPACE IN CASE STRING.
	MOVE A,[ACCTST,,ACCTST+1]
	BLT A,ACCTSE-1		; ..
	MOVE A,[440700,,ACCTST]	;STRING POINTER IN CASE STRING DEF ACCT
	HRRZ B,$USER		;USER TO CHECK ON
	GDACC			;SEE IF HE HAS A DEFAULT ACCT
	 JRST PASOK2		;NO, HE DOESN'T
	CAML A,[500000,,0]	;NUMERIC?
	CAMLE A,[577777,,-1]	; ..
	SKIPA			;NO
	TLZ A,(7B2)		;YES. TURN OFF NUMBER FLAG
	MOVEM A,$ACCT		;STORE AS IF ACCOUNT GIVEN
	JRST LOGDIN		;AND GO TELL HIM HE'S ON.

PASOK2:	HRROI B,PASSM6		;SAY NEED ACCOUNT BEFORE LOGIN.
	JRST RPCRLP		; ..
	HRROI B,PASSM1		;ASK FOR ACCOUNT ON FILES IF NEEDED
	SKIPIF AFIL
LOGDIN:	HRROI B,LOGIM1		;SAY LOGGED IN.
	TLO F,L.LOGI		;MARK LOGIN SEQUENCE COMPLETED
	JRST RPCRLP		;REPLY AND LOOP
PASSNG:
	SKIPUNLESS BINL
	PUSHJ P,BNLBPW		;LOG A BAD PASSWORD ATTEMPT
	HRROI B,PASSM2		;LOSE MESSAGE
	AOSGE LGICNT		;TOO MANY TRIES?
	JRST RPCRLP		;NO, LET HIM TRY AGAIN
	JRST BADLGI		;YES. GO FLUSH HIM.

PASSM1:	ASCIZ /230 Password OK. Send ACCOUNT before writing any files./
LOGIM1:	ASCIZ /230 Login completed./
PASSM2:	ASCIZ /431 Password incorrect./
PASSM6:	ASCIZ /331 Password OK, Account please./

;ACCOUNT COMMAND - MAY BE REQUIRED, DEPENDING ON SWITCHES.

ACCT$:
	SKIPUNLESS CCA
	  JRST ACTCCA
	TRNN F,R.PWOK		;PASSWORD AND NAME IN?
	JRST ORDERX		;NO. HAS TO BE ONE FIRST.
	JUMPE C,ACCTNG		;BLANK ACCOUNT IS ALSO ILLEGAL
	PUSH P,BP		;SAVE POINTER TO START OF ACCOUNT
	PUSHJ P,DECIN		;SEE IF A NUMBER SUPPLIED
	  JRST NOTNUM		;FIRST CHAR NOT A DIGIT
	JUMPN C,NOTNUM		;SUBSEQUENT CHAR NOT A DIGIT
	POP P,(P)		;OK. DISCARD STACKED BYTE POINTER
	CAIL A,1		;SEE IF TOO SMALL
	TLNE A,700000		;SEE IF TOO BIG.
	JRST ACCTNG		;NOT A LEGAL ACCOUNT NUMBER
	PUSHJ P,ACTCHK		;VERIFY IT, IF VERIFIER ON SYSTEM
	  JRST ACCTNG		;ON SYSTEM AND NOT VALID.
	MOVEM A,$ACCT		;OK. SAVE IT.
ACCTOK:	HRROI B,ACCTM1		;REPLY FOR THAT
	TLON F,L.LOGI		;LOGGED IN. WAS HE ALREADY?
	HRROI B,LOGIM1		;NO. THIS COMPLETES LOGIN SO SAY IT.
	JRST RPCRLP		;AND READ ON
ACCTM1:	ASCIZ /200 Account command accepted./

ACCTNG:	HRROI B,ACCTM2		;FAIL MESSAGE
	JRST RPCRLP		;ERROR REPLY. STILL HAS OLD (OR NONE)
ACCTM2:	ASCIZ /431 Account not valid./
ACTCCA:	HRROI B,[ASCIZ /200 ACCOUNT COMMAND IGNORED./]
	JRST RPCRLP

NOTNUM:	POP P,BP		;BACK TO START OF ACCOUNT STRING
	LDB C,BP		;AND GET THE CHAR THERE
	JUMPE C,ACCTNG		;CAN'T BE ALL BLANK
	MOVSI A,(1B1)		;SEE IF NON-NUMERIC ACCOUNT ALLOWED
	TDNN A,USRBLK+4		;FOR THIS USER
	JRST ACCTNG		;NO. COMPLAIN.
	SETZM ACCTST		;CLEAR THE STRING STORAGE
	MOVE A,[ACCTST,,ACCTST+1]
	BLT A,ACCTSE-1		; ..
	MOVE A,[440700,,ACCTST]	;YES. POINT TO ACCOUNT STRING STORAGE
	MOVEI B,0		;COUNT CHARACTERS
ACCTL1:	CAIL C,41		;RANGE CHECK CHARACTER STRING
	CAILE C,172		;IS THIS THE RIGHT RANGE? MAYBE.
	JRST ACCT01		;NOT IN RANGE. BETTER BE EOL.
	CAIL C,"A"+40		;CONVERT LOWER CASE TO UPPER
	CAILE C,"Z"+40
	SKIPA
	TRZ C,40
	IDPB C,A		;CHARACTER TO STRING ACCT STORAGE
	ILDB C,BP		;GET ANOTHER CHARACTER
	CAIGE B,^D39		;HAD ENOUGH ALREADY?
	AOJA B,ACCTL1		;NO. GO ON.
	JRST ACCTNG		;YES. STRING TOO LONG.

ACCT01:	JUMPN C,ACCTNG		;BETTER BE EOL. IF NOT, COMPLAIN.
	MOVE A,[440700,,ACCTST]	;OK. POINTER TO THE STRING
	PUSHJ P,ACTCHK		;VERIFY STRING ACCOUNT
	  JRST ACCTNG		;NOT VALID
	MOVEM A,$ACCT		;SAVE IN ACCOUNT PARAMETER STORAGE
	JRST ACCTOK		;AND SAY ACCOUNT RECEIVED OK

ORDERX:	HRROI B,ORDERM		;COMMANDS OUT OF ORDER
	JRST RPCRLP		;REPLY
ORDERM:	ASCIZ /504 LOGIN sequence not in right order./

FRMHST:	HRROI B,[ASCIZ / FROM HOST /]
	MOVEI C,0		;IDENTIFY THE LOGIN OR MAILER
	SOUT
	HRRZ B,FHSTN		;SITE CONNECTION IS FROM
	MOVEI C,10		;TYPE IN OCTAL IF NAME UNKNOWN
	CVHST			;TYPE NAME
	  NOUT			;TYPE NUMBER
	    JFCL
	POPJ P,0

;SOCK COMMAND

SOCK$:	SETOM $HOST		;DEFAULT HOST
	PUSHJ P,DECIN		;DECIMAL NUMBER ARGUMENT
	  JRST SOCKX1		;SYNTAX ERROR
	CAIE C,","		;HOST NUMBER?
	JRST SOCK01		;NO.
	SKIPL A			;YES. RANGE CHECK IT.
	CAIL A,400		;LEGAL ARPANET HOST?
	JRST SOCKX2		;NO.
	MOVEM A,$HOST		;YES. SAVE IT.
	PUSHJ P,DECIN1		;AND GET SOCKET NUMBER
	  JRST SOCKX1		;HAS TO BE ONE. DEFAULT NOT ALLOWED.
SOCK01:	CAIE C,0		;END OF LINE NOW?
	JRST SOCKX1		;NO. ERROR.
	TLNE A,740000		;LEGAL NUMBER?
	JRST SOCKX3		;NO.
	MOVEM A,$SOCK		;YES. SAVE IT.
	HRROI B,SOCKM1		;SUCCESS MESSAGE
	JRST RPCRLP		;AND RETURN TO COMMAND LOOP

SOCKX1:	HRROI B,SOCKM2		;HERE IF EOL NOT AT RIGHT PLACE
	JRST SOCKXX
SOCKX2:	HRROI B,SOCKM3		;HERE ON BAD HOST NUMBER
	JRST SOCKXX
SOCKX3:	HRROI B,SOCKM4		;HERE ON BAD SOCKET NUMBER (OVER 2**32)
SOCKXX:	SETOM $SOCK		;CLEAR TO DEFAULTS
	SETOM $HOST		; ..
	JRST RPCRLP		;REPLY

SOCKM1:	ASCIZ /200 Socket command accepted./
SOCKM2:	ASCIZ /501 Syntax error in SOCK command./
SOCKM3:	ASCIZ /503 Host number out of range 0 - 255./
SOCKM4:	ASCIZ /503 Socket number out of range./

;COMMANDS NOT YET FULLY IMPLEMENTED.

;BYE COMMAND. MINIMAL FOR NOW - DOESNT CHECK FOR CURRENT DATA ACTION.

BYE$:	HRROI B,BYEM1
	JRST ERRRPL
BYEM1:	ASCIZ /231 BYE command received./

;AND ABOR TOO

ABOR$:	TLNE F,L.ACTV		;FILE ACTIVITY?
	JRST DOABOR		;YES. ABORT IT
	HRROI B,ABORM1
	JRST RPCRLP
DOABOR:	TLO F,L.ABOR		;CAUSE ABORT TO HAPPEN
	HRROI B,ABORM2		;AND SAY IT WILL
	JRST RPCRLP		;BACK TO TOP.
ABORM1:	ASCIZ /202 ABOR request ignored./
ABORM2:	ASCIZ /200 Abort request noted./

;AND RESTART ISN'T YET IMPLEMENTED.

REST$:	HRROI B,RESTM1
	JRST RPCRLP
RESTM1:	ASCIZ /200 Restart received but ignored./

HELP$:	HRROI B,HELPM1
	PUSHJ P,SDUMPA		;SEND BIG ASCIZ STRING
	JRST COMLP		;GET NEXT COMMAND

DEFINE HLPMSG <XLIST
HELPM1:	ASCIZ /000 THE FOLLOWING COMMANDS ARE DEFINED:
100 USER, PASS, ACCT, BYTE (8,32,36 ONLY),SOCK, TYPE (A,I,L,XTP ONLY)
100 STRU (F ONLY), MODE (S ONLY), RETR, STOR,
100 APPE, RNFR, RNTO, DELE, LIST, NLST, STAT (FOR DIRECTORY LISTING)
100 BYE, MAIL, MLFL, NOOP, XCWD, CWD AND HELP.
/
LIST
>
	HLPMSG

;RETRIEVE COMMAND. FILE FROM SERVER TO USER

RETR$:	TRZ F,R.TYPX		;ASSUME NOT PAGED MODE
	TLO F,L.SEND		;THIS IS A SEND CONNECTION OF DATA
	SKIPG B,$BYTE		;ANY DECLARED BYTE SIZE?
	MOVEI B,10		;NO. SET IT TO DEFAULT EIGHT-BIT
	MOVEM B,$BYTE		; ..
	SKIPLE $MODE		;SEE IF DEFAULT STREAM MODE.
	JRST RETX0		;NO.
	MOVE C,$TYPE		;SEE IF PAGED TYPE
	CAIE C,TYPE.X		;IS IT PAGED?
	JRST RETR01		;NO, WILL FILTER LATER
	CAIE B,44		;36 BITS AND PAGED?
	JRST RETX0		;NO.
	TRO F,R.TYPX		;IT IS PAGED MODE. REMEMBER IN FLAG.
RETR01:	SKIPLE $STRU		;STRUCTURE MUST BE DEFAULT NON-RECORD
	JRST RETX0
	PUSHJ P,TIMEOK		;UPDATE TIMEOUT
	SETZM TYXSCT		;CLEAR NET SEQUENCE COUNT FOR PAGE MODE
	PUSHJ P,JBKINI		;INITILIZE GTJFN BLOCK
	MOVSI A,100000		;EXISTING FILE FOR READING
	MOVEM A,JBLOCK		;NO DEFAULT VERSION
	MOVEI A,JBLOCK		;ARGUMENT TO LONG GTJFN
	MOVSI B,(7B5)		;BACK UP POINTER
	ADD B,BP
	GTJFN			;OPEN THE LOCAL FILE
	  JRST RETX1
	MOVEM A,LCLJFN		;SAVE IT
	LDB C,B			;WAS TERMINATOR THE END OF LINE?
	JUMPN C,RETX2		;IF NOT, COMPLAIN
	PUSHJ P,JFNTXT		;STASH FILE NAME IN TXT STORAGE
	SKIPUNLESS BINL
	PUSHJ P,BNLRET		;LOG THE RETRIEVE STARTING
	TLZ F,L.LDSK!L.RNIL	;CLEAR A COUPLE FLAGS
	MOVE A,LCLJFN		;OK. SEE WHAT TYPE DEVICE IT IS ON
	DVCHR
	HLRZS B			;TYPE FIELD
	ANDI B,777
	CAIN B,15		;IS IT THE NIL:?
	JRST RETNIL		;SPECIAL HANDLING FOR NIL
	CAIN B,0		;DISK?
	TLO F,L.LDSK		;LOCAL DISK FILE.
	SKIPLE P1,$TYPE		;DEFAULT ASCII TYPE?
	JRST RET03		;NO.
	MOVE B,[070000,,200000]	;YES. READ IN 7-BIT BYTES.
	JRST RETOPN		;OPEN THE FILE
RET03:	CAIE P1,TYPE.L		;LOCAL BYTE?
	JRST RET04		;NO.
	MOVE B,$BYTE		;GET THE CONNECTION BYTE SIZE
	ROT B,-6		;TO BYTE FIELD FOR OPEN
	HRRI B,200000		;AND OPEN FOR READ
	JRST RETOPN		;OPEN IT.

RETNIL:	TLO F,L.RNIL		;FLAG TO PHONY UP A NIL
	JRST RET02		;BYPASS OPENING IT.

RET04:	CAIN P1,TYPE.X		;PAGED TYPE?
	JRST RETOP0		;YES. CHECKING DONE.
	CAIE P1,TYPE.I		;IMAGE TYPE?
	JRST RETX4		;NO. UNKNOWN TYPE. (IMPOSSIBLE)
	MOVE D,$BYTE		;GET THE BYTE SIZE
	CAIE D,44		;ONLY SUPPORT IMAGE 36 BITS NOW.
	TLNE F,L.LDSK		;EXCEPT OK ON DISK
	SKIPA
	JRST RETX4		;SAY NOT SUPPORTED, IF NOT 36-BITS.
	HRROI B,SLOWM1		;BUT GIVE THE GUY A COMMENT
	CAIE D,44		;THAT IT WILL BE SLOW IF 8 OR 32
	PUSHJ P,SDUMPA		;DUMP ON TELNET SEND
RETOP0:	MOVE B,[440000,,200000]	;OK FOR OPEN.
	JRST RETOPN
RETOPN:	MOVE A,LCLJFN		;GET LOCAL JFN BACK
	PUSH P,B		;SAVE OPEN FLAGS.
	OPENF
	  JRST [POP P,B
		TRON B,1B25	;TRY IT THAWED
		JRST RETOPN
		JRST RETX2]	;ALREADY DID. FAIL.
	POP P,B		;CLEAR STACK
	TLNN F,L.LDSK		;LOCAL DEVICE A DISK?
	JRST RET02		;NO. DON'T TRY TO CHECK ACCESS
	MOVSI B,(ACCBRD)	;CHECK FOR READ ACCESS TO FILE
	PUSHJ P,CHKACC		; ..
	  JRST RETX3		;NO GOOD.
RET02:	PUSHJ P,PREDAT		;SET UP THE DATA CONNECTION
	  JRST RPCRLP		;CAN'T. RETURN REASON.
	TRNN F,R.TYPX		;PAGED MODE?
	JRST RET02B		;NO.
	MOVE A,$BYTE		;YES. MUST BE DISK OR NIL AND 36 BITS
	CAIE A,44		; ..
	JRST RETX0		;NOT 36 BITS
	TLNN F,L.RNIL!L.LDSK	;DISK OR NIL?
	JRST RETXPX		;NO.
RET02B:	MOVE A,SJFN		;SEND STARTED MSG
	HRROI B,[ASCIZ /250 Retrieve of /]
	SKIPL D,$TYPE		;OR MORE SPECIFIC MESSAGE.
	CAIN D,TYPE.A		;ASCII TYPE?
	HRROI B,[ASCIZ /250 ASCII retrieve of /]
	CAIN D,TYPE.I
	HRROI B,[ASCIZ /250 IMAGE retrieve of /]
	MOVEI C,0
	SOUT
	HRRZ B,LCLJFN		;FILE NAME
	MOVE C,[211110,,040001]	;FORMAT BITS
	JFNS
	HRROI B,[ASCIZ / started.
/]
	PUSHJ P,SDUMP0		;SEND MSG AND DUMP BUFFER
	HRROI B,[ASCIZ /RETRIEVE /]
	PUSHJ P,OPNLOG
	  JRST RET2A		;CAN'T LOG
	HRRZ B,LCLJFN
	MOVE C,[211110,,040001]
	JFNS			;LOG THE RETRIEVAL
	SKIPIF CCA
	  JRST RET02C
	MOVEI A,TXPO
	JFNS
RET02C:	PUSHJ P,CLSLOG		;CLOSE FILE
RET2A:	TLNE F,L.LDSK		;LOCAL FILE A DISK?
	JRST RETDSK		;YES.
	TLNE F,L.RNIL		;NIL FILE?
	JRST RETNL1		;YES.

RETL:	MOVE A,LCLJFN		;GET SOME INPUT
	BIN
	JUMPN B,RETNN
	GTSTS
	TLNE B,1000
	  JRST RETEOF
	MOVEI B,0
RETNN:	MOVE A,DATJFN
	BOUT
	PUSHJ P,TIMEOK		;WASTEFUL, EVERY BYTE, BUT...
	MOVE A,$BYTE		;CURRENT BYTE SIZE
	ADDM A,TSBITS		;ADD TO TOTAL SENT BITS
	JRST RETL

RETNL1:	SETO A,			;FREE UP THE WINDOW PAGE
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	MOVE A,$BYTE		;GET THE BYTE SIZE
	CAILE A,10		;10 OR DEFAULT?
	JRST RETNL2		;NO, 32 OR 36.
	MOVE A,[BYTE (8)377,0,377,0]
	MOVEM A,WINDOW		;ALTERNATING BYTES
	MOVE A,[WINDOW,,WINDOW+1]
	BLT A,WINDOW+777	;WHOLE PAGE OF THEM
	JRST RETNL3

RETNL2:	MOVSI D,-1000		;SET UP A PAGE OF -1 AND 0
	SETZ A,
	SETCAB A,WINDOW(D)	; ..
	AOBJN D,.-1		;WHOLE PAGE
RETNL3:	MOVE P1,$BYTE		;BYTE SIZE
	CAIG P1,10		;HANDLE DEFAULT
	MOVEI P1,10
	MOVEI P2,1000		;NUMBER OF BYTES IN A PAGE
	CAIN P1,10		;UNLESS 4 PER WORD,
	MOVEI P2,4000		;THIS NUMBER PER PAGE
	MOVE T1,[^D1000000]	;A MILLION BITS
	IDIVI T1,(P1)		;IS THIS MANY BYTES
	SKIPE T2		;PARTIAL WORD?
	ADDI T1,1		;YES. (36 BITS)
	MOVE BP,P1		;NOW BUILD BYTE POINTER
	ROT BP,-14
	HRRI BP,WINDOW-1	; ..
	MOVEI P1,(T1)		;NUMBER OF BYTES
	MOVEM P1,FDBBLK+12	;SAVE LENGTH FOR EOF
RETNLL:	MOVE A,DATJFN		;SEND CONNECTION
	MOVE B,BP		;STARTING POINTER
	MOVNI C,(P1)		;NUMBER OF BYTES LEFT IN MEGABIT
	CAILE P1,(P2)		;THIS MAKE A MILLION?
	MOVNI C,(P2)		;NO, SEND A WHOLE PAGE
	MOVN T2,C		;PLUS THIS BUNCH OF WORDS
	IMUL T2,$BYTE		;THIS MANY BITS
	ADDM T2,TSBITS		;ADD TO TOTAL SENT BITS
	ADD P1,C		;UPDATE HOW MANY TO GO
	SOUT			;SEND THIS BUNCH
	JUMPG P1,RETNLL		;IF MORE TO GO, SEND MORE.
				;NO MORE IF FALL THRU. CLOSE FILE.
	TRNN F,R.TYPX		;PAGED TYPE?
	JRST RETEOF		;NO, JUST CLOSE.
	MOVE A,[400100,,25]	;MAKE UP A PHONY FDB FOR THE NIL FILE
	MOVEM A,FDBBLK		; ..
	MOVSI A,(1B0)		;CALL IT A TEMP FILE
	MOVEM A,FDBBLK+1
	SETZM FDBBLK+2
	MOVE A,[FDBBLK+2,,FDBBLK+3]
	MOVE B,FDBBLK+12	;PRESERVE LENGTH
	BLT A,FDBBLK+25		;CLEAR REST
	MOVEM B,FDBBLK+12	;RESTORE LENGTH
	MOVSI A,(5B2)		;MAKE A PROTECTION
	HRRI A,770000		; ..
	MOVEM A,FDBBLK+4	; ..
	MOVE A,$BYTE
	LSH A,30		;BYTE SIZE IN B6-B11
	MOVEM A,FDBBLK+11	; ..
	PUSHJ P,RETPEF
	JRST RETEOF		;END OF THE NIL FILE

RETEOF:	MOVEI B,21		;SEND PARTIAL BUFFER
	SKIPL A,DATJFN
	MTOPR			; ..
	JSP X,RETXX		;TYPE FOLLOWING MSG, CLOSE JFN'S.
MESS99:	ASCIZ /252 Transfer completed./

RETXPX:	JSP X,RETXX
	ASCIZ /457 Paged transfer requested, but not on DSK or NIL./
RETX0:	HRROI X,RET506
	JRST RETXX		;CLOSE UP AND RETURN
STO506:
RET506:	ASCIZ /457 Parameter combination illegal or unimplemented./

RETX4:	MOVEI X,RET506
	JRST RETXX		;ERROR AND CLOSE.
RETX1:
RETX2:	MOVEI X,RETLUZ		;ERROR MESSAGE
	JRST RETXX
RETX3:	MOVEI X,ACCESM		;ACCESS DENIED MESSAGE
RETXX:	SETO A,			;UNMAP THE WINDOW PAGES
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	ADDI B,1
	PMAP
	HRRI B,<WINDW2/1000>
	PMAP
	ADDI B,1
	PMAP
	CLOSE LCLJFN		;CLOSE THESE FILES IF OPEN
	CLOSE DATJFN		; ..
	HRROI B,0(X)
	JRST RPCRLP		;REPLY
RETLUZ:	ASCIZ /450 File not found./
ACCESM:	ASCIZ /451 You do not have access for that file operation./

;DISK RETRIEVE ROUTINE.

RETDSK:	TRNE F,R.TYPX		;PAGED TRANSFER MODE?
	JRST RETDPG		;YES.
	LDB D,[POINT 6,FDBBLK+11,11]	;FILE BYTE SIZE
	MOVEI C,44		;FIND BYTES PER WORD
	SKIPE D			;IN CASE OF JUNK
	IDIVI C,(D)		; ..
	MOVE A,FDBBLK+12	;BYTES PER THIS FILE
	IDIV A,C		;WORDS PER THIS FILE
	SKIPE B			;PARTIAL WORD?
	ADDI A,1		;YES. COUNT IT.
	MOVEM A,LWORDS		;WORDS IN THE LOCAL FILE, IF ALL SEQ
	SETOM WINDPN		;SCAN TO SEE IF ANY HOLES
RETDL2:	AOS A,WINDPN		;A PAGE TO CHECK
	HRL A,LCLJFN		;IN THIS FILE
	RPACS			;SEE IF ITS THERE
	TLNE B,(1B5)		;EXIST?
	JRST RETDL2		;YES. LOOK ONWARD.
	FFUFP			;SEE IF ANY PAGES ARE USED BEYOND HERE.
	  JRST RETD00		;NO. SIMPLE SEQUENTIAL FILE.
	MOVSI D,(1B1)		;YES. MAKE LENGTH BE INFINITE, USE
	MOVEM D,LWORDS		; OTHER TEST FOR END.
RETD00:	SETZM WINDPN		;PAGE NUMBER FOR FILE WINDOW
RETDL:	MOVS A,LCLJFN		;LOCAL FILE
	HRR A,WINDPN		;PAGE IN IT
	MOVE B,LWORDS		;LOCAL WORDS IN FILE
	LSH B,-11		;PAGES IN FILE
	CAMGE B,WINDPN		;PAST LAST PAGE?
	JRST RETEOF		;YES, END OF FILE.
	RPACS			;PAGE ACCESS BITS
	TLNE B,(1B5)		;PAGE EXIST?
	JRST RETD01		;YES. SEND IT.
	FFUFP			;SEE IF ANY MORE PAGES BEYOND.
	  JRST RETEOF		;NO. END OF FILE.
	SETO A,			;YES. PRETEND THIS HOLE WAS A PAGE OF 0.
RETD01:	MOVE B,[400000,,<WINDOW/1000>]
	MOVSI C,(1B2)		;MAP IN THE PAGE
	PMAP

RETD02:	MOVE D,LWORDS		;LOCAL WORDS IN FILE
	LSH D,-11		;PAGES
	MOVE C,LWORDS		;WHOLE WORDS AGAIN
	ANDI C,777		;PARTIAL PAGE
	CAMLE D,WINDPN		;TO LAST PAGE YET?
	MOVEI C,1000		;NO. USE WHOLE PAGE
	MOVNS C			;- NUMBER OF WORDS
	MOVE A,LCLJFN		;FIND BYTE SIZE
	RFBSZ			;DECIDED ON EARLIER
	CAIN B,7		;FIVE PER WORD?
	IMULI C,5
	CAIN B,10		;FOUR PER WORD?
	IMULI C,4
	ROT B,-14		;BYTE SIZE FOR SOUT BYTE PTR
	IOR B,[440000,,WINDOW]	;POINTER FOR SOUT
	MOVE T1,$TYPE		;SEE IF IT IS IMAGE MODE
	CAIN T1,TYPE.I		; ..
	JRST RETIMG		; YES.
RETD03:	MOVE A,DATJFN		;SINK FOR SOUT
	MOVE T2,$BYTE		;BYTE SIZE
	IMUL T2,C		;MINUS NUMBER OF BITS BEING SENT
	MOVNS T2		;PLUS THAT MANY
	ADDM T2,TSBITS		;ADD TO TOTAL SENT BIT COUNT
	SOUT
	AOS WINDPN		;COUNT TO NEXT PAGE
	PUSHJ P,TIMEOK		;UPDATE TIMER
	JRST RETDL		;NEXT PAGE, IF ANY.

RETIMG:	MOVE T2,$BYTE		;IS IT 36 BIT IMAGE?
	CAIN T2,44
	JRST RETD03		;YES. TREAT SIMPLY.
	PUSH P,C		;NO. HAVE TO SHUFFLE DATA AROUND
	MOVSI A,-1000		;COUNT THRU A PAGE OF DATA
	MOVSI B,-10		;EIGHT STATE COUNTER
	MOVE C,[-2000,,WINDW2-1] ;DESTINATION
RETIM1:	MOVE T1,WINDOW(A)	;GET 36 BITS
	AOBJN C,.+1		;DESTINATION UP BY 1
	TRNN B,-1		;EVERY 8 PASSES, COUNT ANOTHER OUTPUT WD
	  AOBJN C,.+1
	LSHC T1,@IMISHT(B)	;SHIFT RIGHT INTO T2
	DPB T1,IMIPT1(B)	;STORE THE LEFT PART
	MOVEM T2,0(C)		;AND THE RIGHT PART INTO NEXT WORD
	AOBJN B,.+2		;STEP THE COUNT-TO-8 COUNTER
	  MOVSI B,-10		;RESTART IT
	AOBJN A,RETIM1		;PROCESS WHOLE PAGE THIS WAY
	POP P,C			;GET BACK NUMBER OF BYTES TO SEND
	IMULI C,11		;NINE EIGHTHS
	ASH C,-3		; ..
	MOVE B,$BYTE		;GET THE BYTE SIZE
	CAIG B,10		;WORDS OR BYTES?
	ASH C,2			;BYTES. FOUR TIMES THAT.
	LSH B,30		;TO PLACE IT GOES IN BYTE PTR
	IOR B,[440000,,WINDW2]	;POINTER TO TRANSLATED DATA
	JRST RETD03		;GO SEND IT FROM SECOND WINDOW

IMISHT:	REPEAT 10,<	XWD 0,-4*<.-IMISHT+1>>
IMIPT1:	REPEAT 10,<	POINT ^D<32-<4*<.-IMIPT1>>>,-1(C),31>

RETDPG:	SETOM WINDPN		;START AT PAGE 0
RETDP1:	AOS A,WINDPN		;PAGE TO CONSIDER
RETDP3:	HRRZM A,PAGNO		;STORE FILE PAGE NUMBER FOR NET
	HRL A,LCLJFN		;SEE IF PAGE IS THERE
	RPACS			; ..
	MOVEM B,ACCESS		;SAVE BITS FOR NET
	TLNN B,(1B5)		;PAGE EXIST?
	JRST RETDP2		;NO
	MOVE B,[400000,,<WINDOW/1000>]
	MOVSI C,(1B2)		;YES. MAP IT IN FOR READING
	PMAP			; ..
	SETZM RECTYP		;DATA RECORD
	MOVEI A,1000		;LENGTH IS ONE PAGE
	MOVEM A,TYXNDW		;STORE IN HEADER, NUMBER DATA WDS
	PUSHJ P,RETPP1		;OUTPUT IT
	PUSHJ P,TIMEOK		;UPDATE TIMEOUT TIMER
	JRST RETDP1		;ON TO NEXT PAGE

RETDP2:	FFUFP			;THIS PAGE NONEX. ANY MORE?
	  JRST RETDP4		;NO.
	HRRZM A,WINDPN		;YES, HERE IT IS.
	JRST RETDP3		;GO SEND IT.
RETDP4:	PUSHJ P,RETPEF		;OUTPUT THE FILE TRAILER
	JRST RETEOF		;AND GO CLOSE OUT.

RETPEF:	SETZM ACCESS		;END OF FILE. CLEAR THESE OUT.
	SETZM PAGNO		; ..
	MOVNI A,3		;HEADER FOR EOF
	MOVEM A,RECTYP		; ..
	SETO A,			;RELEASE WINDOW
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	MOVSI A,FDBBLK		;PUT THE FDB IN IT
	HRRI A,WINDOW
	BLT A,WINDOW+24		; ..
	MOVEI A,25		;NUMBER OF DATA WORDS IN FDB
	MOVEM A,TYXNDW		;TO HEADER FOR NET
 ; FALL THRU TO RETPP1

; FALL THRU FROM ABOVE, ALSO CALL HERE.

RETPP1:	AOS A,TYXSCT		;COUNT THE NET SEQ NUMBER
	MOVEM A,SEQNO		;PUT IT IN NET HEADER AREA
	SETZM CHKSUM		;INITIALIZE CHECKSUM
	PUSHJ P,PGCKSM		;CHECKSUM HEADER AND PAGE
	SETCAM A,CHKSUM		;STORE FOR SENDING
	MOVE A,DATJFN		;SEND IT
	MOVEI B,TYXHDN		;SEND LENGTH OF HEADER
	BOUT
	MOVNI C,TYXHDN		;SEND THE HEADER
	MOVE B,[444400,,TYXHED]
	SOUT
	MOVN C,TYXNDW		;AND THE DATA AREA, THIS LONG.
	MOVE B,[444400,,WINDOW]
	SOUT
	POPJ P,0

PGCKSS:	MOVN B,MLFWST		;LENGTH OF RECEIVED HEADER STASHED HERE.
	HRLZ B,B		;MAKE AOBJN POINTER
	HRRI B,MLFWST+1		;TO REST OF HEADER
	JRST PGCKS1		;COUNT THAT AND ITS DATA

PGCKSM:	MOVSI B,-TYXHDN		;LENGTH OF HEADER ON RETR
	HRRI B,TYXHED		;LOCATION OF HEADER ON RETR
PGCKS1:	MOVEI A,0
	JCRY0 .+1
PGCKL1:	ADD A,0(B)		;CHECKSUM THE HEADER
	JCRY0 [AOJA A,.+1]
	AOBJN B,PGCKL1
	MOVN B,TYXNDW		;NUMBER OF DATA WORDS
	HRLZS B			;AOBJN COUNTER
	JCRY0 .+1
PGCKL2:	ADD A,WINDOW(B)
	JCRY0 [AOJA A,.+1]
	AOBJN B,PGCKL2
	AOJE A,CPOPJ
	SOJA A,CPOPJ

;STORE AND APPEND COMMANDS. FILE FROM REMOTE TO SERVER.

STOR$:	TLZA F,L.APPE		;NOT APPEND
APPE$:	TLO F,L.APPE		;APPEND. MUCH LIKE STOR.
	TLZ F,L.SEND		;NET CONN IS RECEIVER
	TRZ F,R.TYPX		;ASSUME NOT PAGED MODE
	SETZM TYXSCT		;BUT IF IT IS, START AT SEQ ZERO
	SETZM RECTYP		;IN CASE EOF COMES IN IMMEDIATELY.
	PUSHJ P,PREDAT		;SET UP COMMON PARAMS,
	  JRST RPCRLP		;NO GOOD. MSG IN B.
	SETZM IBITCT		;IMAGE BIT COUNT IS 0
	SKIPG A,$BYTE		;BYTE STILL AT DEFAULT?
	MOVEI A,10		;YES. SET TO REAL SIZE
	MOVEM A,$BYTE		; ..
	SKIPLE B,$MODE		;STREAM MODE?
	JRST STOX0		;NO. UNSUPPORTED.
	MOVE B,$TYPE		;SEE IF PAGED TYPE
	CAIE B,TYPE.X		; ..
	JRST STO00		;  NO
	CAIE A,44		;AND 36 BIT BYTES?
	JRST STOX0		;NO. BAD.
	TLNE F,L.APPE		;YES. STOR, I HOPE.
	JRST STOX0		;NO. CANT APPEND IN PAGE MODE
	TRO F,R.TYPX		;OK. FLAG PAGE MODE IN AC F
STO00:	SKIPLE $STRU		;ONLY FILE STRUCTURED SO FAR.
	JRST STOX0
	PUSHJ P,TIMEOK		;UPDATE TIMEOUT.
	PUSHJ P,JBKINI		;SET UP THE DEFAULT STRINGS IN GTJFN BLK
	MOVSI A,(1B0+1B13)	;OUTPUT USE BIT AND REQUEST BITS BIT
	TLNE F,L.APPE		;UNLESS APPEND, WHENCE
	MOVSI A,(1B13)		;USE CURRENT VERSION IF ANY.
	TLNE F,L.ANON		;IF ANONYMOUS, NO NEW FILES AT ALL.
	MOVSI A,(1B2+1B13)	;SO DON'T DEFAULT TO NEW VERSION
	MOVEM A,JBLOCK		; ..
	MOVEI A,JBLOCK		;ARG TO LONG GTJFN
	MOVSI B,(7B5)		;AND HIS STRING POINTER
	ADD B,BP		;BACK UP TO FIRST NON-NULL CHAR.
	GTJFN			;GET IT.
	  JRST STOX1		;CAN'T
	HRRZM A,LCLJFN		;STORE THE JFN
	SKIPE JBLOCK+7		;WAS THERE AN ACCOUNT?
	JRST STO01		;YES. MAIN STRING POINTER NOT NEEDED.
	SKIPUNLESS CCA
	  JRST STO01
	TLNN A,(1B10)		;AN ACCOUNT SPECIFIED?
	JRST STOX5		;NO. BAD.
STO01:	LDB C,B			;GET THE TERMINATOR
	JUMPN C,STOX2		;JUMP IF NOT EOL
	MOVE A,LCLJFN		;OK. NAME WAS GOOD.
	PUSHJ P,JFNTXT		;STORE THE TEXT STRING FOR FILE NAME
	SKIPIF BINL
	  JRST STO01A
	TLNN F,L.APPE		;LOG THE APPEND OR STORE
	PUSHJ P,BNLSTO
	TLNE F,L.APPE
	PUSHJ P,BNLAPP		; ..

STO01A:	MOVE A,LCLJFN
	DVCHR			;SEE WHAT DEVICE IT'S ON.
	TLNN B,777		;DISK?
	TLOA F,L.LDSK		;YES.
	TLZ F,L.LDSK		;NO
	HLRZ B,B		;CHECK FOR NIL TOO
	ANDI B,777
	CAIN B,15		;NIL DEVICE?
	TLOA F,L.RNIL		;YES
	TLZ F,L.RNIL		;NO
	TRZ F,R.RLPT		;ASSUME NOT TO SPOOLED LPT
	CAIN B,7		;LPT?
	JRST STOLPT		;YES. GO SEE IF SPOOLED
	SKIPLE P1,$TYPE		;TYPE PARAMETER.
	JRST STO03		;NOT ASCII
STOLP1:	MOVSI B,(7B5)		;WRITE 7-BIT BYTES
	JRST STOOPN		;OPEN THE FILE

STOLPT:	SKIPLE LPTDNM		;SPOOLED LPT?
	JRST STOSPL		;YES
	MOVE B,$BYTE		;NO. REAL ONE. ONLY ALLOW ASCII 8BIT
	CAIN B,10		;EIGHT BIT CONN?
	SKIPLE P1,$TYPE		;AND ASCII?
	JRST .+2		;NO.
	JRST STOLP1		;YES. SIMPLE LOOP DOES IT.
STLPX1:	JSP X,STOXX		;ERROR.
ASCIZ /503 TRANSFERS TO LPT MUST BE ASCII, 8-BIT CONNECTIONS./

STOSPL:	MOVE B,$BYTE		;CHECK FOR EIGHT BIT OR 36 BIT ONLY
	CAIE B,10
	CAIN B,44
	SKIPA			;OK
	JRST STLPX1		;NO, GIVE SAME ERROR MSG FOR 32 BIT.
	TRO F,R.RLPT		;OK, FLAG WILL TAKE SPOOLED LPT.
	CLOSE LCLJFN		;GET RID OF THE EXISTING JFN
	HRROI A,STRTMP		;BUILD A NEW JFN NAME
	HRROI B,LPTPFX		; ..
	MOVEI C,0
	SOUT
	MOVE B,FHSTN		;HOST IT'S COMING FROM
	MOVEI C,10
	CVHST
	  NOUT
	    JFCL
	MOVEI B,"."
	BOUT

	TLNE F,L.ANON
	JRST STOX5		;DON'T ALLOW ANONYMOUS LPT USE
	HRRZ B,$USER		;USER NAME
	DIRST			;TO LPT FILE NAME
	  JRST STOX2		;FAILED?!?
	MOVSI A,400001		;THAT COMPLETES THE NAME. GET A JFN
	HRROI B,STRTMP
	GTJFN
	  JRST STOX2		;WOOPS.
	MOVEM A,LCLJFN		;SAVE THE JFN
	JRST STOLP1		;OK, GO OPEN IN 7-BIT MODE

STO03:	CAIE P1,TYPE.L		;LOCAL BYTE MODE?
	JRST STO04		;NO.
	MOVE B,$BYTE		;GET THE BYTE SIZE
	ROT B,-6		;TO RIGHT PLACE FOR OPENF
	JRST STOOPN		;OPEN THE FILE

STO04:	CAIN P1,TYPE.X		;PAGED MODE?
	JRST STOOP0		;YES. ALL CHECKED OUT
	CAIE P1,TYPE.I		;IMAGE TYPE?
	JRST STOX4		;NO. UNIMPLEMENTED.
	MOVE D,$BYTE		;BYTE SIZE
	CAIE D,44		;ONLY 36 BIT IMAGES EXIST FOR NOW.
	TLNE F,L.LDSK!L.RNIL	;EXCEPT ALLOW IT ON DSK AND NIL
	SKIPA
	JRST STOX4
	HRROI B,SLOWM1		;BUT COMPLAIN ABOUT IT.
	CAIE D,44		;IF NOT 36 BIT MODE
	PUSHJ P,SDUMPA		;SEND DOWN TELNET CONN
STOOP0:	MOVSI B,(44B5)		;OK. OPEN TO WRITE IT THAT WAY
	JRST STOOPN		; ..

STOOPN:	HRRI B,100000		;BIT FOR WRITING
	TLNE F,L.APPE		; OR
	HRRI B,020000		;BIT FOR APPENDING
	PUSH P,B		;HOLD THE OPEN BITS
	TLNN F,L.LDSK		;LOCAL FILE ON DISK?
	JRST STO02		;NO
	MOVSI B,(ACCBWR)	;YES. SEE IF CAN WRITE THIS FOR USER
	TLNE F,L.APPE		; OR
	MOVSI B,(ACCBAP)	;TRY APPENDING
	MOVE A,LCLJFN		; ..
	PUSHJ P,CHKACC		; ..
	  JRST STOX3		;NO.
STO02:	POP P,B			;RESTORE OPENF SIZE AND DIRECTION
	MOVE A,LCLJFN		;RESTORE THE JFN
	OPENF			;OPEN ACCORDING TO STUFF IN B
	  JRST STOX2		;CAN'T.
	MOVE A,SJFN		;OK. TELL USER WE ARE READY TO GO.
	HRROI B,[ASCIZ /250 Store of /]
	TLNE F,L.APPE		;OR APPEND MSG
	HRROI B,[ASCIZ /250 Append to /]
	MOVEI C,0
	SOUT
	HRRZ B,LCLJFN		;DISK FILE OR WHATEVER
	MOVE C,[211111,,140001]	;BITS FOR FORMAT
	SKIPUNLESS CCA
	MOVE C,[211110,,040001]	;BITS FOR FORMAT
	JFNS
	HRROI B,[ASCIZ / started.
/]
	SKIPL D,$TYPE		;OR MORE SPECIFIC MESSAGE
	CAIN D,TYPE.A		;ASCII?
	HRROI B,[ASCIZ /, ASCII type, started.
/]
	CAIN D,TYPE.I		;IMAGE?
	HRROI B,[ASCIZ /, Image type, started.
/]
	PUSHJ P,SDUMP0		;SEND MSG AND DUMP BUFFER

STOLOG:	HRROI B,[ASCIZ /STORE /]
	TLNE F,L.APPE
	HRROI B,[ASCIZ /APPEND /]
	PUSHJ P,OPNLOG
	  JRST STO02A
	HRRZ B,LCLJFN
	MOVE C,[211111,,140001]
	SKIPUNLESS CCA
	MOVE C,[211110,,040001]
	JFNS			;LOG THE WRITE
	SKIPIF CCA
	  JRST STOLGC
	MOVEI A,TXPO
	JFNS
STOLGC:	PUSHJ P,CLSLOG
STO02A:
STOL:	TRNE F,R.TYPX		;PAGED MODE?
	JRST STOTYX		;YES.
	MOVE A,DATJFN		;GET BYTE FROM NET DATA CONNECTION
	MOVE B,$BYTE		;GET BYTE SIZE
	MOVNI C,1000		;ASSUME 36 BIT BYTE
	CAIG B,10		;OR 32 BIT. 8-BIT IS 4 PER WORD
	MOVNI C,4400		; ..
	CAIN B,40		;IF 32 BIT, GET MORE THAN A PAGE, SO
	MOVNI C,1100		;AN EVEN NUMBER OF 36 BIT WDS
	LSH B,30		;MAKE THE SIN POINTER
	HRRI B,WINDOW-1		; ..
	PUSH P,B		;SAVE FOR LATER CONTEMPLATION
	PUSH P,C		;AND THE CHAR COUNT TOO
	SIN			;READ FROM THE NET DATA CONN
STONN:	MOVE A,LCLJFN		;GET LOCAL FILE HANDLE
	RFBSZ			;GET WRITING FILE SIZE
	CAME B,$BYTE		;SAME AS NET?
	JUMPN B,STONSS		;NOT SAME SIZE (EXCEPT NIL, SIZE =0)
STON1:	POP P,D			;ORIGINAL COUNT
	POP P,B			;ORIGINAL POINTER
	SUB C,D			;C GETS POS NUMBER WORDS TRANSFERRED
	IMULI C,44		;BITS
	ADDM C,IBITCT		;COUNT THEM
	ADDM C,TRBITS		;ADD TO TOTAL FOR THIS LOGIN
	IDIVI C,44
	MOVNS C			;NOW NEGATIVE
	TLNN F,L.RNIL		;IF NOT NIL,
	SOUT			;SEND THEM.
STOEFQ:	MOVE A,DATJFN		;CHECK FOR END OF FILE
	GTSTS			; ..
	TLNE B,600000		;ERRORS OR CLOSED?
	TLNE B,400		; ..
	JRST STOERR		;ERRORS.
	TLNE B,1000		;EOF?
	JRST STOEOF		; YES.
	PUSHJ P,TIMEOK		;UPDATE TIME.
	JRST STOL		;LOOP TILL CONNECTION CLOSES

;HERE TO READ PAGED MODE FROM NET

STOTYX:	SETO A,			;RELEASE ANY PREVIOUS WINDOW
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	SKIP WINDOW		;TOUCH IT TO CREATE PRIVATE PAGE.
	MOVE A,DATJFN		;GET FIRST BYTE, SHOULD BE HDR LENGTH
	BIN
	JUMPE B,STXEFQ		;SEE IF EOF, IF ZERO
	MOVEM B,MLFWST		;SAVE IT IN THIS BORROWED SCRATCH AREA
	CAIL B,6		;ALLOW A RANGE FOR GROWTH
	CAILE B,12		;SIX TO TEN SOUNDS FAIR
	JRST STXFER		;FORMAT ERROR
	MOVNI C,0(B)		;READ THAT MUCH HEADER
	MOVE B,[444400,,MLFWST+1] ;IN THIS SAME SCRATCH AREA
	SIN
	JUMPN C,STXFER		;IF DIDN'T GET IT ALL, FORMAT ERR.
	MOVE C,[MLFWST+1,,TYXHED] ;COPY IT TO REAL HEADER
	BLT C,TYXHED+TYXHDN-1	; ..
	MOVE C,TYXNDW		;SEE HOW LONG THE DATA AREA IS
	CAIL C,0
	CAILE C,1000		;UP TO A PAGE
	JRST STXFER		;NO GOOD. FORMAT ERROR
	MOVE B,[444400,,WINDOW]	;READ THE DATA INTO WINDOW
	MOVNI C,(C)
	SKIPE C			;IN CASE DATA AREA EMPTY
	SIN
	JUMPN C,STXFER		;MUST GET IT ALL, ELSE FORMAT ERR
	AOS C,TYXSCT		;CHECK SEQUENCE COUNTER
	CAME C,SEQNO		; ..
	JRST STXSQE		;NO GOOD.
	PUSHJ P,PGCKSS		;CHECKSUM TO A
	JUMPN A,STXCKE		;CHECKSUM ERROR IF NON-ZERO
	TLNE F,L.LDSK		;NOW, IS THIS TO A DISK?
	JRST STXDSK		;YES. GO PAGE IT OUT
	SKIPE RECTYP		;DATA RECORD?
	JRST STOEFQ		;NO. IGNORE IT.
	MOVN C,TYXNDW		;FOR NON-DISK, RETURN TO OLD CODE
	PUSH P,[444400,,WINDOW]	;SET STACK WITH SIN POINTERS
	PUSH P,C
	MOVEI C,0		;AS IF SIN READ WHOLE BLOCK
	JRST STONN		;AND GO PROCESS THE WINDOW.

STXDSK:	MOVN A,RECTYP		;SEE WHAT TYPE IT IS
	JUMPE A,STXDDT		;IF ORDINARY DATA, GO MAP OUT.
	CAIE A,3		;EOF?
	JRST STOEFQ		;NO, IGNORE (FOR EXPANSION)
STXEOF:	MOVE A,TYXNDW		;SEE IF THIS LOOKS LIKE AN FDB
	CAIL A,25
	CAILE A,30
	JRST STXFER		;NO, I DON'T THINK SO.
	MOVSI D,-NFDBMX		;YES. PROCESS STUFF IN FDB
STXEFL:	MOVE A,LCLJFN		;MAKE FDB POINTER
	HRL A,FDMXT1(D)		;OFFSET INTO FDB
	MOVE B,FDMXT2(D)	;MASK FOR IT
	XCT FDMXT3(D)		;HOW TO GET DATUM FOR IT
	CHFDB			;CHANGE THE DATUM
	AOBJN D,STXEFL		;LOOP THRU TABLES
	JRST STOEFQ		;AND GO WRAP IT UP.

FDMXT1:	EXP 1,6,11,12,24,15	;WORDS OF FDB TO SET
NFDBMX==.-FDMXT1
FDMXT2:	400001,,0		;TMP AND EPH BITS
	-1,,0			;AUTHOR
	77B11			;BYTE SIZE
	-1			;EOF POINTER
	-1			;USER SETTABLE WORD
	-1			;REFERENCE DATE
FDMXT3:	MOVE C,WINDOW+1
	HRLZ C,$USER
	MOVE C,WINDOW+11
	MOVE C,WINDOW+12
	MOVE C,WINDOW+24
	PUSHJ P,[PUSH P,A
		GTAD
		MOVE C,A
		POP P,A
		POPJ P,0]

STXDDT:	MOVE A,[400000,,<WINDOW/1000>]	;FROM FORK SPACE (PRIVATE)
	MOVE B,PAGNO		;TO FILE PAGE
	HRL B,LCLJFN		; ..
	MOVSI C,040000		;WRITE ACCESS
	PMAP
	MOVE A,B		;FILE HANDLE
	MOVE B,ACCESS		;SET PAGE ACCESS
	SPACS
	SETO A,0		;FREE THE WINDOW ADDRESS
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	JRST STOEFQ		;AND MOVE ON TO NEXT PAGE OR EOF FDB

STXEFQ:	MOVE A,DATJFN		;GOT A ZERO AS FIRST BIN
	GTSTS			;EOF, ERRORS OR CLOSED?
	TLNE B,600000
	TLNE B,400
	JRST STOERR		;ERRORS.
	TLNN B,1000		;EOF?
	JRST STXFER		;NO. FORMAT ERROR.
	MOVN C,RECTYP		;YES. WAS LAST RECORD THE FDB?
	CAIE C,3		; ..
	JRST STXFER		;NO. FORMAT ERROR.
	JRST STOEF1		;YES. CLOSE UP SHOP.

STONSS:	TRNE F,R.RLPT		;TO SPOOLER?
	JRST STSLPT		;YES. STORE SPOOLED LINE PRINTER
	SKIPLE B,$TYPE		;NOT SAME SIZE. ASCII?
	CAIE B,TYPE.I		;OR LOCAL BYTE
	JRST STON1		;YES. JUST SHIP IT OUT
	PUSH P,C		;NO. IMAGE. HAVE TO SHUFFLE BITS.
	SETZM WINDW2		;CLEAR THE WINDOW
	MOVE A,[WINDW2,,WINDW2+1]
	BLT A,WINDW2+777	; ..
	MOVSI A,-1100		;THIS MANY INPUT BYTES FROM NET
	MOVSI B,-10		;EIGHT STATE COUNTER
	MOVE C,[-1000,,WINDW2]	;DESTINATION IS ONE PAGE HERE
STONSB:	AOBJP A,.+2		;COUNT THRU SOURCE
	MOVE T2,WINDOW(A)	;GET TWO WORDS MAKING UP RESULT
	MOVE T1,WINDOW-1(A)	; ..
	LSH T1,-4		;BUTT THEM TOGETHER
	LSHC T1,@IMOSHT(B)	;MOVE THEM LEFT TO GET 36 GOOD BITS
	MOVEM T1,0(C)		;AND STORE THE GOOD BITS
	AOBJN C,.+1		;COUNT OUTPUT WORDS
	AOBJN B,STONSA		;END OF GROUP OF EIGHT?
	AOBJN A,.+1		;YES. HAVE TO DIDDLE POINTER
	MOVSI B,-10		;AND RESTART STATE COUNTER.
STONSA:	JUMPL A,STONSB		;IF MORE TO GO, LOOP.
	POP P,C			;COUNT LEFT AFTER READ FROM NET
	POP P,D			;COUNT DESIRED FROM NET
	POP P,B			;WHERE STORED FROM NET
	SUB C,D			;COUNT GOTTEN FROM NET
	TLNE B,4000		;4 OR 1 PER WORD?
	LSH C,2			;ONE. MOVE OVER TO BYTES COUNT AT 4/WD
	LSH C,3			;BITS AT 32 PER WORD
	ADDM C,IBITCT		;COUNT BITS
	ADDM C,TRBITS		;ADD TO TOTAL FOR THIS LOGIN
	IDIVI C,44		;WORDS AT 36 BITS PER
	SKIPE D
	ADDI C,1		;PARTIAL WORD
	MOVNS C			; -WORDS TO WRITE ON DISK
	MOVE B,[444400,,WINDW2]	;WHERE THEY ARE IN CORE
STSLP1:	HRRZ A,LCLJFN		;FILE TO WRITE ON
	SOUT			;DO IT
	JRST STOEFQ		;SEE IF DONE

IMOSHT:REPEAT 10,<	EXP <.-IMOSHT+1>*4>

STSLPT:	MOVE B,$BYTE
	CAIN B,10		;EIGHT BIT RECEIVE?
	JRST STON1		;YES. JUST COPY.
	POP P,D			;ORIGINAL COUNT BEFORE SIN
	POP P,B			;ORIGINAL SIN POINTER (UGH!! PUN!!)
	SUB C,D			;POSITIVE WORDS READ
	IMULI C,44		;BITS FOR STATISTICS
	ADDM C,IBITCT
	ADDM C,TRBITS
	IDIVI C,44		;BACK TO WORDS
	IMULI C,5		;NOW CHARACTERS
	MOVNS C			;MINUS FOR SOUT
	MOVE B,[440700,,WINDOW]	;POINTER TO DATA
	JRST STSLP1		;GO SEND IT

STOEOF:	MOVE A,$TYPE		;SEE IF NEED TO SET BIT COUNT
	MOVE B,$BYTE
	CAIE B,44		;WORD SIZED?
	CAIE A,TYPE.I		;OR NON-IMAGE?
	JRST STOEF1		;YES. OK AS IT IS
	TLNN F,L.LDSK		;ON A DISK FILE?
	JRST STOEF1		;NO
	CLOSK LCLJFN		;HAVE TO DIDDLE UP THE BIT COUNT
	MOVSI B,7700		;THIS FIELD
	MOVSI C,100		;ONE BIT BYTES
	HRRZ A,LCLJFN
	HRLI A,11		;WORD IN FDB
	CHFDB
	MOVE C,IBITCT		;THIS MANY BITS
	SETO B,			;FULL WORD QTY
	HRLI A,12		;THIS WORD
	CHFDB
STOEF1:	HRROI X,MESS99		;DONE MESSAGE
	JRST STOX9		;SEND IT TO USER

STOERR:	HRROI X,STOERM		;ERROR FRM NET
	JRST STOX9
STOERM:	ASCIZ /452 Data connection error. File not completed./

STOX0:	HRROI X,STO506		;CANT DO IT
	JRST STOXX
STOX5:	MOVEI X,STACTM		;NO ACCOUNT SPECIFIED
	JRST STOXX
STOX4:	MOVEI X,STO506
	JRST STOXX
STOX1:
STOX2:	MOVEI X,STOLUZ
	JRST STOXX
STOX3:	MOVEI X,ACCESM
STOXX:
STOX9:	SETO A,			;UNMAP THE WINDOW PAGES
	MOVE B,[400000,,<WINDOW/1000>]
	PMAP
	ADDI B,1
	PMAP
	HRRI B,<WINDW2/1000>
	PMAP
	ADDI B,1
	PMAP
	CLOSE DATJFN
	CLOSE LCLJFN
	HRROI B,0(X)
	JRST RPCRLP		;REPLY

STOLUZ:	ASCIZ /450 Can't write such a file./
STACTM:	ASCIZ /433 Account must be supplied to store files. Send ACCT./
SLOWM1:	ASCIZ /050 Image mode is inefficient except in 36 bit bytes.
050 Use TYPE L instead if possible. Proceeding...
/
STXFER:	JSP X,STOXX
ASCIZ /455 Format error in paged data during store./
STXCKE:	JSP X,STOXX
ASCIZ /455 Checksum error in data block from network./
STXSQE:	JSP X,STOXX
ASCIZ /455 Sequence error in data from network./

DELE$:	PUSHJ P,JBKINI		;SET UP FOR DELETE FILE REQUEST
	MOVSI A,100000		;OLD FILE REQUIRED
	HRRI A,-2		;OLDEST VERSION DEFAULT
	MOVEM A,JBLOCK
	MOVSI B,(7B5)		;POINT TO START OF NAME
	ADD B,BP		; ..
	MOVEI A,JBLOCK		;POINT TO DATA
	GTJFN
	  JRST DELX1		;NO SUCH FILE
	MOVEM A,LCLJFN
	PUSHJ P,JFNTXT		;STORE TEXT STRING FOR THIS FILENAME
	LDB C,B			;MAKE SURE GOT TO EOL
	JUMPN C,DELX2		;NO. BAD SYNTAX.
	DVCHR			;SEE WHAT THE DEVICE IS
	TLNE B,777		;DISK?
	JRST DELX3		;NO. ERROR.
	HRRZ A,LCLJFN		;JFN ARG TO CHKACC
	MOVSI B,(ACCBWR)	;SEE IF USER MAY WRITE/DELETE
	PUSHJ P,CHKACC		; ..
	  JRST DELX4		; NO.
	DELF			;YES. SO DO IT.
	  JRST DELX5		;CAN'T??!!
	SETOM LCLJFN		;JFN RELEASED BY DELF JSYS
DELEOK:
	SKIPUNLESS BINL
	PUSHJ P,BNLDEL		;LOG THE DELETE
	JSP B,DELXX
	ASCIZ /254 Delete completed OK/
DELX1:	JSP B,DELXX
	ASCIZ /450 No such file - DELEte request/
DELX2:	JSP B,DELXX
	ASCIZ /550 Bad name syntax - DELEte request/
DELX3:	JSP B,DELXX
	ASCIZ /506 DELEte only implemented for DISK files/
DELX4:	JSP B,DELXX
	ASCIZ /451 You do not have access rights to delete /
DELX5:	JSP B,DELXX
	ASCIZ /455 DELEte unexpectedly failed/
DELXX:	CLOSE LCLJFN
	MOVE A,REPLYP
	TLO B,-1
	MOVEI C,0
	SOUT			;PART OF MESSAGE TO REPLY BUFFER
	SKIPN JFNTXS		;A FILE NAME?
	JRST DELXX1		;NO
	HRROI B,[ASCIZ / - file /]
	SOUT
	HRROI B,JFNTXS
	SOUT			;YES, TACK ON FILENAME
DELXX1:	MOVEM A,REPLYP
	HRROI B,[ASCIZ /./]
	JRST RPCRLP		;RETURN A MESSAGE

RNFR$:	MOVSI B,(7B5)		;RENAME FROM . JUST COPY THE STRING
	ADD B,BP
	MOVE A,[440700,,$PTHS1]	;WHERE TO STASH IT
	MOVNI C,<5*40>-2	;LENGTH
	SOUT
	HRROI B,[ASCIZ /200 Rename-from name stored./]
	JRST RPCRLP		;SEND THIS BACK

RNTO$:	SETOM $PATH1		;NO JFN'S HERE YET
	SETOM $PATH2		; ..
	PUSHJ P,JBKINI
	MOVSI A,600000		;OUTPUT NEW FILE ONLY
	MOVEM A,JBLOCK
	MOVEI A,JBLOCK
	MOVSI B,(7B5)		;POINTER TO USR STRING
	ADD B,BP		; ..
	GTJFN			;SEE IF THE FILE IS THERE
	  JRST RNMX1		;CANT GET "TO" JFN
	MOVEM A,$PATH2
	MOVSI B,(ACCBWR)	;SEE IF LEGAL TO WRITE IT
	PUSHJ P,CHKACC		; ..
	  JRST RNMX2		;CAN'T WRITE ON "TO"
	PUSHJ P,JBKINI		;OK. TRY THE FROM JFN
	MOVSI A,100000		;OLD FILE ONLY
	MOVEM A,JBLOCK		; ..
	MOVEI A,JBLOCK		;POINT TO PARAMS
	HRROI B,$PTHS1		;STORED FROM RNFR COMMAND
	GTJFN
	  JRST RNMX3		;NOT THERE
	MOVEM A,$PATH1		;STORE JFN
	MOVSI B,(ACCBWR)	;CHECK FOR WRITE ACCESS
	PUSHJ P,CHKACC
	  JRST RNMX4		;NO, CAN'T WRITE IT.
	MOVE B,$PATH2		;OK, GET NEW NAME
	RNAMF			;DO THE RENAME
	  JRST RNAMX5		;CAN'T
	SETOM $PATH1		;GOOD. THIS JFN NOW GONE.
	MOVE A,$PATH2
	PUSHJ P,JFNTXT
	SKIPUNLESS BINL
	PUSHJ P,BNLRNM		;LOG THE RENAME IN BINARY LOG FILE
	JSP B,RNMXX
	ASCIZ /253 Rename completed OK./

RNMX1:	CAIE A,GJFX20		;ERRORS FOR FILE EXISTS ALREADY
	CAIN A,GJFX27		; ..
	JRST RNMX1A
	JSP B,RNMXX
	ASCIZ /455 Can't get JFN for New file name./
RNMX1A:	JSP B,RNMXX
	ASCIZ /456 "New Name" already exists. Delete it first./
RNMX2:	JSP B,RNMXX
	ASCIZ /451 No access rights to create new file./
RNMX3:	JSP B,RNMXX
	ASCIZ /450 Old named file not found./
RNMX4:	JSP B,RNMXX
	ASCIZ /451 No access rights to delete old filename./
RNMX5:	JSP B,RNMXX
	ASCIZ /455 Rename request unexpectedly failed./
RNMXX:	PUSH P,B
	CLOSE $PATH1
	CLOSE $PATH2
	POP P,B
	TLO B,-1
	JRST RPCRLP

;LIST, NLST AND STAT COMMANDS
;OUTER LEVEL SETS UP FOR DATA OR TELNET CONNECTION, THEN CALLS DOLIST

LIST$:	TLZA F,L.NLST		;LIST, NOT NLST
NLST$:	TLO F,L.NLST		;NLST, NOT LIST.
	SKIPG $MODE		;BETTER BE AN ASCII CONNECTION
	SKIPLE $STRU		; ..
	JRST LISTX0		;NOT.
	TLZ F,L.STAT		;TELL DOLIST IT'S A LIST, NOT STAT.
	SETOM $BYTE		;FORCE 8-BIT
	SETOM $TYPE		;ASCII
	TLO F,L.SEND		;SET UP A SEND CONNECTION
	PUSHJ P,PREDAT		;  ..
	  JRST RPCRLP		;NO GOOD.
	HRROI B,[ASCIZ /250 List started.
/]
	PUSHJ P,SDUMPA		;SEND MSG AND DUMP BUFFER TO SJFN
	MOVE A,DATJFN		;WHERE DOLIST SHOULD SEND ANSWERS
	PUSHJ P,DOLIST
LIST02:	MOVE A,DATJFN
	CLOSF			;DONE WITH THE DATA CONNECTION
	  JFCL
	SETOM DATJFN
	HRROI B,MESS99		;252 DONE MESSAGE
	JRST RPCRLP

LISTX0:	HRROI B,[ASCIZ /506 Parameter error in LIST command./]
	JRST RPCRLP

STAT$:	TLO F,L.STAT		;TELL DOLIST IT'S A STAT, NOT LIST.
	TLZ F,L.NLST		;OR NLST
	MOVE A,SJFN		;DATA GOES ON TELNET CONNECTION
	PUSHJ P,DOLIST		;DO THE WORK
	MOVE A,SJFN		;SEND ANY PARTIAL BUFFER
	MOVEI B,21
	MTOPR			; ..
	JRST COMLP		;DONE.

;DOLIST IS THE GUTS OF BOTH LIST AND STAT.

DOLIST:	MOVEM A,LSTJFN		;SAVE THE DESTINATION.

REPEAT 0,<
	SKIPE ARGCH		;BLANK ARGUMENT?
	JRST DOLI01		;NO.
	HRROI B,[ASCIZ /100 /]	;PREFIX IF ON TELNET CONNECTION
	MOVEI C,0
	TLNE F,L.STAT		;LIST OR STAT?
	SOUT			;STAT.
	HRROI B,LHSTNM		;TYPE SERVER HOST NAME
	SOUT
	HRROI B,[ASCIZ / FTP Server /]
	SOUT
	HRROI B,VERSTR
	SOUT
	TLO F,L.T1		;PRETEND NEED A CRLF
	JRST DOLIZ1		;OUTPUT CRLF AND 200 REPLY
>
DOLI01:	TLZ F,L.T1!L.T2!L.PDIR	;CLEAR FLAGS USED BELOW
	PUSHJ P,JBKINI		;SEE IF HIS STRING MAKES SENSE
	HRROI T1,[ASCIZ /*/]	;SET UP FOR DEFAULTS
	MOVEM T1,JBLOCK+4
	MOVEM T1,JBLOCK+5	;NAME AND EXT
	MOVSI T1,100100		;FLAGS TO ALLOW WILD, OLD FILES
	TLNN F,L.NLST		;UNLESS NLST COMMAND,
	HRRI T1,-3		;"STAR" FOR VERSION DEFAULT
	MOVEM T1,JBLOCK		; ..
	MOVEI A,JBLOCK		;ARG TO GTJFN
	MOVSI B,(7B5)		;STRING POINTER
	ADD B,SBP		;BACK A CHAR
	GTJFN
	  JRST DOLIX1		;NO GOOD
	MOVEM A,LCLJFN		;SAVE IT
	TLNN A,(77B5)		;ANY WILD CARDS?
	JRST DOLINS		;NO STARS
	TLNE A,(70B5)		;WILD DEV OR DIR?
	JRST DOLIX3		;YES. DONT ALLOW WHOLE DUMPS.
	TLNN F,L.NLST		;UNLESS NLST COMMAND,
	TLO F,L.PDIR		;PRINT DIRECTORY NAME FIRST TIME
;FALL THRU

DOLIL1:	PUSHJ P,TIMEOK		;UPDATE TIME KILL.
	HRRZ A,LCLJFN		;CHECK LISTING ACCESS
	MOVSI B,(ACCBDL)
	PUSHJ P,CHKACC
	  JRST DOLIN1		;NOT ALLOWED
DOLI04:	MOVE A,LSTJFN		;LIST THE FILE NAME
	HRROI B,[ASCIZ /151 /]	;HEADER.
	MOVEI C,0
	TLON F,L.T1		;NEED A CR. ALREADY STARTED LINE?
	TLNN F,L.STAT		;NO. NEED THE HEADER?
	SKIPA
	SOUT			;NEW LINE AND NEED HEADER
	MOVEI B,","		;SEPARATING VERSIONS ONLY?
	TLNE F,L.T2		; ..
	BOUT			;YES.
	HRRZ B,LCLJFN		;THE FILE NAME TO BE LISTED
	TLZN F,L.PDIR		;WANT DIRECTORY NAME?
	JRST DOLI03		;NOT NOW
	MOVE C,[010000,,1]	;ONLY DIR NAME, PUNCTUATED
	JFNS			;OUTPUT IT
	HRROI B,CRLFM		;FORCE AN END OF LINE HERE.
	MOVEI C,0
	SOUT
	TLZ F,L.T1		;AND SAY NOT STARTED THIS LINE
	JRST DOLI04		;BACK TO PRINT FILE NAME

DOLI03:	MOVE C,[201110,,040001]	;FORMAT
	TLZE F,L.T2		;JUST A NEW VERSION?
	MOVSI C,(1B14)		;YES. JUST PRINT THAT.
	TLNE F,L.NLST		;BUT IF NLST, SEND DIFFERENT FORMAT.
	MOVE C,[211111,,140001]
	JFNS			;PRINT SOMETHING.
DOLIN1:	MOVE A,LCLJFN		;STEP THE HANDLE
	GNJFN			; ..
	  JRST DOLIZ1		;NO MORE.
	TLNE F,L.NLST		;NLIST COMMAND?
	JRST DOLIN2		;YES. ALWAYS SEPARATE LINES.
	TLNN A,16		;JUST VERSION CHANGE?
	JRST DOLI02		;YES.
	TLNE A,(1B14)		;NEW DIRECTORY?
	TLO F,L.PDIR		;YES. WANT TO MENTION IT.
DOLIN2:	HRROI B,CRLFM		;NO. END LINE.
	MOVE A,LSTJFN
	MOVEI C,0
	TLZE F,L.T1		;IF ONE STARTED.
	SOUT
	JRST DOLIL1		;LOOP TO NEXT FILE.

DOLI02:	TLNE F,L.T1		;STARTED A LINE?
	TLO F,L.T2		;YES. THEN EXT IS ALL THAT CHANGES
	JRST DOLIL1		;LOOP

DOLINS:	HRRZ A,LCLJFN		;JUST ONE FILE. NO STARS.
	MOVSI B,(ACCBDL)	;ALLOWED TO SEE IT?
	PUSHJ P,CHKACC		; ..
	  JRST DOLIX2		;NO
	MOVE A,LSTJFN		;YES. DO IT.
	HRROI B,[ASCIZ /150 /]
	MOVEI C,0
	TLNE F,L.STAT		;CUE NEEDED?
	SOUT			; YES
	HRRZ B,LCLJFN		;GET THE FILE JFN
	MOVE C,[211111,,176011]	;QFD FORMAT
	MOVE T1,$USER		;FILE FROM LOGIN DIRECTORY?
	CAMN T1,DIRNMF		; ..
	TLZ C,(7B5)		;YES. SUPPRESS DIR NAME.
	TLNE F,L.NLST		;BUT IF NLST, SEND DIFFERENT FORMAT.
	MOVE C,[211111,,140001]
	JFNS
	TLOA F,L.T1		;SAY NEED CRLF
DOLIZ1:	SETOM LCLJFN		;GNJFN COUNTING OUT RELEASED IT
	MOVE A,LSTJFN
	HRROI B,CRLFM		;OUTPUT EOL IF NEEDED
	MOVEI C,0
	TLZE F,L.T1		; ..
	SOUT
	HRROI B,[ASCIZ /200 End of status.
/]
	TLNE F,L.STAT		;ON TELNET CONN?
	SOUT			;YES. FLAG END.
	POPJ P,0		;RETURN FROM DOLIST

DOLIX1:
DOLIX2:	CLOSE LCLJFN
	HRROI B,[ASCIZ /450 /]	;FILE STATUS
	MOVE A,LSTJFN		;OUTPUT JFN
	MOVEI C,0		; ..
	TLNE F,L.STAT		;NEED CUE?
	SOUT			;YES.
	HRROI B,[ASCIZ /? Not found.
/]
	SOUT
	POPJ P,0

DOLIX3:	HRRZ A,LCLJFN		;CLOSE JFN WHICH HAS TOO MANY STARS
	CLOSF
	  JFCL
	SETOM LCLJFN
	HRROI B,[ASCIZ /451 /]
	MOVE A,LSTJFN
	MOVEI C,0
	TLNE F,L.STAT		;HEADER NEEDED ON TTY CONN?
	SOUT			;YES.
	HRROI B,[ASCIZ /* not allowed for device or directory./]
	SOUT
	POPJ P,0

PATCH::
PAT::	BLOCK 400

	END

