;<SOURCES>READMAIL.MAC;2    12-APR-75  10:45:32	EDIT BY COWER
;UPDATED READMA TO ACCEPT NEW BIT FIELD IN SNDMSG
;<SOURCES>READMA.MAC;17     2-AUG-74 13:03:29	EDIT BY MANN
;<SOURCES>READMA.MAC;2     2-AUG-74 09:53:46	EDIT BY MANN
;  ^O   WILL NOW SUPRESS ALL OUT PUT AND EXIT IF SUMEX = 1
;<SOURCES>READMA.MAC;18    10-MAY-74 11:09:48    EDIT BY SUSSMAN
; SKIP DOBE IF NOTHING TYPED - WAS EXPENSIVE WITH NVT PROTOCOL
;<SOURCES>READMA.MAC;17    22-MAR-74 16:16:25	EDIT BY SUSSMAN
; NEW FLAG IN SUBSYS ENTRY TO SUPPRESS "NO MESSAGES" MSGS
;<SUSSMAN>READMA.MAC;8     8-MAR-74 16:59:26	EDIT BY SUSSMAN
; FIX ERR MSG BUG - ERSTR DOESN'T PUT NULL AT END
;<SUSSMAN>READMA.MAC;7     6-MAR-74 11:52:05	EDIT BY SUSSMAN
; IF NO TYPEAHEAD, GIVE PROGRAM VERSION HERALD - USES SUBR TYPVER
;<SUSSMAN>READMA.MAC;6    26-FEB-74 11:42:16	EDIT BY SUSSMAN
; FIX ILL INST BOMBOUT AT RFCOC AT OJOP:
;<SOURCES>READMA.MAC;15    22-FEB-74 15:55:07	EDIT BY SUSSMAN
; ADD VERSION INFO AFTER ENTRY VECTOR
;<SUSSMAN>READMA.MAC;4     5-FEB-74 11:41:07	EDIT BY SUSSMAN
; WARNING MSG IF DEFAULTING DATE ON FILE NOT MESSAGE.TXT
; IF NO MESSAGE.TXT, "NO MESSAGES" INSTEAD OF "? NEED A FILE"
; BUG FIXED, FLAGS NOT BEING ZEROED FOR IDTIM AT LOOP:
;<SUSSMAN>READMA.MAC;3    24-JAN-74 17:21:12	EDIT BY SUSSMAN
; DEFAULT START DATE FOR SPECIFIED INPUT FILE IS ITS READ DATE
;  (USED TO BE NO DEFAULT)
;<SUSSMAN>READMA.MAC;2    10-JAN-74 16:26:31	EDIT BY SUSSMAN
; IMPROVE ERROR HANDLING (FIX BUG, IMPROVE & ADD MSGS)
; IF FILE NEVER READ, DEFAULT START POINT IS CREATION DATE
; ECHO PROBLEM FIXED BY NEVER TRYING SUPPRESS "*"
;<SOURCES>READMA.MAC;12    23-NOV-73 13:28:12	EDIT BY CLEMENTS
; FORCE TYPEOUT TO INDICATE FORMFEEDS BY ^L IFF OUTPUT IS TO A TTY
;<JOHNSON>READMA.MAC;11    21-MAR-73 13:34:59	EDIT BY JOHNSON
; ADD FLAG TO PREVENT SET UP OF INFRK
;<JOHNSON>READMA.MAC;10    20-MAR-73 18:39:05	EDIT BY JOHNSON
;<JOHNSON>READMA.MAC;9    20-MAR-73 18:37:43	EDIT BY JOHNSON
; ADD THE "R"EVERSE COMMAND.
;<JOHNSON>READMA.MAC;7    20-MAR-73 16:13:25	EDIT BY JOHNSON
;<JOHNSON>READMA.MAC;6    20-MAR-73 16:12:10	EDIT BY JOHNSON
; ADD THIRD ENTRY FOR REVERSE CHRONOLOGICAL OUTPUT.
;<JOHNSON>READMA.MAC;5    16-MAR-73 14:35:27	EDIT BY JOHNSON
;<SOURCES>READMA.MAC;4    15-MAR-73 20:00:14	EDIT BY JOHNSON
; CORRECT BUG IN INFRK.
;<SOURCES>READMA.MAC;3     2-FEB-73 10:48:16	EDIT BY PLUMMER
; SKIP HEARLD AND READY CHR IF EOL OR LF TYPED AHEAD
;<SOURCES>READMA.MAC;2    11-DEC-72 10:20:10	EDIT BY TOMLINSON
; PROVIDED FOR SKIP OF PMAIL AT SUBR
;<TOMLINSON>READMA.MAC;2     8-DEC-72 14:27:07	EDIT BY TOMLINSON
;<TOMLINSON>READMA.MAC;1     8-DEC-72 12:38:33	EDIT BY TOMLINSON
;<SOURCES>READMA.MAC;1     7-DEC-72 09:29:47	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;23     5-DEC-72 20:31:49	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;22     5-DEC-72 20:02:51	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;21     5-DEC-72 19:57:00	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;20     5-DEC-72 14:15:13	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;19     5-DEC-72 14:04:33	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;18     5-DEC-72 14:03:24	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;17     5-DEC-72 13:46:25	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;16     5-DEC-72 13:34:27	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;15     5-DEC-72 12:32:55	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;14     5-DEC-72 12:30:26	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;13     5-DEC-72 12:26:30	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;12     5-DEC-72 12:23:28	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;11    13-NOV-72 22:59:12	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;10    13-NOV-72 22:51:51	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;9    13-NOV-72 22:10:53	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;8    13-NOV-72 22:06:11	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;7    13-NOV-72 22:04:27	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;6    13-NOV-72 21:29:08	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;5    13-NOV-72 21:22:54	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;4    13-NOV-72 21:15:59	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;3    13-NOV-72 20:57:43	EDIT BY TOMLINSON
;<TOMLINSON>READ.MAC;1    15-OCT-72 10:38:11	EDIT BY TOMLINSON
 
	TITLE	READ MESSAGE FILE
	SUBTTL	R.S.Tomlinson 15 Oct 72
	SEARCH	STENEX

;	EXTERNAL TYPVER	;SUBROUTINE TO TYPE VERSION #

; PARAMETERS


			SUMEX==1
NPDL==20
NENTS==^D2000

OPDEF	ESOUT[JSYS 313]

; Entry at ENTVEC+1:
; To be run subsystem fashion with an argument
; ON entry:
; 1/	JFN or message file to be printed
; 2/	date to start printing on.
; 3/	RH(3) IS JFN OF OUTPUT FILE. (101 FOR PRIMARY OUTPUT).
;	LH(3) - BIT0 = 1 => DO NOT SET UP INFRK.
;             BIT1 = 1 => SUPPRESS "NO MESSAGES" MESSAGES

; Entry at ENTVEC+2:
; Same as ENTVEC+1 except output is in reverse
; chronological order.

; Accumulators

F=0
A=1
B=2
C=3
D=4
FLG=15
EPTR=16
P=17

; FLAGS IN FLG

NOINTF=400000
NOMSGF=200000

; ENTRY VECTOR

ENTVEC:	JRST RMAIL
	JRST SUBR
	JRST RVSUBR
VRSION:	XWD 0,0
	XWD 202,12

; READ MAIL OPTION

RMAIL:	RESET			; RESET THE WORLD
	MOVE P,[IOWD NPDL,PDL]
	SETZM DATDUN		; NO DATE COMMAND DONE YET
	SETOM DATE		; UNKNOWN DATE
	SETZM	DATWRN		;NO WARNING
	SETOM JFN		; UNKNOWN FILE
	SETZ EPTR,		; Not reverse order.
	SETZ FLG,		; NO FLAGS.
	MOVEI A,101
	MOVEM A,OUTJFN
	MOVEI A,100
	SIBE			;TYPED AHEAD?
	 JRST RMAIL1		;YES, SKIP HEARLD
	HRROI	A,[ASCIZ /READMAIL /]
	PSOUT
;	PUSHJ	P,TYPVER
	HRROI A,[ASCIZ /
TYPE ? FOR HELP/]
	PSOUT			; HERALD
RMAIL1:	MOVSI A,100001		; OLD FILE, SHORT FORM, STRING
	HRROI B,[ASCIZ /MESSAGE.TXT;1/]
	GTJFN			; GET DEFAULT FILE AND DATE
	 JRST COMLP		; NOT FOUND, USER MUST SAY WHAT HE WANTS
	MOVEM A,JFN		; DEFAULT FILE
	MOVE B,[1,,15]		; LAST READ
	MOVEI C,C
	GTFDB
	MOVEM C,DATE		; SAVE AS DEFAULT DATE
	JUMPG	C,COMLP		;FILE HAS BEEN READ - GO ON
	MOVE	B,[1,,13]	;FILE NEVER READ, USE CREATION DATE
	MOVEI	C,C
	GTFDB
	MOVEM	C,DATE
COMLP:	MOVEI A,101
;REMOVE CUTENESS CAUSING ECHO TROUBLES
REPEAT 0,<SIBE			;TYPED AHEAD
	 JRST [	BIN		;YES. PEEK AT THE CHARACTER
		CAIE 2,37	;EOL OR LF?
		CAIN 2,12
		 JRST COMLP5	;YES. SKIP READY CHR.
		BKJFN		;LET THE PROGRAM READ IT
		 JFCL
		JRST .+1]  >
	RFPOS			; GET COLUMN POSITION
	HRROI A,[ASCIZ /
/]
	TRNE B,777777		; IF NOT AT LEFT MARGIN
	 PSOUT			; TYPE CRLF
	MOVEI A,"*"
	PBOUT			; READY CHARACTER
	PBIN			; GET COMMAND CHARACTER
	CAIN A,"?"
	 JRST [	HRROI A,IMSG
		PSOUT		; PRINT INSTRUCTIONS
		JRST COMLP]
	CAIE A,12		; LF
	CAIN A,37		; OR EOL?
COMLP5:	 JRST [	SKIPGE JFN
		 JRST [	HRROI A,[ASCIZ /
No messages/]
			PSOUT
			JRST GONONE]
		SKIPG DATE	; YES, CHECK IF EVERYTHING IS SPECIFIED
		 JRST [	HRROI A,[ASCIZ / Need a date/]
			ESOUT
			JRST COMLP]
		HRROI A,[ASCIZ /
[Using default date]
/]
		SKIPE DATWRN
		PSOUT
		JRST GO]	; OK, GO DO IT
	CAIL A,140		; RAISE LOWER CASE
	 SUBI A,40
	CAIN A,"F"
	 JRST CFILE
	CAIN A,"D"
	 JRST CDATE
	CAIN A,"O"
	 JRST COUT
	CAIN A,"R"
	 JRST CREV
	HRROI A,[ASCIZ / Bad command/]
	ESOUT
	JRST COMLP

; SET INPUT FILE

CFILE:	HRROI A,[ASCIZ /ile: /]
	PSOUT
	MOVSI A,120003		; OLD FILE, CONFIRM, SHORT FORM, FILE
	MOVE B,[100,,101]
	GTJFN
	 JRST GTJFNX
	EXCH A,JFN		; SUCCESS, SET NEW JFN, GET OLD
	JUMPL A,FDATE		; RELEASE OLD JFN, IF ANY
	RLJFN
FDATE:	 JFCL
	SKIPE DATDUN		; AND IF NO DATE COMMAND DONE
	JRST COMLP		; GET NEW DEFAULT DATE
	MOVE	A,JFN
	MOVE	B,[1,,15]
	MOVEI	C,C
	GTFDB
	MOVEM	C,DATE
	SETOM	DATWRN
	JRST	COMLP

GTJFNX:	CAIN A,GJFX4		; ILLEGAL CHARACTER?
	 JRST GTJFX4		; YES
	HRROI A,[ASCIZ //]
	ESOUT			; IF NOT ICH, COMPLAIN VAGUELY
	JRST COMLP

GTJFX4:	MOVEI A,100		; YES.
	BKJFN			; BACK UP
	 JRST GTJFXX
	BIN			; TO READ AGAIN
	CAIN B,177		; AND IF IT WAS RUBOUT
	 JRST GTJFXX
	HRROI A,[ASCIZ / Illegal char/]
	ESOUT			; ELSE COMPLAIN
	JRST COMLP

GTJFXX:	HRROI A,[ASCIZ /XXX/]
	PSOUT		; THEN QUIETLY FORGET IT
	JRST COMLP

; SET OUTPUT FILE

COUT:	HRROI A,[ASCIZ /utput file: /]
	PSOUT
	MOVSI A,460003		; OUTPUT, POFNF, CONFIRM, SHORT
	MOVE B,[100,,101]
	GTJFN
	 JRST GTJFNX
	MOVE B,[7B5+1B20]
	MOVEM	A,C	;SAVE JFN FOR ERROR MESSAGE
	OPENF
	 JRST [	HRROI A,[asciz / Can't open file /]
		ESOUT
		MOVE B,C
		MOVEI A,101
		SETZ C,
		JFNS
		MOVE A,B
		RLJFN
		 JFCL
		PUSHJ	P,ERROUT	;REASON FOR FAILURE
		JRST COMLP]
	EXCH A,OUTJFN
	CAIE A,101
	CLOSF
	 JFCL
	JRST COMLP

; INPUT DATE COMMAND

CDATE:	HRROI A,[ASCIZ /ate: /]
	PSOUT
	MOVEI A,100
	MOVSI B,(1B6)
	IDTNC		; GET DATE
	 JRST [	HRROI A,[ASCIZ / bad date/]
		ESOUT
		JRST COMLP]
	MOVEM B,T1
	MOVEM C,T2
	MOVEI A,100
	BKJFN
	 JRST CDATE1
	BIN
	CAIE B,40
	 JRST CDATE1
	MOVSI B,(1B0)
	IDTNC
	 JRST [	HRROI A,[ASCIZ / bad time/]
		ESOUT
		JRST COMLP]
	SKIPA D,4
CDATE1:	SETZ D,
	MOVE B,T1
	MOVE C,T2
	IDCNV
	 JRST [	HRROI A,[ASCIZ / bad date & time/]
		ESOUT
		JRST COMLP]
	MOVEM B,DATE
	SETOM DATDUN
	SETZM	DATWRN
	JRST COMLP

; REVERSE ORDER.

CREV:	HRROI A,[ASCIZ /everse order.
/]
	PSOUT
	MOVE EPTR,[IOWD NENTS,ENTLST]
	SETZM ECNT
	JRST COMLP


GO:	PUSHJ P,PMAIL
	 PSOUT
	MOVE A,JFN
	RLJFN
	 JFCL
GONONE:	MOVE A,OUTJFN
	CAIE A,101
	CLOSF
	 JFCL
	HALTF
	JRST .-1

IMSG:	ASCIZ /
Type just a CR or EOL to get your MESSAGE.TXT printed from point of
last reading on your terminal.  Use "D" to specify another date.  Use
"F" to specify another input file.  Use "O" to specify another output
file.  Use "R" to specify reverse order (ie. oldest last).  While
printing, typing rubout will skip to the next message in the file if
the output file specification is not used. Typing "Control O"
will supress all output and Exit.
/

SUBR:	SETZ EPTR,		; OUTPUT IN NORMAL ORDER.
SUBR1:	MOVE P,[IOWD NPDL,PDL]
	MOVEM A,JFN
	MOVEM B,DATE
	HRRZM C,OUTJFN
	HLRZ FLG,C		; SET UP FLAGS.
	PUSHJ P,PMAIL
	 PSOUT
	HALTF
	JRST .-1


RVSUBR:	MOVE EPTR,[IOWD NENTS,ENTLST]
	SETZM ECNT
	JRST SUBR1

PMAIL:	MOVE A,JFN
	GTSTS
	MOVEM B,JFNSTS
	JUMPL B,JFOP
	MOVE B,[7B5+1B19+1B26]
	OPENF
	 JRST [	HRROI A,[ASCIZ / Can't open /]
		ESOUT
		MOVEI A,101
		MOVE B,JFN
		SETZ C,
		JFNS
		PUSHJ	P,ERROUT	;REASON FOR FAILURE
		AOS	0(P)
		POPJ P,]
JFOP:	SETZ F,
	TRNE	FLG,NOMSGF	;IF FLAG ON,
	TRO	F,4		;PRETEND HAVE TYPED SOMETHING
	RFPTR
	 JRST NODSK
	MOVEM B,FILLEN		; JUST TEMPORARILY
	SETO B,
	SFPTR
	 JFCL
	RFPTR
	 JFCL
	CAMG B,FILLEN
	 JRST DONE1		; NOTHING IN THE FILE
	TRO F,10
	EXCH B,FILLEN		; LENGTH OF FILE
	SFPTR
	 JFCL
	MOVE A,OUTJFN
	GTSTS
	MOVEM B,OJFSTS
	JUMPL B,OJOP
	MOVE B,[7B5+1B20]
	OPENF
	 JRST [	HRROI A,[ASCIZ /
CAN'T OPEN /]
		ESOUT
		MOVE 2,OUTJFN
		MOVEI 1,101
		SETZ 3,
		JFNS
		PUSHJ	P,ERROUT	;REASON FOR FAILURE
		TRO	F,4	;PREVENT FINAL MESSAGE
		JRST DONE1]
OJOP:	MOVEI A,400000
	CIS
	MOVE B,[LEVTAB,,CHNTAB]
	SIR
	EIR
IFE SUMEX, < MOVSI B,(1B1) >
ifn SUMEX,	<movsi b,(3b2) >	;enable chan 1,2
	AIC
	MOVE A,OUTJFN		; SEE WHERE OUTPUT IS GOING
	DVCHR			; FIND OUT IF IT IS A TTY
	HLRZ B,B
	ANDI B,777		; DEVICE TYPE FIELD
	CAIE B,12		; A TERMINAL?
	JRST OJOP1		; NO.
	MOVE	A,OUTJFN
	RFCOC			; YES. GET THE CONTROL CHARACTER OUTPUT FLAGS
	TRZ B,3B25		; AND CHANGE THE ONES FOR FORMFEED
	TRO B,1B25		; TO FORCE INDICATE BY UPARROW L
	SFCOC			; SET IT.
OJOP1:	SETZM INTOK		; IGNORE INTS
	MOVEI A,101
	CAME A,OUTJFN		; OUTPUT TO PRIMARY OUTPUT?
	 JRST LOOP		; NO, NO INTERRUPTS NEEDED
	GJINF			; GET CONTROLLING TTY IN 4
	MOVEI A,100
	DVCHR			; AND PRIMARY INPUT DEVICE CHAR
	LDB B,[POINT 9,B,17]	; EXTRACT DEVICE TYPE
	ANDI A,377777		; AND UNIT NUMBER
	CAMN A,4		; IF NOT CONTROLLING TTY
	CAIE B,12		; OR IF NOT TTY
	 JRST [	MOVE A,[1B0+1B1+1B4+INFRK]
		TRNN FLG,NOINTF	; DON'T SET UP FORK IF FLAG IS SET.
		CFORK		; NOT CONTROLLING TTY, USE A FORK
		 JRST LOOP
		JRST LOOP]
	MOVE A,[^D28,,1]	; ELSE ARM AN INTERRUPT
	ATI
ifn SUMEX,	<move a,[xwd ^d15,2]	;arm ^O also
		setom	o.ok	;only want one ^O
		 ati>
LOOP:	MOVE A,JFN
	RFPTR
	 JFCL
	MOVEM B,BEGM		; SAVE WHERE THIS STARTS
	move B,[1b8]		;require seconds
	IDTIM
	 JRST BADFRM		; UNDATED FORMAT
	MOVEM B,THISDT
	MOVEI C,12
	NIN
	 JRST BADFRM
	MOVEM B,SKIPCH
	hrroi	b,errmsg
	movei	c,100
	movei	d,12
	sin			; FLUSH LF AFTER CR
	jumpe	c,badfrm
	MOVE B,THISDT
	CAMGE B,DATE
	 JRST	NXTMS1
	JUMPN EPTR,SVPTRS	;JUMP IF REVERSE ORDER.
	PUSHJ P,COPY		;COPY REST OF ENTRY.
NXTMSG:	MOVE A,OUTJFN
	CAIN A,101
	DOBE
NXTMS1:	MOVE A,JFN
	RFPTR			; READ WHERE WE ARE IN FILE
	 JRST BADFRM		; APPARENTLY NOT A DISK FILE
	ADD B,SKIPCH		; ADD CHARACTER COUNT
	CAML B,FILLEN
	 JRST [	JUMPN EPTR,RVOUT	;JUMP IF REVERSE ORDER.
		JRST DONE ]
	SFPTR
	 HALT
	JRST LOOP

BADFRM:	TRO F,4			; REMEMBER WE TYPED SOMETHING
	TRON F,2		; NOW IN BAD MESSAGE, ALREADY IN ONE?
	SETOM INTOK		; NO, JUST STARTING, RESET INTS
	SETZM SKIPCH
	HRROI A,[ASCIZ /
File contains undated entries or improper format.
/]
	TRON F,1
	PSOUT
	MOVE A,JFN
	MOVE B,BEGM
	SFPTR
	 JFCL
BADF1:	MOVE A,JFN
	BIN
	JUMPE B,[GTSTS
		TLNE B,1000
		JRST DONE
		JRST BADF1]
	MOVE A,OUTJFN
	SKIPGE INTOK		; DELETING OUTPUT?
	BOUT
	CAIE B,12
	CAIN B,37
	JRST NXTMS1		; TRY AGAIN
	JRST BADF1

COPY:	TRO F,4			; REMEMBER WE TYPED SOMETHING
	MOVE A,OUTJFN
	TRZN F,2		; NO LONGER IN BAD MESSAGE
	 JRST COPY11
	CAIN A,101
	DOBE			; WAIT FOR BAD MESSAGE TO FINISH
COPY11:	SETOM INTOK		; RESET INTS
	SETZ C,
	EXCH C,SKIPCH
COPY1:	MOVE A,JFN
	BIN
	JUMPE B,[GTSTS
		TLNE B,1000
		 JRST [	POP P,A	;POP RETURN FROM COPY.
			JRST DONE ]
		JRST COPY2]
	MOVE A,OUTJFN
	SKIPGE INTOK
	BOUT
COPY2:	SOJG C,COPY1
	POPJ P,

NODSK:	HRROI A,[ASCIZ / Input file is not DSK:
/]
	ESOUT
	TRO	F,4	;PREVENT FINAL MESSAGE
	JRST DONE1

SVPTRS:	MOVE A,JFN
	RFPTR
	 JRST BADFRM
	PUSH EPTR,B		;SAVE START OF ENTRY.
	MOVE B,SKIPCH
	PUSH EPTR,B		;SAVE LENGTH.
	AOS ECNT		;COUNT IT.
	JRST NXTMSG

RVOUT:	SOSGE ECNT		;COUNT DOWN.
	 JRST DONE
	POP EPTR,B
	MOVEM B,SKIPCH		;PUT COUNT BACK.
	POP EPTR,B
	MOVE A,JFN
	SFPTR			;RESET POINTER.
	 JFCL
	PUSHJ P,COPY		;COPY MESSAGE OUT.
	JRST RVOUT


DONE:	MOVE A,OUTJFN
	CAIN A,101
	DOBE
	HRLI A,400000
	SKIPL OJFSTS		; WAS OUTPUT OPEN ON ENTRY?
	CLOSF			; NO, CLOSE IT HERE
	 JFCL
DONE1:	MOVE A,JFN
	HRLI A,400000
	SKIPL JFNSTS		; WAS JFN OPEN ON ENTRY?
	CLOSF			; NO, CLOSE IT
	 JFCL
	HRROI A,[ASCIZ /
No recent messages./]
	TRNN F,10
	 HRROI A,[ASCIZ /
No messages at all./]
	TRNE F,4
	AOS 0(P)		; SKIP IF NO MESSAGES.
	POPJ P,

;TYPE LAST ERROR MESSAGE
ERROUT:	HRROI	A,ERRMSG
	MOVE	B,[XWD 400000,-1]
	MOVE	C,[XWD -^D99,0]
	ERSTR
	 move 	A,[point 7,errmsg]
	 move 	A,[point 7,errmsg]
	SETZ	B,
	IDPB	B,A
	HRROI	A,ERRMSG
	ESOUT
	POPJ	P,

LEVTAB:	RETPC1
	RETPC2
	RETPC3

CHNTAB:	0
	XWD A,RUBINT
ife SUMEX,	<0>
ifn SUMEX,	<xwd  2,o.int>
	REPEAT ^D34,<0>

RUBINT:	AOSE INTOK
	 DEBRK
	MOVEM A,INTAC1
	MOVEI A,101
	CFOBF
	HRROI A,[ASCIZ /
...
/]
	PSOUT
	MOVE A,INTAC1
	DEBRK

ifn SUMEX,	<
o.int:	aose	o.ok		;allow only one ^O
		debrk
		setzm	intok		;disable rubint
		movei	a,101		;clear tty: buffer
		cfobf
		hrroi	a,[asciz / ***** ^O *****
/]

		psout
	MOVE A,OUTJFN
	CAIN A,101
	DOBE
	HRLI A,400000
	SKIPL OJFSTS		; WAS OUTPUT OPEN ON ENTRY?
	CLOSF			; NO, CLOSE IT HERE
	 JFCL
	MOVE A,JFN
	HRLI A,400000
	SKIPL JFNSTS		; WAS JFN OPEN ON ENTRY?
	CLOSF			; NO, CLOSE IT
	 JFCL
		haltf
		jrst	.-1	;done right now

			>


; FORK TO PLAY TERMINAL PSI'S IF NEEDED

ife SUMEX,	<
INFRK:	PBIN
	CAIE A,177
	 JRST INFRK
	MOVEI A,777777		; SUPERIOR FORK
	MOVSI B,(1B1)		; CHANNEL 1
	IIC
	JRST INFRK
		>

ifn SUMEX,	<
	infrk:	pbin		;lower fork to check for rubout
		caie	a,177	;and ^O
		jrst	.+5	;not a roubout
		movei	a,777777	;make an psi on superior fork
		movsi	b,(1b1)		;chan 1
		iic
		jrst	infrk
		caie	a,^D15	; ^O typed
		jrst 	infrk
		movei	a,777777	;make ^O psi
		movsi	b,(1b2)	;on chan 2
		iic
		jrst	infrk

		>


INTAC1:	BLOCK 1
RETPC1:	BLOCK 1
RETPC2:	BLOCK 2
RETPC3:	BLOCK 1
INTOK:	BLOCK 1
ifn SUMEX,	<
		o.ok:	block	1
		>

T1:	BLOCK 1
T2:	BLOCK 1
DATE:	BLOCK 1
JFN:	BLOCK 1
OUTJFN:	BLOCK 1
DATDUN:	BLOCK 1
DATWRN:	BLOCK 1
BEGM:	BLOCK 1
PDL:	BLOCK NPDL
JFNSTS:	BLOCK 1
OJFSTS:	BLOCK 1
THISDT:	BLOCK 1
SKIPCH:	BLOCK 1
FILLEN:	BLOCK 1
ECNT:	BLOCK 1
ERRMSG:	BLOCK 20

LIT
VAR

ENTLST:	BLOCK NENTS


END	ENTVEC
