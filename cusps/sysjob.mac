;<SOURCES>SYSJOB.MAC;3  28-APR-75 EDIT BY COWER
;ADDED AUTO ENT VECTOR SETTER
;<SOURCES>SYSJOB.MAC;2 23-APR-75 EDIT BY COWER
;FIXED ATTIME COMMAND SO IT WILL ACCEPT JUST TIME AS INPUT
;KILLS LOWER FORKS IN HALTED JOBS
;<SOURCES>SYSJOB.MAC;1 4-FEB-75 EDIT BY CROSSLAND
;FIXED SO THAT A FORK HALTED BY HFORK OR HALTF IS NOT REPORTED
;AS HAVING A JSYS ERROR
;<SOURCES>SYSJOB.MAC;1  10-DEC-74 09:00 EDIT BY COWER
;WILL CHECKPOINT EVERY ODD HOUR (FOR SUMEX)
;<SOURCES>SYSJOB.MAC;11    30-MAY-73 20:28:00	EDIT BY CLEMENTS
; ADDED FILSTAT COMMAND. ADDED RAISING OF LOWER CASE. MOVED
; CHECK OF DEBUG SWITCH INTO INNER LOOP. ADDED COMMENT-ABILITY IN
; INPUT BY BELIEVING ";" IN COLUMN 1. ADDED RESTART AND RELOAD CMDS
;<SOURCES>SYSJOB.MAC;10     5-MAR-73 17:50:11	EDIT BY CLEMENTS
;<SOURCES>SYSJOB.MAC;9    21-FEB-73 22:40:08	EDIT BY CLEMENTS
;ADDED AUTOMATIC CHECKPOINTING
;<SOURCES>SYSJOB.MAC;8    26-OCT-72 17:51:55	EDIT BY CLEMENTS
;ADDED FILSTAT ON JOB CRASHES
;<SOURCES>SYSJOB.MAC;7    26-OCT-72 13:40:32	EDIT BY CLEMENTS
;ADDED MORE STUFF FOR CRASH  ANALYSIS IN TYPEOUT
;<SOURCES>SYSJOB.MAC;6    26-OCT-72 11:42:47	EDIT BY TOMLINSON
; ADDED RELOAD INTERRUPT CHARACTER
;<SOURCES>SYSJOB.MAC;5    25-OCT-72 22:10:46	EDIT BY CLEMENTS
;ADDED CODE TO TYPE JSYS ERROR FROM INFERIORS THAT CRASH
;19 APR 72, 2156:
;EXECUTIVE TO CONTROL 'DETACHED' SYSTEM JOBS - D. MURPHY

	TITLE SYSJOB
	SEARCH STENEX

P=17
F=0
A=1
B=2
C=3
D=4
;NOTE - GETER'S IN THIS PROGRAM, CLOBBER UP THRU AC 10

X=14
NX=15		;NAME INDEX

NPDL==40

NJOBS==20	;MAX NUMBER OF SIMULTANEOUS JOBS
NAJOBS==100		;MAX NUMBER ADVANCE JOBS
NAJCW==10		;NUMBER WORDS FOR COMMAND STRING FOR EACH AJOB

OPDEF CALL [PUSHJ P,0]
OPDEF RET [POPJ P,0]
EOL==37

INTCCD==3		;^C IS INTERRUPT CHAR, FORCES RESTART
INT2CD==2		;^B IS INTERRUPT CHAR, FORCES RELOAD

FRKTMF=1B1		;FORK TERMINATION NOTED BY INTERRUPT
AJCMF=1B2		;COMMAND COMING FROM AJOB STRING BUFFER

DEFINE MSG (XMSG)<	HRROI A,[ASCIZ \XMSG\]
	PSOUT
>

EVEC:	JRST START		;REGULAR START
	JRST DSTRT		;DETACH AND START
EVECL==.-EVEC

DSTRT:	DTACH
	MOVEI 1,400000
	MOVE 2,[XWD 400000,400000] ;SET PRIMARY IO TO TTY 0
	SPJFN
START:	RESET
	MOVE P,[IOWD NPDL,PDL]
	SETZ F,
	GTAD			;WAIT TILL TIME SET
	JUMPL 1,[MOVEI 1,^D5000
		DISMS
		JRST START]
	MOVEI 1,400000
	RPCAP
	MOVE 3,2
	EPCAP			;ENABLE ALL POSSIBLE CAPS
	HRROI 1,[ASCIZ /
SYSJOB STARTED AT /]
	PSOUT
	MOVEI A,101
	SETO B,
	MOVSI C,240
	ODTIM			;TIME STAMP THE RESTART
	PUSHJ P,PCRLF
       	SETOM INJFN		;NO INPUT JFN NOW OPEN
	SETZM FORKN
	MOVE 1,[XWD FORKN,FORKN+1]
	BLT 1,NAME+NJOBS-1	;INIT FORK HANDLE TABLE TO EMPTY
	SETZM TIMES		;INIT ADVANCE TIMES TABLE
	MOVE 1,[XWD TIMES,TIMES+1]
	BLT 1,TIMES+NAJOBS-1
	MOVEI 1,400000		;INIT PSI SYSTEM, THIS FORK
	MOVE 2,[XWD LEVT,CHNT]
	SIR
	MOVE 2,CHNMSK
	AIC
	EIR
	GJINF			;GET OUR JOB NUMBER
	JUMPN 3,ST1		;NO INTERRUPT CHAR NEED IF NOT JOB 0
	MOVE 1,[XWD INTCCD,0]	;PUT THE INTERRUPT CHAR ON 0
	ATI
	MOVE 1,[XWD INT2CD,1]	; PUT RELOAD CHAR ON 1
	ATI

ST1:	CALL SETCKT		;SELECT FIRST CHECKPOINT TIME
	TIME			;GET THE SYSTEM TIME DIVISOR
	IDIVI B,^D1000		;DIVISOR FOR MILLISECONDS
	MOVEM B,DIVISOR		;SAVE FOR CHECKPOINT ROUTINE
	MOVSI 1,(1B2+1B17)	;SETUP TO DO INITIAL COMMANDS
	HRROI 2,[ASCIZ /<SYSTEM>SYSJOB.RUN/]
	MOVE 3,DBUGSW
	CAIL 3,2		;DEBUGGING?
	HRROI 2,[ASCIZ /<SYSTEM>SYSJOB.DEBUG/] ;YES, USE OTHER FILE
	GTJFN
	JRST [	HRROI 1,[ASCIZ /SYSJOB COMMAND FILE NOT FOUND.
/]
		PSOUT
		JRST WAITI]
	MOVEM 1,INJFN
	MOVE 2,[7B5+1B19]
	OPENF
	JRST [	CALL JSERR
		SKIPL 1,INJFN
		RLJFN
		JFCL
		SETOM INJFN
		JRST WAITI]
	CALL DOCMND		;DO INITIAL COMMANDS
	SKIPL 1,INJFN
	CLOSF
	JFCL
	SETOM INJFN
	JRST WAITI

;PERIODIC CHECK FOR MORE COMMANDS AND CHANGE IN JOB STATES

WAITI:	MOVE 1,[SIXBIT /SYSJOB/]
	SETNM
	MOVE 1,[SIXBIT /DBUGSW/]
	SYSGT			;GET DBUGSW FROM SYSTEM
	CAIN 2,0
	SETZ 1,			;ASSUME 0 IF NO DBUGSW TABLE
	MOVEM 1,DBUGSW
	MOVEI 1,^D15000
	TLZN F,(FRKTMF)		;IF FORK TERMINATED, DON'T DISMS
WAITPC:	DISMS			;WAIT 15 SEC.
	MOVSI 1,(1B2+1B17)
	HRROI 2,[ASCIZ /<SYSTEM>SYSJOB.COMMANDS/]
	GTJFN			;MORE COMMANDS?
	JRST WAIT1		;NO
	MOVEM 1,INJFN
	MOVE 2,[7B5+1B19]
	OPENF
	JRST WAIT2		;FILE WON'T OPEN
	CALL DOCMND
	MOVE 1,INJFN
	HRLI 1,400000
	CLOSF			;CLOSE BUT KEEP JFN
	JFCL
WAIT2:	SKIPL 1,INJFN
	DELF			;DELETE THE FILE
	JFCL
	SKIPL 1,INJFN
	RLJFN
	JFCL
	SETOM INJFN		;NOT OPEN NOW
WAIT1:	MOVSI NX,-NJOBS		;CHECK STATE OF ALL JOBS
	SKIPN 1,FORKN(NX)	;JOB EXISTS?
WAIT4:	AOBJN NX,.-1		;NO, GO ON TO NEXT
	JUMPGE NX,WAIT5		;DONE WHEN ALL JOBS CHECKED
	RFSTS
	HLRZ 1,1
	TRZ 1,400000		;FLUSH FREEZE BIT IF ANY
	CAIN	1,2		;EQUAL IF JOB HALTED
	JRST	NOFSTA		;KILL FORK IF HALTED
	CAIN 1,3
	JRST .+2		;YES
	JRST WAIT4		;NO, OK
	CALL PSTAT		;PRINT ITS STATE
	HRROI 1,[ASCIZ /  JSYS ERROR: /]
	PSOUT

WATERR:	MOVE 1,FORKN(NX)
	GETER			;GET THE ERROR NUMBER
	MOVEI 1,101		;ANALYSIS TO TTY
	MOVEI 3,0		;ARG TO ERSTR
	ERSTR
	  JFCL
	  JRST [MOVE 1,FORKN(NX)	;NO MSG - TYPE NUMBER
		GETER
		MOVEI 1,101		;NOUT TO TTY
		HRRZS 2			;JUST THE NUMBER, NOT FORK.
		MOVEI 3,10		;IN OCTAL
		NOUT
		  JFCL
		JRST .+1]
	MOVE 1,FORKN(NX)
	MOVEI 2,FRKACS		;GET THE DEAD GUY'S ACS
	RFACS
	MSG <
  FORK AC'S:>
	MOVSI X,-4		;TYPE 1-4
CRASHL:	MSG <  >
	MOVE B,FRKACS+1(X)
	MOVEI A,101
	MOVEI C,10
	NOUT			;TYPE IN OCTAL
	  JFCL
	AOBJN X,CRASHL
	PUSHJ P,PCRLF
	SKIPE DBUGSW		;IF DEBUGGING, DO FILSTAT
	PUSHJ P,FILSTA		;DO FILE STATUS
NOFSTA:	MOVE 1,FORKN(NX)
	KFORK			;FLUSH IT
	SETZM FORKN(NX)
	SETZM NAME(NX)
	JRST WAIT4

FILSTA:	MSG <  JOB 0 FILSTAT:
>
	MOVEI X,77
FSTATL:	MOVEI A,(X)
	GTSTS
	TLNN B,(1B10)		;ANY FILE AT THIS JFN?
	JRST FSTATN		;NO
	PUSH P,B		;YES. SAVE BITS
	MOVEI B,(X)		;TYPE JFN NUMBER
	MOVEI A,101
	MOVE C,[3,,10]
	NOUT
	  JFCL
	MOVEI B,40
	BOUT
	MOVEI B,(X)
	MOVEI C,0
	JFNS
	MOVEI B,40
	BOUT
	POP P,D
DEFINE BITMSG(N,XMSG)<
	HRROI A,[ASCIZ \XMSG\]
	TLNE D,(1B'N)
	PSOUT
>
	JUMPL D,FSTAT1
	MSG <NOT OPEN >
FSTAT1:	BITMSG (1,<READ >)
	BITMSG (2,<WRITE >)
	BITMSG (3,<XCT >)
	BITMSG (9,<ERROR >)
	PUSHJ P,PCRLF
FSTATN:	SOJGE X,FSTATL
	POPJ P,0

;EXAMINE ALL ADVANCE SCHEDULED JOBS TO SEE IF NOW TIME TO RUN

WAIT5:	GTAD			;GET TIME NOW
	MOVSI 5,-NAJOBS
	SKIPN TIMES(5)		;JOB QUEUED HERE?
WAIT6:	AOBJN 5,.-1		;NO
	JUMPGE 5,CHKPQ		;DONE WHEN ALL ENTRIES EXAMINED
	CAMGE 1,TIMES(5)	;IS NOW .GE. DESIRED TIME?
	JRST WAIT6		;NO, LEAVE JOB IN QUEUE
	SETZM TIMES(5)		;YES, REMOVE JOB FROM QUEUE
	MOVEI 5,0(5)		;COMPUTE POINTER TO STORED COMMAND
	IMULI 5,NAJCW
	ADD 5,[XWD 440700,AJCMD]
	MOVEM 5,AJCMP		;LEAVE POINTER FOR GCIN
	TLO F,(AJCMF)		;NOTE COMMAND FROM STORED STRING
	CALL CMND0		;DO COMMAND
	TLZ F,(AJCMF)
	JRST WAIT5

;SEE IF TIME TO DO A CHECKPOINT

CHKPQ:	GTAD			;GET CURRENT TIME
	CAML 1,CHKTIM		;STILL BEFORE CHECKPOINT TIME?
	SKIPG CHKTIM		;AND A CHECK TIME EXISTS?
	JRST CHKPQX		;NO. EXIT
	CALL CHKPNT		;YES. DO THE CHECKPOINT
	CALL SETCKT		;SELECT ANLP99G TIME FOR NEXT ONE
CHKPQX:	JRST WAITI		;END OF THIS TASK

;DO COMMANDS FROM OPEN FILE

DOCMND:	SKIPGE 1,INJFN
	RET
	GTSTS
	TLNN 2,(1B8)		;FILE STILL OPEN AND NOT AT EOF?
	TLNN 2,(1B10)
	RET			;DONE
CMND0:	MOVE 7,CMDPT0		;INIT POINTER FOR COMMAND
	MOVEM P,CMNDP		;SAVE STACK FOR COMMAND ABORTS
CMND4:	CALL GCIN
	CAIE 1,EOL		;CHECK FOR COMMAND WORD TERMINATOR
	CAIN 1," "
	JRST CMND1
	CAIN 1,";"		;SEMICOLON?
	CAME 7,CMDPT0		;AND BEGINNING OF STRING?
	SKIPA			;NO
	JRST CMND1		;YES. COMMENT.
	IDPB 1,7		;CONSTRUCT STRING
	JRST CMND4

CMND1:	MOVEM 1,TERMCH		;SAVE TERMINATOR
	CAMN 7,CMDPT0		;NULL COMMAND?
	JRST [	CAIN 1,EOL	;YES, BLANK LINE?
		JRST CMDEND	;YES. ON TO NEXT.
		CAIN 1,";"	;COMMENT LINE?
		JRST CMDFLS	;YES. SKIP IT
		JRST CMND4]	;NO, LEADING SPACE - TRY AGAIN
	SETZ 1,
	IDPB 1,7		;PUT NULL ON STRING
	MOVSI 5,-LCMTB		;SET TO SEARCH COMMAND TABLE
CMND2:	MOVE 1,CMDPT0
	HRRZ 2,CMNDTB(5)	;POINTER TO KNOWN COMMAND NAME
	HRLI 2,440700
	CALL STCOMP		;SKIP IF STRINGS NEQ
	JRST [	HLRZ 1,CMNDTB(5) ;FOUND, DISPATCH TO IT
		JRST 0(1)]
	AOBJN 5,CMND2
	MOVE 1,TERMCH		;NOT FOUND, SCAN TO END OF LINE
CMND3:	CAIN 1,EOL
	JRST [	HRROI 1,[ASCIZ / - UNRECOGNIZED COMMAND.
/]
		PSOUT
		JRST CMDEND]
	CALL GCIN
	JRST CMND3

CMDFLS:	SKIPA 1,TERMCH		;FLUSH REMAINDER OF LINE
	CALL GCIN
	CAIE 1,EOL		;GOT TO EOL?
	JRST .-2		;NO, KEEP LOOKING
CMDEND:	MOVE P,CMNDP		;RESTORE STACK
	TLZE F,(AJCMF)		;WERE DOING STORED COMMAND?
	RET			;YES, RETURN NOW
	JRST DOCMND

;COMMANDS
;RUN FILENAME

.RUN:	MOVE 1,TERMCH
	CAIE 1," "		;PROPER TERMINATOR?
	JRST CMDFLS		;NO
	MOVE 7,CMDPT0		;GATHER FILE NAME
RUN1:	CALL GCIN
	CAIN 1,EOL		;TERMINATES WITH EOL
	JRST RUN2
	IDPB 1,7
	JRST RUN1

RUN2:	SETZ 1,
	IDPB 1,7		;ADD NULL TO STRING
	CALL IJFNT		;INIT THE JFN TABLE
	MOVSI 1,(1B2)
	MOVEM 1,JFNTAB
	MOVEI 1,JFNTAB
	MOVE 2,CMDPT0		;FILENAME STRING
	GTJFN
	JRST [	CALL JSERR
		JRST CMDEND]	;NOT FOUND, ETC.
	PUSH P,1
	HRROI 1,NAMBUF
	HRRZ 2,0(P)
	MOVSI 3,(1B8)
	JFNS			;GET STRING CONTAINING NAME FIELD ONLY
	MOVSI 1,(1B1)		;XMIT CAPABILITIES
	CFORK
	JRST [	CALL JSERR
		JRST CMDEND]
	EXCH 1,0(P)
	HRL 1,0(P)		;XWD FORK,JFN
	GET
	MOVSI NX,-NJOBS		;FORK READY TO GO, MAKE TABLE ENTRY
	SKIPE FORKN(NX)		;AVAILABLE SLOT?
	AOBJN NX,.-1		;NO

RUN2A:	JUMPGE NX,[HRROI 1,[ASCIZ /TABLES FULL.
/]
		PSOUT
		POP P,1
		KFORK
		JRST CMDEND]
	POP P,FORKN(NX)		;PUT FORK  HANDLE IN TABLES
	SETZM NAME(NX)		;SETUP TO PUT SIXBIT NAME IN TABLES
	MOVEI 4,NAME(NX)
	HRLI 4,440600
	MOVE 3,[POINT 7,NAMBUF,-1]
	MOVEI 2,6		;MAX 6 CHARS
RUN4:	ILDB 1,3
	JUMPE 1,RUN3		;END OF STRING
	SUBI 1,40		;CONVERT TO SIXBIT
	IDPB 1,4
	SOJG 2,RUN4
RUN3:	MOVE 1,FORKN(NX)	;NOW START THE JOB
	SETZ 2,			;AT MAIN START LOC
	SFRKV
	JRST CMDEND

;COMMANDS
;KILL JOBNAME

.KILL:	CALL GETNAM		;GET NAME FROM COMMAND STRING
	MOVE 1,FORKN(NX)
	KFORK
	SETZM FORKN(NX)		;RELEASE SLOT
	SETZM NAME(NX)
	JRST CMDEND

;STOP JOBNAME
; (FREEZES FORK)

.STOP:	CALL GETNAM
	MOVE 1,FORKN(NX)
	FFORK
	JRST CMDEND

;START JOBNAME
; (UNDOES STOP)

.START:	CALL GETNAM
	MOVE 1,FORKN(NX)
	RFORK
	JRST CMDEND

.FILST:	CALL FILSTA		;DO A FILE STATUS
	JRST CMDFLS

.RSTRT:	SKIPA B,[1B0]		;KICK OFF A RESTART PSI
.RLOAD:	MOVSI B,(1B1)		;KICK OFF A RELOAD PSI
	PUSH P,B
	SKIPGE 1,INJFN		;INPUT FILE OPEN?
	JRST NODEL1		;NO
	HRLI 1,400000		;CLOSE AND KEEP JFN
	CLOSF
	  JFCL
	HRRZ 1,INJFN
	DELF
	  JFCL
NODEL1:	POP P,B
	MOVEI A,400000		;IN THIS FORK
	IIC
	JRST CMDFLS		;FINISH COMMAND (WONT GET FAR)

;COMMANDS
;STATUS

.STAT:	MOVSI NX,-NJOBS		;SCAN ALL JOBS, PRINTING FORK STATUS
	SKIPN FORKN(NX)		;SLOT IN USE?
STAT1:	AOBJN NX,.-1		;NO
	JUMPGE NX,CMDFLS
	CALL PSTAT		;PRINT THE STATUS
	JRST STAT1

;PRINT STATUS FOR 1 JOB

PSTAT:	MOVEI 2,0(NX)
	MOVEI 1,101
	MOVE 3,[1B2+3B17+12]
	NOUT			;PRINT LOCAL INDEX IN 3 CHAR FIELD
	JFCL
	MOVEI 2," "
	BOUT
	MOVEI 4,NAME(NX)
	HRLI 4,440600
	MOVEI 3,6		;PRINT THE NAME, I.E. FIRST 6 CHARS
	ILDB 2,4		;OF FILE NAME
	ADDI 2,40
	BOUT
	SOJG 3,.-3
	MOVEI 2," "
	BOUT
	MOVE 1,FORKN(NX)
	RFSTS			;GET FORK STATUS
	PUSH P,2		;SAVE PC
	HLRZ 1,1
	TRZE 1,400000		;FROZEN?
	JRST [	PUSH P,1	;YES
		HRROI 1,[ASCIZ /STOPPED, /]
		PSOUT
		POP P,1
		JRST .+1]
	HRRO 1,FSTAB(1)		;MESSAGE FOR STATE OF FORK
	PSOUT
	HRROI 1,[ASCIZ / AT /]
	PSOUT
	POP P,2			;PC
	MOVEI 2,0(2)
	MOVEI 1,101
	MOVEI 3,10
	NOUT
	JFCL
	MSG <  >
	MOVEI 1,101
	SETO 2,
	MOVSI 3,240
	ODTIM
	JRST PCRLF

;ATTIME DATE TIME; COMMAND
;SEMICOLON DELIMITS TIME

.ATTM:	MOVE 1,TERMCH
	CAIE 1," "		;PROPER TERMINATOR?
	JRST CMDFLS		;NO
	MOVE 7,CMDPT0		;SET TO READ DATIME STRING
ATTM1:	CALL GCIN
	CAIN 1,EOL
	JRST CMDEND		;EOL, SOMEBODY GOOFED
	CAIN 1,";"
	JRST ATTM2		;END OF DATIME STRING
	IDPB 1,7
	JRST ATTM1

ATTM2:	SETZ 1,
	IDPB 1,7		;STRING TERMINATOR
	MOVE 1,CMDPT0
	SETZ 2,
	IDTIM			;CONVERT STRING TO INTERNAL FORMAT
	pushj	p,nodate	;insert idtim failure code here!!
	MOVSI 5,-NAJOBS		;FIND A FREE QUEUE SLOT
	SKIPE TIMES(5)
	AOBJN 5,.-1
	JUMPGE 5,[HRROI 1,[ASCIZ /
NO QUEUE SLOTS LEFT.
/]
		PSOUT
		JRST CMDFLS]
	MOVEM 2,TIMES(5)
	MOVEI 4,0(5)		;COMPUTE STRING PTR FOR COMMAND
	IMULI 4,NAJCW
	ADD 4,[XWD 440700,AJCMD]
	MOVEI 3,NAJCW*5		;MAX NUMBER CHARS IN STORED COMMAND
	CALL GCIN
	IDPB 1,4
	CAIE 1,EOL		;STORE TO EOL
	SOJG 3,.-3		;OR UNTIL STRING FULL
	JUMPLE 3,[HRROI 1,[ASCIZ /
COMMAND TOO LONG TO BE STORED.
/]
		PSOUT
		SETZM TIMES(5)	;REMOVE FROM QUEUE
		JRST CMDFLS]
	JRST CMDEND
nodate:		gtad			;get tod
		movem	1,tod		;put it away
		hrrm	1,sec		;setup
		hlrz	2,1		;setup
		imuli	2,^d86400	;secs since 1858
		addm	2,sec 		;it it to secs since midnite
		move	3,sec
		movem	3,nowsec
		move	2,tod		;bring it back
		hrro	1,[point 7,date];where to put odtim
		move	3,[xwd 045401,000000]
		odtim			 
		move	1,cmdpt0
		hrro	2,[point 7,date+2]
		movei	3,^d7
		movei	4,37
		sin
		move	2,[point 7,date+1]
		movei	3," "
		dpb	3,[point 7,date+1,20]
		move	2,[point 7,date+2]
		ldb	4,[point 7,date+2,6]
		dpb 	4,[point 7,date+1,27]
		ldb	4,[point 7,date+2,13]
		dpb 	4,[point 7,date+1,34]
		ldb	4,[point 7,date+2,20]
		dpb	4,[point 7,date+2,6]
		ldb	4,[point 7,date+2,27]
		dpb	4,[point 7,date+2,13]
		ldb	4,[point 7,date+2,34]
		dpb	4,[point 7,date+2,20]
		setz	5,
		dpb	5,[point 14,date+2,35]
		hrroi	1,date
		setz	2,
		idtim
		jrst	[call jserr
			jrst	cmdfls]
		movem	2,gotime
		hrrm	2,nsec
		hlrz	3,2
		imuli	3,^d86400
		addm	3,nsec
		move	3,nsec
		movem	3,gosec
		move	2,gosec
		camg	2,nOWSEC
		jrst	[
			move	2,gotime
			add	2,[xwd 1,0]
			movem	2,gotime 
			popj	p,]
	       	MOVE 	2,GOTIME
	       	popj	p,




;GET CHAR FROM INPUT FILE, COPY TO PRIMARY OUTPUT FOR INFO

GCIN:	TLNE F,(AJCMF)		;FROM STORED COMMAND?
	JRST [	ILDB 1,AJCMP	;YES
		PBOUT		;REPORT IT
		CAIL 1,141
		CAILE 1,172	;LC A TO Z?
		SKIPA
		TRZ 1,40	;YES. MAKE UC
		RET]
	PUSH P,2
	MOVE 1,INJFN
	BIN
	JUMPE 2,CMDEND		;NULL - ASSUME EOF
	CAIL 2,141
	CAILE 2,172		;LOWER CASE ALPHABET?
	SKIPA			;NO
	TRZ 2,40		;YES. RAISE IT.
	CAIN 2,15		;NORMALIZE CR, LF, EOL
	JRST [	BIN		;CR - ASSUME LF FOLLOWS
		MOVEI 2,EOL
		JRST .+1]
	CAIN 2,12
	MOVEI 2,EOL
	MOVEI 1,101
	BOUT
	MOVE 1,2
	POP P,2
	RET

;INITIALIZE JFN TABLE

IJFNT:	MOVE 1,[XWD IJFNTT,JFNTAB]
	BLT 1,JFNTAB+7
	RET

IJFNTT:	0
	XWD 377777,377777	;NO FILE I/O
	0
	XWD -1,[ASCIZ /SYSTEM/]	;DEFAULT TO SYSTEM DIRECTORY
	0
	XWD -1,[ASCIZ /SAV/]	;DEFAULT TO .SAV
	0
	0

;COMPARE STRINGS IN 1,2
;SKIP IF NOT EQUAL

STCOMP:	PUSH P,1
	PUSH P,2
STC1:	ILDB 1,-1(P)
	ILDB 2,0(P)
	CAIN 1,0(2)
	JUMPN 1,STC1		;EQUAL SO FAR, END OF STRINGS?
	CAIE 1,0(2)		;END OR NOT EQUAL, WHICH?
	AOS -2(P)		;NOT EQUAL, SKIP RETURN
	POP P,2
	POP P,1
	RET

;GET NAME FROM COMMAND AND LOOKUP

GETNAM:	MOVE 1,TERMCH
	CAIE 1," "		;PROPER TERMINATOR?
	JRST CMDFLS		;NO
	MOVEI 6,6
	SETZ 7,			;ACCUMULATE SIXBIT IN 7
	MOVE 5,[POINT 6,7,-1]
GETN2:	CALL GCIN
	CAIE 1,EOL		;EOL OR SPACE TERMINATES
	CAIN 1," "
	JRST GETN1
	JUMPLE 6,GETN2		;DON'T STORE CHAR IF ALREADY HAVE 6
	SUBI 1,40
	IDPB 1,5
	SOJA 6,GETN2

GETN1:	MOVSI NX,-NJOBS
	CAME 7,NAME(NX)		;NAME MATCH?
	AOBJN NX,.-1		;NO
	JUMPGE NX,[HRROI 1,[ASCIZ /NAME NOT FOUND.
/]
		PSOUT
		JRST CMDEND]
	RET

;JSYS ERROR

JSERR:	HRROI 1,[ASCIZ /
JSYS ERROR: /]
	PSOUT
	MOVEI 1,400000
	GETER			;CLOBBERS THRU AC 10
	MOVEI 1,101
	SETZ 3,
	ERSTR
	JFCL
	JFCL
PCRLF:	MSG <
>
	RET

;SET NEXT CHKPNT TIME

SETCKT:	GTAD			;GET THE CURRENT TIME
	PUSH P,A		;STACK IT
	MOVE B,A		;PARSE IT
	MOVEI D,0
	ODCNV			; ..
	SETZB B,C
SETCTL:	SKIPGE A,CHKTMT(C)	;AN ENTRY FROM TIMES TO CHECKPOINT
	JRST SETCT1		;NO MORE TODAY
	CAIGE A,0(D)		;IS THIS TIME LATER THAN "NOW"?
	AOJA C,SETCTL		;NO. PASSED TEST TIME, TRY ANOTHER
	PUSH P,C		;TEST TIME NOT YET. USE IT.
	MOVE B,-1(P)		;GET "NOW"
	MOVEI D,0
	ODCNV
	POP P,A			;GET TEST TIME
	HRR D,CHKTMT(A)		;PUT IT IN "TODAY"
SETCT2:	IDCNV			;CONVERT TO INTERNAL
	  MOVNI B,1		;FAILED. SET TO -1
	MOVEM B,CHKTIM		;THAT'S THE TIME TO CHECK NEXT.
	POP P,(P)		;CLEAR TIME OFF STACK
	POPJ P,0		;RETURN FROM SETCKT

SETCT1:	MOVSI B,1		;ADD TO DATE HALFWORD
	ADD B,0(P)		;COMPUTE "THIS TIME TOMORROW"
	MOVEI D,0
	ODCNV			;PARSE THAT, GETTING "TOMMORROW"
	HRRZ D,CHKTMT+0		;AND FIRST TIME TOMORROW
	JRST SETCT2		;USE THAT.

;CHKPNT ROUTINE FOR AUTOMATIC CHKPNT EFACTS

CHKPNT:	HRROI A,0		;POINT TO TABLE 0, ENTRY -1
	GETAB			;WHICH GIVES NUMBER OF JOBS
	  JRST CKPX1		;CAN'T
	HRLZ X,A		;AOBJN COUNTER FOR JOBS
CHECK1:	HRLZ A,X		;CURRENT JOB NUMBER
	HRRI A,1		;TABLE 1 IS RUNTIM
	GETAB			;GET TABLE FOR JOB
	  JRST CKPX2		;CAN'T FAIL
	JUMPLE A,CHECK2		;IF NOT PLUS, NO SUCH JOB.
CHECK3:	MOVE C,[201000,,5]	;HEADER FOR EFACT
	IDIV A,DIVISOR		;CONVERT TO MILLISECONDS
	MOVEM A,CHKRT		;STORE IN EFACT BUFFER
	HRLZ A,X		;GET TTY NUMBER FOR JOB
	GETAB
	  JRST CKPX3		;CAN'T FAIL
	HLRZ A,A		;TTY LINE IS IN LH
	ANDI A,7777		;JUST 12 BITS
	LSH A,6			;IN RIGHT PLACE
	TRO C,(A)		;OR INTO HEADER WORD
	HRRZ A,X		;ALSO THE JOB NUMBER
	ANDI A,777		;NINE BITS
	TLO C,(A)		;OR INTO LH OF HEADER
	MOVEM C,CHKREC		;STORE IN REAL DATA BLOCK
	HRLZ A,X		;GET THE LOGIN DIR
	HRRI A,3		;FROM JOBDIR TABLE
	GETAB			; ..
	  JRST CKPX4		;CAN'T FAIL
	HRRZS A			;JUST THE LOGIN DIRECTORY
	JUMPE A,CHECK2		;DONT BOTHER IF NO DIRECTORY YET
	HRRZM A,CHKDIR		;STORE JUST THE LOGIN DIRECTORY
	GTAD			;AND THE CURRENT TIME
	MOVEM A,CHKTOD		;STASH IN DATA BLOCK FOR EFACT
	MOVE A,[-5,,CHKREC]	;POINTER AND LENGTH FOR EFACT
	EFACT
	  JRST CKPX5		;CAN'T ENTER FACT DATA
CHECK2:	AOBJN X,CHECK1		;LOOP FOR ALL JOBS
	POPJ P,0		;RETURN FROM CHKPNT

CKPX1: CKPX2: CKPX3: CKPX4:
	MSG <
SYSJOB: GETAB FAILURE IN CHECKPOINT ROUTINE
>
	POPJ P,0

CKPX5:	MSG <
SYSJOB:	EFACT FAILURE IN CHECKPOINT ROUTINE
>
	POPJ P,0

;PSI STUFF

LEVT:	PCL1
	PCL2
	PCL3

DEFINE CHNE (LVL,LOC)
<	XWD LVL,[MOVEM 1,CHNN+LVL-1
		MOVEI 1,.-CHNT
		EXCH 1,CHNN+LVL-1
		JRST LOC]
>

	RADIX 10
CHNT:	CHNE (2,INTCH)		;0 - INTERRUPT CH
	CHNE(2,IN2CH)		;1 - RELOAD INTERRUPT CH
	REPEAT 9-2,<CHNE (1,BADI)> ;2 - 8, NOT ENABLED
	CHNE (1,BADI)		;9 - PDL OV
	CHNE (1,BADI)		;10 - NOT ENABLED
	CHNE (1,IGNOR)		;11 - FILE ERROR
	REPEAT 15-12,<CHNE (1,BADI)> ;12-14 NOT ENABLED
	CHNE (1,BADI)		;15 - ITRAP
	CHNE (1,BADI)		;16 - MR TRAP
	CHNE (1,BADI)		;17 - MW TRAP
	CHNE (1,BADI)		;18 - MX TRAP
	CHNE (3,FRKTRM)		;19 - FORK TERMINATED
	CHNE (1,BADI)		;20 - MACH SIZE TRAP
	REPEAT 36-21,<CHNE (1,BADI)> ;21-35, NOT ENABLED
RADIX 8

CHNMSK:	1B0+1B1+1B9+1B11+1B15+1B16+1B17+1B18+1B19+1B20
		;INT CHAR, FRK TRM, ALL PANIC CHANS

;PSI HANDLERS

IGNOR:	DEBRK

INTCH:	JSP 4,LRSET
	HRROI 1,[ASCIZ /
SYSJOB: ^C, RESTARTING...
/]
	PSOUT
	JRST DSTRT

IN2CH:	JSP 4,LRSET
	HRROI 1,[ASCIZ /
SYSJOB: ^B, RELOADING SELF...
/]
	PSOUT
	MOVSI 1,100001
	HRROI 2,[ASCIZ /<SYSTEM>SYSJOB.SAV/]
	GTJFN
	 JRST [	HRROI 1,[ASCIZ /
SYSJOB: CAN'T RELOAD
/]
		PSOUT
		JRST DSTRT]
	HRLI 1,400000
	MOVE 2,[GET]
	MOVE 3,[MOVEI 1,400000]
	MOVE 4,[GEVEC]
	MOVE 5,[JRST 1(2)]
	JRST 2

BADI:	JSP 4,LRSET
	HRROI 1,[ASCIZ /
SYSJOB: UNEXPECTED INTERRUPT ON CHANNEL /]
	PSOUT
	MOVEI 1,101
	MOVE 2,CHNN		;CHANNEL NUMBER FOR LEV 1
	MOVEI 3,^D10
	NOUT
	JFCL
	JRST START

LRSET:	MOVEI 1,400000
	SETO 2,
	DIC
	DIR
	MOVEI 1,-4
	KFORK
	CIS
	JRST 0(4)

;FORK TERMINATED - WAKE UP RIGHT AWAY TO REPORT IT

FRKTRM:	TLO F,(FRKTMF)
	PUSH P,1
	HRRZ 1,PCL3		;PC AT INTERRUPT
	CAIE 1,WAITPC+1		;AT DISMS?
	JRST FRKT1		;NO, RUNNING, WILL NOTICE FLAG
	MOVSI 1,010000		;YES, SET USER FLAG TO RUN
	HLLM 1,PCL3
FRKT1:	POP P,1
	DEBRK



;COMMAND TABLE

DEFINE CM (LOC,NAME)
<	XWD LOC,[ASCIZ /NAME/]
>
CMNDTB:	CM (.RUN,RUN)
	CM (.KILL,KILL)
	CM (.START,RESUME)
	CM (.STOP,FREEZE)
	CM (.STAT,STATUS)
	CM (.ATTM,ATTIME)
	CM (.FILST,FILSTAT)
	CM (.RSTRT,RESTART)
	CM (.RLOAD,RELOAD)

LCMTB==.-CMNDTB

CMDPT0:	POINT 7,CMDBUF,-1	;COMMAND BUFFER INITIAL PTR

;FORK STATE DESCRIPTION MESSAGES

FSTAB:	Z [ASCIZ /RUNNING/]
	Z [ASCIZ /IO WAIT/]
	Z [ASCIZ /HALTED/]
	Z [ASCIZ /CRASHED/]
	Z [ASCIZ /FORK WAIT/]
	Z [ASCIZ /DISMS/]
NFSTAB==.-FSTAB

;TIMES TO RUN THE AUTOMATIC CHECKPOINTS, ENDED BY A -1

CHKTMT:	EXP ^D60*<^D1*^D60>		;0100
	EXP ^D60*<^D3*^D60>		;0300
	EXP ^D60*<^D5*^D60>		;0500
	EXP ^D60*<^D7*^D60>		;0700
	EXP ^D60*<^D9*^D60>		;0900
	EXP ^D60*<^D11*^D60>		;1100
	EXP ^D60*<^D13*^D60>		;1300
	EXP ^D60*<^D15*^D60>		;1500
	EXP ^D60*<^D17*^D60>		;1700
	EXP ^D60*<^D19*^D60>		;1900
	EXP ^D60*<^D21*^D60>		;2100
	EXP ^D60*<^D23*^D60>		;2300
	EXP -1				;END OF LIST
	EXP -1				;AND A COUPLE FOR PATCHING
	EXP -1

;STORAGE

PCL1:	BLOCK 1
PCL2:	BLOCK 1
PCL3:	BLOCK 1
CHNN:	BLOCK 3
NSEC:	BLOCK	1
GOSEC:	BLOCK 	1
GOTIME:	BLOCK	1
NOWTIM:	BLOCK	1
SEC:	BLOCK	1
NOWSEC:	BLOCK	1
TOD:	BLOCK 	1
DATE:	BLOCK	3
CMNDP:	BLOCK 1
PDL:	BLOCK NPDL
CMDBUF:	BLOCK 30
NAMBUF:	BLOCK 11
TERMCH:	BLOCK 1
INJFN:	BLOCK 1
DBUGSW:	BLOCK 1
JFNTAB:	BLOCK 10
FRKACS:	BLOCK 20		;FOR DEAD INFERIOR'S ACS
DIVISO:	BLOCK 1			;DIVISOR TO GET MILLISECONDS
CHKTIM:	BLOCK 1			;TIME FOR NEXT CHECKPOINT (GTAD STYLE)
CHKREC:	BLOCK 5			;THE RECORD FOR EFACT FOR CHKPNT
CHKDIR==CHKREC+1		;USER
CHKTOD==CHKREC+2		;TIME OF DAY
CHKRT==CHKREC+3			;RUNTIME
CHKCNS==CHKREC+4		;CONSOLE TIME

;ATTIME TABLES

TIMES:	BLOCK NAJOBS
AJCMD:	BLOCK NAJOBS*NAJCW	;STORED COMMAND STRINGS
AJCMP:	BLOCK 1
;JOB TABLES - DO NOT REORDER

FORKN:	BLOCK NJOBS		;FORK HANDLE
NAME:	BLOCK NJOBS		;SIXBIT NAME
IF2,<
PRINTX *****
PRINTX  RUN ONCE BEFORE SAVING TO SET UP ENTVEC  
PRINTX *****
>
INIT:	RESET
	HRROI	A,[ASCIZ/
Seting up up entry vector.
/]
	PSOUT
	MOVE	B,[EVECL,,EVEC]
	MOVEI	A,400000
	SEVEC
	HRROI	A,[ASCIZ/
Done.  Thank You .    
/]	
	PSOUT
	HALTF
	JRST	.-1
 

 	END INIT


