00100	BEGIN "PLOTX"
00200	COMMENT
00300	C 
00400	C 
00500	C   ****    *        ***    *****   *   *            ***     ***      *     
00600	C   *   *   *       *   *     *     *   *           *   *   *   *     *     
00700	C   *   *   *       *   *     *      * *            *       *   *     *     
00800	C   ****    *       *   *     *       *              ***    *****     *     
00900	C   *       *       *   *     *      * *                *   *   *     *     
01000	C   *       *       *   *     *     *   *           *   *   *   *     *     
01100	C   *       *****    ***      *     *   *            ***    *   *     *     
01200	C 
01300	C 
01400	
01500	********************************************************************************************************
01600	
01700	THIS PROGRAM READS '.PLX' FILES CREATED BY THE X-DISPLAY ROUTINES, AND WRITES
01800	APPROPRIATE INFORMATION FOR PLOTTER DEVICES.  THE PROBLEM IS TO CONVERT BETWEEN
01900	THE INPUT FILE (WHICH IS REALLY JUST A DISPLAY FILE FOR THE
02000	APPROPRIATE DISPLAY) AND SOME PLOTTER OUTPUT (WHICH WILL VARY FROM DEVICE
02100	TO DEVICE).
02200	
02300	NORMALLY, ALL '.PLX' FILES ON THE DISK ARE PLOTTED.  THE USER
02400	MAY SET STANDARD DEFAULTS WHICH OVERRIDE THOSE WITH WHICH THE
02500	.PLX FILES WERE WRITTEN.
02600	
02700	********************************************************************************************************
02800	;
02900	
03000	    DEFINE
03100		EP   = "EXTERNAL PROCEDURE",
03200		FP   = "FORTRAN PROCEDURE";
03300	
03400	    DEFINE
03500		CL  = "('15&'12)",
03600		DEBUG(X)  = "";
03700	COMMENT OFF-LINE CALCOMP ROUTINES:;
03800	
03900	    FP PLOT;
04000	    FP PLOTS;
04100	    FP SYMBOL;
04200	
04300	COMMENT ZETA PLOTTER ROUTINES:;
04400	    FP ZPLOT;
04500	    FP ZPLOTS;
04600	    FP ZSYMBOL;
04700	    FP ZPOFF;
04800	    EP ZETINI;
04900	    EP ZETREL;
     
00100	COMMENT PAGEMARK;
00200	COMMENT MISCELLANEOUS ROUTINES:;
00300	
00400	    EP ACCTINI;
00500	    EXTERNAL PROCEDURE USE( STRING XXX);
00600	    EXTERNAL STRING DEVNAM;
00700	    EXTERNAL INTEGER NUMTAPES;
00800	    EXTERNAL STRING PROCEDURE DATTIM;
00900	    EXTERNAL STRING NAMSTRING;
01000	    EXTERNAL INTEGER PROCEDURE LOGNAM( STRING LOGICAL);
01100	    EXTERNAL PROCEDURE MOUNT( STRING LOGICAL,REELID,WEN,VID);
01200	    EXTERNAL PROCEDURE DISMOUNT( STRING LOGICAL);
01300	    STRING ZTTY;
01400	    STRING NAM1,NAM2,DELETEFILES;
01500	    INTEGER INTENSIFY,DRIVENUM;
01600	    INTEGER ZSP;
01700	    INTERNAL INTEGER HRDWIR;
01800	    STRING S;
01900	    INTEGER BRK;
02000	    DEFINE MAXFILE="40",PLOTBUFLENGTH="1000";
02100	    REAL ARRAY XSCALE,YSCALE,XOFFSET,YOFFSET,PAPERS[1:MAXFILE];
02200	    INTEGER ARRAY DDD[1:1];
02300	    REAL ARRAY STEREO[1:MAXFILE];
02400	    INTEGER ARRAY PAPERT,PEN,PSIZ,COLOR,OVERLAY[1:MAXFILE];
02500	    STRING ARRAY FILNAM[1:MAXFILE];
02600	    INTERNAL INTEGER ARRAY PBUF[1:PLOTBUFLENGTH];
02700	    INTEGER ARRAY IBUF[1:400];
02800	    INTEGER ARRAY UFDBUF[0:3];
02900	    REAL OLDX,OLDY,FRAMEX,CURMES;
03000	    REAL MAXXUSED,ADDY,ANGLE;
03100	    INTEGER PLOTTER,DISPLAY,FILE,LEN,ADDRESS,PTR,FILEMAX,QUICK;
03200	    INTEGER MODE,BYTEC,BYTE,BB,BUFPTR,UFDEOF,IDSK,MAXPAPERSIZE;
03300	    INTEGER I,PLOTERROR,GLOBALERROR,OVERYES,PLOTRATE;
03400	    STRING ST,ASTR,COMSTR;
03500	    INTERNAL STRING ASTR1,ASTR2;
03600	    STRING ASTR3,ASTR4;
03700	    INTEGER SAMEPARMS;
03800	    INTEGER UFDCHN,USRCHN;
03900	    DEFINE UNK="4",REL(X)="0.0 XOR X";
     
00100	COMMENT PAGEMARK;
00200	    PROCEDURE ERROR( INTEGER I);
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN
00500		OUTSTR("PLOTTING PROGRAM ERROR NUMBER " & CVS(I) & "
00600	"       );
00700		CALL(I,"EXIT");
00800	    END;
     
00100	COMMENT PAGEMARK;
00200	COMMENT COMPUTER OUTPUT ON MICROFILM
00300		SC 4060 DEVICE. THE RECORDS ARE AS FOLLOWS:
00400	
00500	M X Y		MOVE TO X,Y
00600	D X Y		DRAW TO X,Y
00700	T X Y		DOT AT X,Y
00800	
00900	C X Y H D	CHARACTER AT X,Y - HEIGHT H - EBCDIC CODE D
01000	A D D		ADVANCE FRAME
01100	E D D		EXIT  -- ALL DONE
01200	
01300	THE COORDINATE SYSTEM RUNS FROM 0 TO 17000 (INTEGER).
01400	THE MAXIMUM X VALUE IS 17000 -- THE MAXIMUM Y 14000
01500	
01600	;
01700	
01800	    DEFINE COMFACTOR="(1000)";
01900	    INTEGER COMBYTE,COMCOUNT;
02000	    DEFINE COMRECLEN="21",COMBLKSIZ="1680";
02100	    PRELOAD!WITH 99,99,99,99,99,99,99,99,37,36,-6,-5,-4,-3,-2,-1,0,1,2,
02200		3,4,5,6,7,8,9,99,99,-8,-13,-7,99,99,10,11,12,13,14,15,16,17,18,
02300		19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,99,37;
02400	    INTEGER ARRAY ZETATAB[0:'177];
02500	    PRELOAD!WITH 0,0,0,0,0,0,0,0,
02600	COMMENT 0-'7;
02700	    0,0,0,0,0,0,0,0,
02800	COMMENT '10-'17;
02900	    0,0,0,0,0,0,0,0,
03000	COMMENT '20-'27;
03100	    0,0,0,0,0,0,0,0,
03200	COMMENT '30-'37;
03300	    64,0,127,0,91,108,0,125,77,93,92,78,107,96,75,97,240,241,242,243,
03400		244,245,246,247,248,249,122,94,76,126,110,111,0,193,194,195,196,
03500		197,198,199,200,201,209,210,211,212,213,214,215,216,217,226,227,
03600		228,229,230,231,232,233,0,0,0,0,0,0,
03700	COMMENT '133-'140;
03800	    129,130,131,132,133,134,135,136,137,145,146,147,148,149,150,151,152,
03900		153,162,163,164,165,166,167,168,169,0,0,0,109,0;
04000	    INTEGER ARRAY TRANTAB[0:'177];
04100	    PROCEDURE COMOUT( INTEGER C);
04200	"-------------------------------------------------------------------------------"
04300	    BEGIN
04400		IDPB(TRANTAB[C],COMBYTE);
04500		COMCOUNT_COMCOUNT+1;
04600	    END;
04700	    PROCEDURE COMINT( INTEGER C);
04800	"-------------------------------------------------------------------------------"
04900	    BEGIN
05000		INTEGER I;
05100		STRING S;
05200	
05300		S_"000000" & CVS(C);
05400		S_S[INF-4 TO INF];
05500		WHILE LENGTH(S) DO
05600		    COMOUT(LOP(S));
05700	    END;
05800	    PROCEDURE COMREC;
05900	"-------------------------------------------------------------------------------"
06000	    BEGIN
06100		WHILE COMCOUNT MOD COMRECLEN DO
06200		    COMOUT(" ");
06300		IF  COMCOUNT=COMBLKSIZ
06400		THEN
06500		BEGIN
06600		    ARRYOUT(10,PBUF[1],COMBLKSIZ%4);
06700		    COMCOUNT_0;
06800		    COMBYTE_POINT(8,PBUF[1],-1);
06900		END;
07000	    END;
     
00100	COMMENT PAGEMARK;
00200	COMMENT PLOTTING PROCEDURES;
00300	
00400	    PROCEDURE DRAWP( REAL A,B,C,D);
00500	"-------------------------------------------------------------------------------"
00600	    BEGIN
00700		A_A*XSCALE[FILE]+XOFFSET[FILE]+FRAMEX;
00800		C_C*XSCALE[FILE]+XOFFSET[FILE]+FRAMEX;
00900		B_B*YSCALE[FILE]+YOFFSET[FILE];
01000		D_D*YSCALE[FILE]+YOFFSET[FILE];
01100	"ALL IN INCHES"
01200		IF  (B>PAPERS[FILE] OR D>PAPERS[FILE]) AND NOT PLOTERROR
01300		THEN
01400		BEGIN
01500		    OUTSTR("DRAWP: PLOT WILL GO OFF PAPER" & CL);
01600		    PLOTERROR_TRUE;
01700		    RETURN;
01800		END;
01900		B_B+ADDY;
02000		D_D+ADDY;
02100		IF  A>MAXXUSED
02200		THEN MAXXUSED_A;
02300		IF  C>MAXXUSED
02400		THEN MAXXUSED_C;
02500		DEBUG(
02600		    "  OUTSTR(""DRAWP ""&CVF(A)&"" ""&CVF(B)&"" ""&CVF(C)&"" ""&CVF(D)&'15&'12);");
02700		CASE (PLOTTER-1) OF
02800		BEGIN
02900		    BEGIN "CALCOMP"
03000			IF  A NEQ OLDX OR B NEQ OLDY
03100			THEN PLOT(A,B,3);
03200	"MOVE WITH PEN UP"
03300			IF  DISPLAY>0
03400			THEN PLOT(C,D,2);
03500	"DRAW WITH PEN DOWN"
03600			IF  DISPLAY=0 AND INTENSIFY
03700			THEN PLOT(C,D,2);
03800	"MOVE THE BEAM ON THE DEC340 IF INTENSIFY=0"
03900		    END;
04000		    BEGIN "COM"
04100			IF  A NEQ OLDX OR B NEQ OLDY
04200			THEN
04300			BEGIN
04400			    COMOUT("M");
04500	"MOVE COMMAND"	    COMINT(A*COMFACTOR);
04600			    COMINT(B*COMFACTOR);
04700			    COMREC;
04800	"END OF RECORD"	END;
04900			COMOUT("D");
05000			COMINT(C*COMFACTOR);
05100			COMINT(D*COMFACTOR);
05200			COMREC;
05300		    END;
05400		    BEGIN "ZETA"
05500			IF  A NEQ OLDX OR B NEQ OLDY
05600			THEN ZPLOT(A,B,3);
05700	"MOVE WITH PEN UP"
05800			IF  DISPLAY>0
05900			THEN ZPLOT(C,D,2);
06000	"DRAW WITH PEN DOWN"
06100			IF  DISPLAY=0 AND INTENSIFY
06200			THEN ZPLOT(C,D,2);
06300	"MOVE BEAM ON DEC340 IF INTENSIFY=0"
06400		    END
06500		END;
06600		OLDX_C;
06700		OLDY_D;
06800	    END;
06900	    PROCEDURE DRAWSYM( REAL X,Y,HEIGHT; INTEGER CHAR; REAL ANGLE);
07000	"-------------------------------------------------------------------------------"
07100	    BEGIN
07200	COMMENT PLOT A SYMBOL;
07300	COMMENT SETFORMAT(4,0) OUTSTR(CVS(CHAR));
07400	
07500		OLDX_OLDY_-100000.0;
07600		X_X*XSCALE[FILE]+XOFFSET[FILE]+FRAMEX;
07700		Y_Y*YSCALE[FILE]+YOFFSET[FILE];
07800		HEIGHT_HEIGHT*YSCALE[FILE];
07900		IF  (Y+HEIGHT>PAPERS[FILE]) AND NOT PLOTERROR
08000		THEN
08100		BEGIN
08200		    OUTSTR("DRAWSYM: PLOT WILL GO OFF PAPER" & CL);
08300		    PLOTERROR_TRUE;
08400		    RETURN
08500		END;
08600		Y_Y+ADDY;
08700		IF  X+HEIGHT>MAXXUSED
08800		THEN MAXXUSED_X+HEIGHT;
08900		DEBUG(
09000		    "  OUTSTR(""DRAWSYM: ""&CVF(X)&"" ""&CVF(Y)&"" """"""&CHAR&""""""""&'15&'12);");
09100		CASE (PLOTTER-1) OF
09200		BEGIN
09300		    BEGIN "CALCOMP"
09400			SYMBOL(X,Y,HEIGHT,CHAR,ANGLE,0);
09500		    END;
09600		    BEGIN "COM"
09700			COMOUT("C");
09800			COMINT(X*COMFACTOR);
09900			COMINT(Y*COMFACTOR);
10000			COMINT(HEIGHT*COMFACTOR);
10100			COMOUT(CHAR);
10200			COMREC;
10300		    END;
10400		    BEGIN "ZETA"
10500			ZSYMBOL(X,Y,HEIGHT,DDD[1]_ZETATAB[( IF (CHAR-32)<0 OR (
10600							   CHAR-32)>'177
10700						       THEN '40
10800						       ELSE (CHAR-32)
10900			)],ANGLE,-1);
11000		    END
11100		END;
11200	    END;
     
00100	COMMENT PAGEMARK;
00200	    PROCEDURE PLOTTERINI;
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN
00500	
00600		LABEL P11,P12,P13,P14,P15,TRAP,TRAP1,TRAP2,SAVE,RESTART;
00700	
00800		INTEGER BBB;
00900	
00950	OUTSTR(CL&"DO YOU WANT TO DELETE PLOTTED FILES?  Y/N [NO] =");
00975	DELETEFILES_INCHWL;
01000		MAXXUSED_FRAMEX_ADDY_0;
01100		SETFORMAT(-1,4);
01200		CASE (PLOTTER-1) OF
01300		BEGIN
01400		    BEGIN "CALCOMP -- OFFLINE"
01500	
01600			EXTERNAL INTEGER CHAN;
01700	
01900			ACCTINI;
01901			MOUNT("PLOT","SCR",NULL,NULL);
02000			OUTSTR(CL & CL & "DISPOSITION OF PLOTTED OUTPUT:
02100	1. COMPUTER ROOM TABLE  2.BOX    (1 OR 2) [1]:");
02200			IF  NOT EQU(LOP(INCHWL),"2")
02300			THEN ASTR3_
02400				"DISPOSITION: RETURN PLOT TO COMPUTER ROOM TABLE"
02500			ELSE
02600			BEGIN "BOXNUMBER"
02700			    OUTSTR("BOX NUMBER:");
02800			    ASTR3_"DISPOSITION: BOX " & INCHWL;
02900			END;
03000			OUTSTR(CL & "
03100	DO YOU WANT TO SEND A SPECIAL MESSAGE TO THE CALCOMP OPERATOR?
03200		(Y OR N) [N]:" );
03300			IF  EQU("Y",LOP(INCHWL))
03400			THEN
03500			BEGIN "SHIRLEY"
03600			    OUTSTR(CL & "TYPE A ONE LINE MESSAGE:" & CL);
03700			    ASTR4_INCHWL;
03800			    ;
03900			END "SHIRLEY";
04000			OUTSTR(CL);
04100			PLOTS(PBUF[1],PLOTBUFLENGTH,CHAN);
04200			PLOT(0,-31.0,3);
04300	"MOVE PEN TO BOTTOM EDGE"
04400			ADDY_-30.8;
04500	"Y=0 IS SECRETLY AT -30.9"
04600		    END;
04700		    BEGIN "COM DEVICE"
04800	
04900			INTEGER BB;
05000	
05100	
05200	P11:
05300	
05400			OUTSTR(
05500			    "MOUNT A MAGNETIC TAPE. WHICH DRIVE (0,1 OR 2) =");
05600			IF  (DRIVENUM_CVD(S_INCHWL))<0 OR DRIVENUM>2
05700			THEN GOTO P11;
05800			OPEN(10,"MTA" & S,'17,0,0,200,BB,BBB);
05900			IF  BBB
06000			THEN
06100			BEGIN
06200			    OUTSTR("MTA" & S & " IS NOT AVAILABLE" & CL);
06300			    GOTO P11;
06400			END;
06500			ENTER(10,"GARP",BB);
06600			MTAPE(10,"W");
06700			MTAPE(10,"I");
06800	"SET IBM MODE"	COMCOUNT_0;
06900			COMBYTE_POINT(8,PBUF[1],-1);
07000		    END;
07100		    BEGIN "ZETA PLOTTER"
07200			IF  EQU((ZTTY_CVXSTR(CALL(0,"GETLIN"))),"TTY7  ") OR EQU
07300				(ZTTY,"TTY15 ") OR EQU(ZTTY,"TTY20 ") OR EQU(
07400				ZTTY,"TTY24 ") OR EQU(ZTTY,"TTY40 ") OR EQU(
07500				ZTTY,"TTY41 ") OR EQU(ZTTY,"TTY42 ") OR EQU(
07600				ZTTY,"TTY43 ") OR EQU(ZTTY,"TTY44 ") OR EQU(
07700				ZTTY,"TTY45 ") OR EQU(ZTTY,"TTY47 ")
07800			THEN
07900			BEGIN "HARDWIRE"
08000			    ZSP_30;
08100			    HRDWIR_TRUE;
08200			END "HARDWIRE"
08300			ELSE
08400			BEGIN "RATE"
08500			    OUTSTR("PLOTTING RATE  (10 OR 30 CPS) [10] =");
08600			    IF  PLOTRATE_CVD(INCHWL)=30
08700			    THEN ZSP_30
08800			    ELSE ZSP_10;
08900			    HRDWIR_FALSE;
09000			END "RATE";
09100	COMMENT INITIALIZE TTY BUFFERS IF HARDWIRE;
09200			IF  HRDWIR
09300			THEN ZETINI;
09400		    END
09500		END;
09600	    END;
     
00100	COMMENT PAGEMARK;
00200	    PROCEDURE PLOTTERCLOSE;
00300	"-------------------------------------------------------------------------------"
00400	    CASE (PLOTTER-1) OF
00500	    BEGIN
00600		BEGIN "CALCOMP"
00700	
00800		    STRING STR;
00900	
01000		    PLOT(MAXXUSED+5,ADDY,999);
01100	"WRITE BLOCK ADDRESS 999, REWIND TAPE"
01200		    DISMOUNT("PLOT");
01300		END;
01400		BEGIN "COM DEVICE"
01500		    COMOUT("E");
01600		    COMINT(0);
01700		    COMINT(0);
01800		    COMREC;
01900		    WHILE COMCOUNT DO
02000		    BEGIN
02100			COMOUT(" ");
02200			COMREC;
02300		    END;
02400		    CLOSE(10);
02500	"SEND MESSAGE RE THE TAPE'S DISPOSITION"
02600		    OUTSTR(
02700			"REMEMBER TO SEND A MESSAGE TO OPR TO TAKE THE TAPE TO THE PLOT ROOM!"
02800			& CL);
02900		    MTAPE(10,"W");
03000	"DO NOT RELEASE IT, OR WILL WRITE EOF"
03100		END;
03200		BEGIN "ZETA"
03300		    ZPLOT(15.0,0.0,-3);
03400		    ZPOFF;
03500		    IF  HRDWIR
03600		    THEN ZETREL;
03700		    OUTSTR(CL);
03800		END
03900	    END;
     
00100	COMMENT PAGEMARK;
00200	    PROCEDURE PLOTTERFIRST;
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN
00500		CASE (PLOTTER-1) OF
00600		BEGIN
00700		    BEGIN "CALCOMP -- OFFLINE"
00800	
00900			INTEGER I,MESSENT;
01000	
01100	
01200	
01300			PROCEDURE MESSAGE(  STRING S  );
01400	"-------------------------------------------------------------------------------"
01500			BEGIN
01600	
01700			    INTEGER I;
01800	
01900			    REAL YPLOT;
02000	
02100			    MESSENT_TRUE;
02200			    YPLOT_10+ADDY;
02300			    OUTSTR("MESSAGE: " & S & CL);
02400			    DEBUG("OUTSTR(""  AT ""&CVF(CURMES)&CL);")
02500			    WHILE LENGTH(S) DO
02600			    BEGIN
02700				I_LOP(S);
02800				SYMBOL(CURMES,YPLOT,0.15,I,-90.0,0);
02900				YPLOT_YPLOT-.15;
03000			    END;
03100			    CURMES_CURMES+.25;
03200			END;
03300	
03400			OLDX_OLDY_-100000;
03500			MESSENT_FALSE;
03600			OVERYES_(FILE>1 AND OVERLAY[FILE-1]);
03700			IF  NOT OVERYES
03800			THEN CURMES_MAXXUSED+1.5;
03900			IF  FILE=1
04000			THEN
04100			BEGIN
04200			    MESSAGE("PDP-10 TAPE - " & CVS(FILEMAX) & " FILE" &
04300				( IF  FILEMAX>1
04400				  THEN
04500	"S"			  ELSE
04600	""		    ) & " - USE SINGLE PLOT");
04700			    MESSAGE(NAMSTRING);
04800			    MESSAGE(ASTR1);
04900			    MESSAGE(ASTR2);
05000			    MESSAGE(ASTR3);
05100			    ASTR_DATTIM;
05200			    MESSAGE(ASTR);
05300			    MESSAGE(" ");
05400			    IF  LENGTH(ASTR4)>0
05500			    THEN MESSAGE(ASTR4);
05600			END;
05700			IF  FILE=1 OR PAPERT[FILE] NEQ PAPERT[FILE-1]
05800			THEN MESSAGE("USE " & CVS(MAXPAPERSIZE) & " INCH " & (
05900				CASE PAPERT[FILE]-1 OF ("REGULAR","VELLUM",
06000				"GRAPH")) & " PAPER");
06100			IF  PAPERT[FILE]=3 AND NOT OVERYES
06200			THEN MESSAGE("POSITION PEN AT ORIGIN OF GRAPH PAPER");
06300			IF  FILE=1 OR PEN[FILE] NEQ PEN[FILE-1] OR COLOR[FILE]
06400				NEQ COLOR[FILE-1]
06500			THEN
06600			BEGIN
06700			    MESSAGE("USE " & ( CASE COLOR[FILE]-1 OF ("BLACK",
06800				"RED","GREEN","BLUE","TURQUOISE","PURPLE",
06900				"YELLOW","ORANGE","BROWN","PINK")) & ( CASE PEN
07000				[FILE]-1 OF (" BALL POINT"," FELT TIP",
07100				" WET INK")) & " PEN" & ( IF PEN[FILE]=3
07200						       THEN
07300						       CASE PSIZ[FILE]-1 OF (
07400							   " SIZE=.4",
07500							   " SIZE=.5",
07600							   " SIZE=.6",
07700							   " SIZE=.8")
07800						       ELSE
07900	""		    ));
08000			END;
08100			IF  NOT MESSENT
08200			THEN MESSAGE("CONTINUE");
08300			MESSAGE("PLOTFILE: " & FILNAM[FILE]);
08400			IF  OVERYES
08500			THEN OUTSTR("REWINDING PLOTTER FOR OVERLAY" & CL)
08600			ELSE
08700			BEGIN
08800	
08900			    INTEGER I;
09000	
09100			    FRAMEX_CURMES+1.5;
09200			    FOR I_  FILE STEP 1 WHILE OVERLAY[I] DO
09300				FRAMEX_FRAMEX+.25;
09400			    CURMES_CURMES-FRAMEX;
09500			END;
09600			IF  OVERYES
09700			THEN PLOT(STEREO[FILE-1],ADDY,-3)
09800			ELSE PLOT(FRAMEX,ADDY,-3);
09900			FRAMEX_ADDY_0;
10000			PLOT(FRAMEX,ADDY-31.0,3);
10100			ADDY_ADDY-30.8;
10200			IF  NOT OVERYES
10300			THEN MAXXUSED_FRAMEX;
10400		    END;
10500		    BEGIN "COM DEVICE"
10600			IF  FILE NEQ 1 AND NOT OVERLAY[FILE-1]
10700			THEN
10800			BEGIN
10900			    COMOUT("A");
11000			    COMINT(0);
11100			    COMINT(0);
11200			    COMREC;
11300			END;
11400		    END;
11500		    BEGIN "ZETA PLOTTER"
11600			IF  FILE>1 AND OVERLAY[FILE-1]
11700			THEN ZPLOT(STEREO[FILE-1],-12.0,-3);
11800			IF  FILE>1 AND NOT OVERLAY[FILE-1]
11900			THEN ZPLOT(15.0,-12.0,-3);
12000			ZPOFF;
12100			ZPLOTS(ZSP);
12200			IF  FILE=1
12300			THEN ZPLOT(0.0,-12.0,-3);
12400			ADDY_FRAMEX_0;
12500			ZPLOT(0.0,0.1,-3);
12600		    END
12700		END;
12800	    END;
     
00100	COMMENT PAGEMARK;
00200	    PROCEDURE NEWBLOCK;
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN "NBB"
00500	COMMENT INITIALIZE A NEW 'BLOCK' OF DISPLAY FILE FROM
00600			THE INPUT. FIRST WORD IS OF THE FORM
00700	
00800		XWD -LENGTH,ADDRESS OF NEXT BLOCK(OR 0);
00900		;
01000		ADDRESS_PTR-2;
01100	"POINTER TO NEXT BLOCK"
01200		PTR_IBUF[1]_WORDIN(USRCHN);
01300	"GET THE WORD"
01400		LEN_-(PTR%'1000000);
01500		PTR_(PTR LAND '777777);
01600		IF  LEN=0
01700		THEN RETURN;
01800	"MUST BE END OF FILE"
01900		BYTEC_0;
02000	COMMENT		SETFORMAT(6,0) OUTSTR(CVS(LEN)&CL);
02100		ARRYIN(USRCHN,IBUF[2],LEN-1);
02200	"READ ENTIRE BLOCK OF STUFF"
02300		BUFPTR_1;
02400		LEN_LEN-1;
02500	"ACCOUNT FOR CORGET POINTERS"
02600		IF  ADDRESS NEQ -2
02700		THEN RETURN;
02800	"ONLY TAKE OFF HEADER ON FIRST BLOCK"
02900		BUFPTR_BUFPTR+( CASE DISPLAY OF (3,3,UNK,3,3,3));
03000	    END "NBB";
03100	    INTEGER PROCEDURE GETWORD;
03200	"-------------------------------------------------------------------------------"
03300	    BEGIN
03400		IF  LEN=BUFPTR
03500		THEN NEWBLOCK;
03600		RETURN(IBUF[BUFPTR_BUFPTR+1]);
03700	"GET THE WORD"
03800	    END;
03900	    INTEGER PROCEDURE GETBYTE;
04000	"-------------------------------------------------------------------------------"
04100	    BEGIN
04200		IF  BYTEC=0
04300		THEN
04400		BEGIN
04500		    BYTE_GETWORD;
04600		    BYTEC_1;
04700		    RETURN(BYTE LSH -18);
04800		END
04900		ELSE
05000		BEGIN
05100		    BYTEC_0;
05200		    RETURN(BYTE LAND '777777);
05300		END;
05400	    END;
     
00100	COMMENT PAGEMARK;
00200	COMMENT
00300	********************************************************************************************************
00400	
00500	ADAGE CODE.
00600	
00700	********************************************************************************************************
00800	
00900	
01000	THE FACTOR 'F' RELATES THE INTEGER COORDINATE SYSTEM OF THE
01100	DISPLAY FILE TO INCHES.
01200	
01300	THE ARRAY 'CHARS' DESCRIBES IMPORTANT THINGS ABOUT CHARACTER
01400	DRAWING.  THE FIRST INDEX OF THE ARRAY IS THE SCALE, AS
01500	RECORDED IN THE 'SCALE' OP-CODE OF AN X-ROUTINE DISPLAY FILE.
01600	THE SECOND INDEX IS:
01700	
01800		1= CHARACTER WIDTH (INCHES)
01900		2= CHARACTER HEIGHT
02000		3= BOX WIDTH
02100		4= BOX HEIGHT
02200		5= OFFSET IN X
02300		6= OFFSET IN Y
02400	
02500	
02600	;
02700	
02800	    PROCEDURE DADAGE( REAL F; REAL ARRAY CHARS);
02900	"-------------------------------------------------------------------------------"
03000	    BEGIN
03100	
03200		LABEL NEWPIC;
03300	
03400		REAL X,Y,NEWX,NEWY,HEIGHT;
03500	
03600		INTEGER SCALE,JUM;
03700	
03800		INTEGER IAW;
03900	
04000	
04100	
04200		INTEGER PROCEDURE AGETWORD;
04300	"-------------------------------------------------------------------------------"
04400		BEGIN "AGW"
04500		    IF  IAW GEQ 128
04600		    THEN
04700		    BEGIN
04800			ARRYIN(USRCHN,IBUF[1],128);
04900			IAW_0;
05000		    END;
05100		    RETURN(IBUF[IAW_IAW+1]);
05200		END "AGW";
05300	
05400		IAW_129;
05500		SCALE_0;
05600	
05700	NEWPIC:
05800	
05900		IF  PTR
06000		THEN ERROR(1);
06100		IF  IDSK
06200		THEN RETURN;
06300		WHILE TRUE DO
06400		BEGIN "LOOP"
06500		    BB_AGETWORD;
06600		    NEWX_((BB LSH -16) LAND '177777);
06700		    NEWY_(BB LAND '177777);
06800		    JUM_((BB ROT 3) LAND '7);
06900	COMMENT SETFORMAT(8,4)  OUTSTR(CVS(JUM)&CVF(NEWX)&CVF(NEWY)&CVF(F)&CL);
07000		    NEWX_NEWX*F;
07100		    NEWY_NEWY*F;
07200		    CASE JUM OF
07300		    BEGIN
07400			BEGIN "HALT"
07500			    IF  (((BB_AGETWORD) LSH -33) LAND '7)=0
07600			    THEN RETURN
07700			    ELSE PLOTTERFIRST;
07800			    GO NEWPIC;
07900			END;
08000			BEGIN "TEXT"
08100	
08200			    INTEGER I,J;
08300	
08400			    BB_BB ROT 4;
08500			    FOR I_  1 STEP 1 UNTIL 4 DO
08600			    BEGIN
08700				BB_BB ROT 8;
08800				IF  (J_BB LAND '177)='177
08900				THEN DONE ;
09000				DRAWSYM(X+CHARS[SCALE,5],Y+CHARS[SCALE,6],CHARS
09100				    [SCALE,2],J,0);
09200	COMMENT OUTSTR(J);
09300				X_X+CHARS[SCALE,3]+0.05;
09400			    END;
09500			END;
09600			BEGIN "DRAW"
09700			    DRAWP(X,Y,NEWX,NEWY);
09800			    X_NEWX;
09900			    Y_NEWY;
10000			END;
10100			BEGIN "MOVE"
10200			    X_NEWX;
10300			    Y_NEWY;
10400			END;
10500		    END;
10600	COMMENT OF CASE STATEMENT;
10700		END "LOOP";
10800	    END "DADAGE";
     
00100	COMMENT PAGEMARK;
00200	COMMENT
00300	********************************************************************************************************
00400	
00500	DIRECT VIEW STORAGE TUBE CODE.
00600	
00700	********************************************************************************************************
00800	
00900	
01000	THE FACTOR 'F' RELATES THE INTEGER COORDINATE SYSTEM OF THE
01100	DISPLAY FILE TO INCHES.
01200	
01300	THE ARRAY 'CHARS' DESCRIBES IMPORTANT THINGS ABOUT CHARACTER
01400	DRAWING.  THE FIRST INDEX OF THE ARRAY IS THE SCALE, AS
01500	RECORDED IN THE 'SCALE' OP-CODE OF AN X-ROUTINE DISPLAY FILE.
01600	THE SECOND INDEX IS:
01700	
01800		1= CHARACTER WIDTH (INCHES)
01900		2= CHARACTER HEIGHT
02000		3= BOX WIDTH
02100		4= BOX HEIGHT
02200		5= OFFSET IN X
02300		6= OFFSET IN Y
02400	
02500	
02600	;
02700	
02800	    PROCEDURE DODVS( REAL F; REAL ARRAY CHARS);
02900	"-------------------------------------------------------------------------------"
03000	    BEGIN
03100	
03200		LABEL NEWPIC;
03300	
03400		REAL X,Y,NEWX,NEWY,HEIGHT;
03500	
03600		INTEGER SCALE;
03700	
03800		SCALE_0;
03900	
04000	NEWPIC:
04100	
04200		IF  PTR
04300		THEN ERROR(1);
04400		IF  WORDIN(USRCHN)=0
04500		THEN RETURN;
04600	"END OF FILE"
04700		NEWBLOCK;
04800		WHILE TRUE DO
04900		BEGIN "LOOP"
05000		    BB_GETWORD;
05100		    CASE (BB LSH -32) LAND '17 OF
05200		    BEGIN
05300			BEGIN "HALT"
05400			    GO NEWPIC;
05500			END;
05600			BEGIN "MOVE"
05700			    NEWX_((BB LSH -18) LAND '37777)*F;
05800			    NEWY_(BB LAND '37777)*F;
05900			    X_NEWX;
06000			    Y_NEWY;
06100			END;
06200			BEGIN "DOT"
06300			    NEWX_((BB LSH -18) LAND '37777)*F;
06400			    NEWY_(BB LAND '37777)*F;
06500			    X_NEWX;
06600			    Y_NEWY;
06700			    DRAWP(X,Y,X,Y);
06800	"LINE OF LENGTH ZERO"
06900			END;
07000			BEGIN "DRAW"
07100			    NEWX_((BB LSH -18) LAND '37777)*F;
07200			    NEWY_(BB LAND '37777)*F;
07300			    DRAWP(X,Y,NEWX,NEWY);
07400			    X_NEWX;
07500			    Y_NEWY;
07600			END;
07700			BEGIN "TEXT"
07800	
07900			    INTEGER I,J;
08000	
08100			    BB_BB ROT 4;
08200			    FOR I_  1 STEP 1 UNTIL 4 DO
08300			    BEGIN
08400				BB_BB ROT 8;
08500				IF  (J_BB LAND '377)='377
08600				THEN DONE ;
08700				DRAWSYM(X+CHARS[SCALE,5],Y+CHARS[SCALE,6],CHARS
08800				    [SCALE,2],J,0);
08900				X_X+CHARS[SCALE,3];
09000			    END;
09100			END;
09200			BEGIN "SCALE"
09300			    SCALE_BB LAND '17;
09400			END;
09500			;
09600			;
09700		    END;
09800	COMMENT OF CASE STATEMENT;
09900		END "LOOP";
10000	    END "DODVS";
     
00100	COMMENT PAGEMARK;
00200	COMMENT
00300	********************************************************************************************************
00400	
00500	DEC 340 DISPLAY CODE
00600	
00700	********************************************************************************************************
00800	
00900	;
01000	
01100	    PROCEDURE DEC340;
01200	"-------------------------------------------------------------------------------"
01300	    BEGIN "DEC340 DISPLAY"
01400	
01500	
01600	
01700		PROCEDURE GETMODE;
01800	"-------------------------------------------------------------------------------"
01900		BEGIN
02000	COMMENT GET NEXT 340 MODE;
02100		    MODE_(BB LAND '160000) LSH -13;
02200		END;
02300	
02400	
02500	
02600		PROCEDURE SKIPTOESC;
02700	"-------------------------------------------------------------------------------"
02800		BEGIN
02900	COMMENT SKIP UNTIL AN ESCAPE;
03000		    WHILE NOT BB LAND '400000 DO
03100			BB_GETBYTE;
03200		    MODE_0;
03300		END;
03400	
03500		INTEGER SCALE,INTENSITY,PAIR;
03600	COMMENT KLUGE *****;
03700	
03800		INTEGER HIBIT;
03900	
04000		LABEL NEWPIC,INTERP;
04100	
04200		REAL X,Y,SCALEP;
04300	
04400		PAIR_FALSE;
04500	
04600	NEWPIC:
04700	
04800		IF  PTR
04900		THEN ERROR(1);
05000		IF  WORDIN(USRCHN)=0
05100		THEN RETURN;
05200	"THROW OUT THE -1,,ADDRESS"
05300	" IF ZERO, MEANS END OF FILE"
05400		NEWBLOCK;
05500	"GET THE START OF A NEW BLOCK"
05600	COMMENT KLUGE ***** SET HIBIT TO 400000 IF DJPIADDR IN THIRD
05700	WORD OF FIRST BLOCK HAS 400000 BIT SET . . . THIS MEANS THAT
05800	THE DISPLAY FILE WAS CREATED WITH HISEG OMNI AND THAT A
05900	SEGMENT DISPLACEMENT OF 400000 MUST BE ADDED TO ADDRESS OF
06000	DISPLAY JUMP INSTRUCTION;
06100		HIBIT_ IF  (IBUF[3] LAND '400000)=0
06200		       THEN 0
06300		       ELSE '400000;
06400		MODE_INTENSITY_SCALE_0;
06500		SCALEP_1;
06600		WHILE TRUE DO
06700		BEGIN "INSTRUCTION LOOP"
06800		    BB_GETBYTE;
06900	
07000	INTERP:
07100	
07200		    CASE MODE OF
07300		    BEGIN
07400			BEGIN "PARAMETER"
07500			    IF  BB LAND '10
07600			    THEN INTENSITY_BB LAND '7;
07700			    IF  BB LAND '100
07800			    THEN
07900			    BEGIN
08000				SCALE_(BB LAND '60) LSH -4;
08100				SCALEP_2.0^SCALE;
08200			    END;
08300			    GETMODE;
08400			END;
08500			BEGIN "POINT MODE"
08600			    IF  BB LAND '200000
08700			    THEN Y_(BB LAND '1777)/102.3
08800			    ELSE X_(BB LAND '1777)/102.3;
08900			    IF  PAIR
09000			    THEN
09100			    BEGIN
09200				IF  (BB LAND '2000)=0
09300				THEN INTENSIFY_FALSE;
09400				DRAWP(X,Y,X,Y);
09500				INTENSIFY_TRUE;
09600				PAIR_FALSE;
09700			    END
09800			    ELSE PAIR_TRUE;
09900			    GETMODE;
10000			END;
10100			BEGIN "RASTER"
10200			    OUTSTR("RASTER MODE CANNOT BE PLOTTED
10300	"                   );
10400			    SKIPTOESC;
10500			END;
10600			BEGIN "CHARACTER"
10700	
10800			    INTEGER J,QQ,CHAR;
10900	
11000			    QQ_POINT(6,BB,17);
11100			    FOR J_  1 STEP 1 UNTIL 3 DO
11200			    BEGIN
11300				CHAR_ILDB(QQ);
11400				IF  CHAR='37
11500				THEN
11600				BEGIN
11700				    MODE_0;
11800				    DONE
11900				END;
12000				IF  CHAR='36
12100				THEN ANGLE_90.0
12200				ELSE IF CHAR='35
12300				    THEN ANGLE_0.0
12400				    ELSE
12500				    BEGIN "DRAWSYM"
12600					IF  CHAR<'40
12700					THEN CHAR_CHAR+'100;
12800					IF  PLOTTER=1
12900					THEN DRAWSYM(X,Y, CASE SCALE OF (.068,
13000						.127,.244,.479),CHAR,ANGLE);
13100					IF  PLOTTER=3
13200					THEN DRAWSYM(X+0.5*( CASE SCALE OF (5/
13300						102.3,9/102.3,17/102.3,33/102.3)),
13400						Y+0.5*( CASE SCALE OF (7/102.3,
13500						13/102.3,25/102.3,49/102.3)),
13600						CASE SCALE OF (.068,.127,.244,
13700						.479),CHAR,ANGLE);
13800					IF  ANGLE=90.0
13900					THEN Y_Y+( CASE SCALE OF (.0586,.117,
14000						.235,.469))
14100					ELSE X_X+( CASE SCALE OF (.0586,.117,
14200						.235,.469));
14300				    END "DRAWSYM";
14400			    END;
14500			END "CHARACTER";
14600			BEGIN "VECTOR"
14700	
14800			    REAL DELX,DELY;
14900	
15000			    DELX_(BB LAND '177)/102.3;
15100			    DELY_((BB LAND '77400) LSH -8)/102.3;
15200			    DELX_( IF  BB LAND '200
15300				   THEN -1.0 ELSE 1.0)*SCALEP*DELX;
15400			    DELY_( IF  BB LAND '100000
15500				   THEN -1.0 ELSE 1.0)*SCALEP*DELY;
15600			    IF  BB LAND '200000
15700			    THEN DRAWP(X,Y,(X+DELX),(Y+DELY));
15800			    X_X+DELX;
15900			    Y_Y+DELY;
16000			    IF  BB LAND '400000
16100			    THEN MODE_0;
16200			END;
16300			BEGIN "VECTOR CONTINUE"
16400			    OUTSTR("VECTOR CONTINUE MODE NOT IMPLEMENTED
16500	
16600	
16700	
16800	
16900	
17000	"                   );
17100			    MODE_0;
17200	"ALWAYS ESCAPE"	END;
17300			BEGIN "INCREMENT MODE"
17400			    OUTSTR("INCREMENT MODE NOT IMPLEMENTED
17500	"                   );
17600			    SKIPTOESC;
17700			END;
17800			BEGIN "SUBROUTINE MODE"
17900	
18000			    INTEGER QQ;
18100	
18200			    QQ_(BB LAND '600000) LSH -16;
18300			    GETMODE;
18400			    IF  QQ=0
18500			    THEN
18600			    BEGIN "JUMP"
18700	COMMENT KLUGE			QQ_GETBYTE+'400000;
18800	COMMENT KLUGE *****;
18900	
19000				QQ_GETBYTE+HIBIT;
19100				DO  BB_GETBYTE UNTIL ADDRESS+BUFPTR=QQ;
19200				GO INTERP;
19300			    END
19400			    ELSE IF QQ=1
19500				THEN
19600				BEGIN "SUBR RETURN"
19700				    GO TO NEWPIC;
19800	"DONE WITH THIS PICTURE"
19900				END
20000				ELSE ERROR(2);
20100			END "SUBROUTINE MODE"
20200		    END;
20300		END "INSTRUCTION LOOP";
20400	    END "DEC340 DISPLAY";
     
00100	COMMENT PAGEMARK;
00200	COMMENT
00300	********************************************************************************************************
00400	
00500		    P L O T    A    F I L E   --   C A L L   C O R R E C T    D I S P L A Y    H A N D L E R
00600	
00700	********************************************************************************************************
00800	;
00900	
01000	    PROCEDURE DOIT;
01100	"-------------------------------------------------------------------------------"
01200	    BEGIN
01300	COMMENT HERE IS WHERE WE COME TO REALLY DO A PLOT.
01400		'DISPLAY' CONTAINS THE NUMBER OF THE DISPLAY WE
01500		ARE USING, 'PLOTTER' THE NUMBER OF THE PLOTTER.
01600	;
01700		CLOSE(USRCHN);
01800	"IF SOMEONE ELSE HAS USED IT"
01900		LOOKUP(USRCHN,FILNAM[FILE],PTR);
02000		IF  PLOTTER NEQ 3
02100		THEN OUTSTR("PLOTTING " & FILNAM[FILE] & CL);
02200		ARRYIN(USRCHN,IBUF[1],128);
02300		DISPLAY_WORDIN(USRCHN);
02400		PTR_0;
02500	"INITIALIZATION"
02600		CASE DISPLAY OF
02700		BEGIN
02800		    BEGIN "DEC340"
02900			DEC340;
03000		    END;
03100		    BEGIN "COMPUTEK"
03200	
03300			PRELOAD!WITH
03400	
03500	 .0645,.0968,.0968,.16,0,0;
03600	
03700			OWN REAL ARRAY COM[0:0,1:6];
03800	
03900			DODVS(6.4/780,COM)
04000		    END "COMPUTEK";
04100		    BEGIN "ADAGE"
04200	
04300			PRELOAD!WITH
04400	
04500	 .0820,.1149,.1148,.1559,0,0;
04600	
04700			OWN REAL ARRAY ADA1[0:0,1:6];
04800	
04900			DODVS(10/14000,ADA1);
05000		    END "ADAGE";
05100		    BEGIN "ARDS"
05200	
05300			PRELOAD!WITH
05400	
05500	 .067,.086,.08,.165,0,-.076;
05600	
05700			OWN REAL ARRAY ARD[0:0,1:6];
05800	
05900			DODVS(4.125/707,ARD);
06000		    END "ARDS";
06100		    BEGIN "TEKTRONIX 4010"
06200	COMMENT
06300	THE FOLLOWING NUMBERS ARE RESPECTIVELY:
06400	CHARACTER WIDTH=.0794 INCHES
06500	CHARACTER HEIGHT=.108 INCHES
06600	BOX WIDTH=.1 INCHES BASED ON T4010 CHARACTER GENERATOR SEPARATION
06700	
06800	BOX HEIGTH=.16 INCHES BY DEFINITION
06900	HALF CHARACTER WIDTH OFFSET FOR ZETA PLOTTER=.0625
07000	HALF CHARACTER HEIGTH OFFSET FOR ZETA PLOTTER
07100	
07200	
07300	;
07400	
07500			PRELOAD!WITH
07600	
07700	 ((12-1)/780)*(14.3/2.54),
07800	((16-1)/780)*(14.3/2.54),0.1,0.16,
07900	.0625,.0625;
08000	
08100			OWN REAL ARRAY TEK1[0:0,1:6];
08200	
08300			PRELOAD!WITH
08400	
08500	 ((12-1)/780)*(14.3/2.54),
08600	((16-1)/780)*(14.3/2.54),0.1,0.16,0,0;
08700	
08800			OWN REAL ARRAY TEK2[0:0,1:6];
08900	
09000			IF  PLOTTER=3
09100			THEN DODVS((14.3/2.54)/780,TEK1)
09200			ELSE DODVS((14.3/2.54)/780,TEK2);
09300		    END "TEKTRONIX 4010";
09400		    BEGIN "GT40"
09500	
09600			PRELOAD!WITH
09700	
09800	 .108,.14175,.12825,.1829,.054,.11500;
09900	
10000			OWN REAL ARRAY GT4[0:0,1:6];
10100	
10200			DODVS(6.75/768,GT4);
10300		    END "GT40";
10400		    BEGIN "DUMMY 6"
10500		    END;
10600		    BEGIN "DUMMY 7"
10700		    END;
10800		    BEGIN "DUMMY 8"
10900		    END;
11000		    BEGIN "RICHARD"
11100	
11200			PRELOAD!WITH
11300	
11400	 .0820,.1149,.1148,.1559,0,0;
11500	
11600			OWN REAL ARRAY ADA2[0:0,1:6];
11700	
11800			DADAGE(4.5/16384,ADA2);
11900		    END "RICHARD";
12000		END;
12100	    END;
     
00100	COMMENT PAGEMARK;
00200	    STRING PROCEDURE FANCY( REAL R);
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN
00500	
00600		STRING S;
00700	
00800		INTEGER I;
00900	
01000		S_CVF(R);
01100	"GET A STRING"
01200		I_R;
01300		IF  I=R
01400		THEN S_CVS(I);
01500	"USE INTEGER IF POSSIBLE"
01600		WHILE S=" " DO
01700		    I_LOP(S);
01800	"REMOVE SPACES"
01900		RETURN(S);
02000	    END;
     
00100	COMMENT PAGEMARK;
00200	    INTEGER PROCEDURE INI( INTEGER I);
00300	"-------------------------------------------------------------------------------"
00400	    BEGIN
00500	
00600		INTEGER J;
00700	
00800		STRING S;
00900	
01000		CLOSE(USRCHN);
01100	"NO ONE ELSE USING IT"
01200		LOOKUP(USRCHN,S_CVXSTR(I) & ".PLX",I);
01300		IF  I
01400		THEN
01500		BEGIN "TRY SOME OTHER THINGS"
01600		    CLOSE(USRCHN);
01700		    LOOKUP(USRCHN,S_CVXSTR(I LOR '202020202020) & ".PLX",I);
01800		    IF  I
01900		    THEN RETURN(-1);
02000		END;
02100		FILE_FILE+1;
02200	"WE HAVE A NEW CANDIDATE"
02300		FILNAM[FILE]_S;
02400		ARRYIN(USRCHN,IBUF[1],128);
02500	"READ FIRST 128 WORDS"
02600		SETFORMAT(8,3);
02700	"NOW FILL IN DEFAULT VALUES"
02800		XSCALE[FILE]_YSCALE[FILE]_1.0;
02900		STEREO[FILE]_0;
03000	"SCALE FACTORS"
03100		XOFFSET[FILE]_YOFFSET[FILE]_0;
03200	"OFFSETS"
03300		PAPERS[FILE]_11;
03400	"11 INCH PAPER"
03500		PAPERT[FILE]_1;
03600	"REGULAR TYPE"
03700		PEN[FILE]_2;
03800	"FELT TIP"
03900		PSIZ[FILE]_2;
04000	"WET PEN SIZE"
04100		COLOR[FILE]_1;
04200	"BLACK"	OVERLAY[FILE]_0;
04300	"NO OVERLAY"
04400		IF  REL(IBUF[1])=314159
04500		THEN
04600		BEGIN "FILL IN SUPPLIED VALUES"
04700		    IF  IBUF[2]
04800		    THEN XSCALE[FILE]_REL(IBUF[2]);
04900		    IF  IBUF[3]
05000		    THEN YSCALE[FILE]_REL(IBUF[3]);
05100		    XOFFSET[FILE]_REL(IBUF[4]);
05200		    YOFFSET[FILE]_REL(IBUF[5]);
05300		    IF  IBUF[6]
05400		    THEN PAPERT[FILE]_REL(IBUF[6]);
05500		    IF  IBUF[7]
05600		    THEN PAPERS[FILE]_REL(IBUF[7]);
05700		    IF  IBUF[8]
05800		    THEN PEN[FILE]_REL(IBUF[8]);
05900		    IF  IBUF[9]
06000		    THEN COLOR[FILE]_REL(IBUF[9]);
06100		    OVERLAY[FILE]_REL(IBUF[10]);
06200		END "FILL IN SUPPLIED VALUES";
06300		IF  NOT QUICK
06400		THEN
06500		BEGIN "DIALOG"
06600	
06700		    LABEL ASKAGIN;
06800	
06900		    IF  SAMEPARMS
07000		    THEN
07100		    BEGIN "REPEAT PARMS"
07200			XSCALE[FILE]_XSCALE[FILE-1];
07300			YSCALE[FILE]_YSCALE[FILE-1];
07400			XOFFSET[FILE]_XOFFSET[FILE-1];
07500			YOFFSET[FILE]_YOFFSET[FILE-1];
07600			PAPERS[FILE]_PAPERS[FILE-1];
07700			PAPERT[FILE]_PAPERT[FILE-1];
07800			STEREO[FILE]_STEREO[FILE-1];
07900			PEN[FILE]_PEN[FILE-1];
08000			COLOR[FILE]_COLOR[FILE-1];
08100		    END "REPEAT PARMS"
08200		    ELSE
08300		    BEGIN "CHANGE PARMS"
08400	
08500	ASKAGIN:
08600	
08700			OUTSTR("CHANGE PLOTX- OR FILE-SPECIFIED DEFAULTS FOR " &
08800			    S & "   Y/N [N] =");
08900			IF  INCHWL="Y"
09000			THEN
09100			BEGIN "DEFAULTS"
09200	
09300			    INTEGER I;
09400	
09500			    OUTSTR("  OMIT PLOTTING THIS FILE   Y/N [NO] =");
09600			    IF  LOP(INCHWL)="Y"
09700			    THEN
09800			    BEGIN
09900				FILE_FILE-1;
10000				RETURN(0)
10100			    END;
10200			    DEFINE DEF(A,B,C)="
10300	BEGIN
10400				OUTSTR((""  ""&""A""&"" ["")&FANCY(B[FILE])&""] ="");
10500				ST_INCHWL; IF ST=""^"" THEN GO ASKAGIN;
10600				IF LENGTH(ST) THEN B[FILE]_REALSCAN(ST,I);
10700	END;"               ;
10800			    DEF(X SCALE FACTOR,XSCALE,1.0);
10900			    DEF(Y SCALE FACTOR,YSCALE,1.0);
11000			    DEF("X OFFSET (INCHES)",XOFFSET,0);
11100			    DEF("Y OFFSET (INCHES)",YOFFSET,0);
11200			    IF  PLOTTER=1
11300			    THEN
11400			    BEGIN "CALCOMP ONLY"
11500				IF  FILE>1 AND OVERLAY[FILE-1]
11600				THEN
11700				BEGIN
11800				    PAPERS[FILE]_PAPERS[FILE-1];
11900				    PAPERT[FILE]_PAPERT[FILE-1];
12000				    XSCALE[FILE]_XSCALE[FILE-1];
12100				    YSCALE[FILE]_YSCALE[FILE-1];
12200				    STEREO[FILE]_STEREO[FILE-1];
12300				END
12400				ELSE
12500				BEGIN
12600				    DEF("PAPER SIZE   (11 OR 30 INCHES) ",
12700					PAPERS,11);
12800				    IF  PAPERS[FILE]=30
12900				    THEN
13000				    BEGIN
13100					OUTSTR(
13200					    "  CHANGE SCALE SO THAT AN 11 INCH PLOT
13300	  COMES OUT AS A 30 INCH PLOT    Y/N [NO] =");
13400					IF  LOP(INCHWL)="Y"
13500					THEN
13600					BEGIN
13700					    XSCALE[FILE]_(XSCALE[FILE]*30)/11;
13800					    YSCALE[FILE]_(YSCALE[FILE]*30)/11;
13900					END;
14000				    END;
14100				    DEF(
14200					"PAPER TYPE (1=REGULAR, 2=VELLUM, 3=GRAPH)",
14300					PAPERT,1)
14400				END;
14500				DEF(
14600				    "PEN TYPE (1=BALLPOINT, 2=FELTTIP, 3=WET INK)",
14700				    PEN,2);
14800				IF  PEN[FILE]=3
14900				THEN DEF("PEN SIZE (1=.4, 2=.5, 3=.6, 4=.8)",
15000					PSIZ,2);
15100				DEF(
15200				    "COLOR (1=BLACK, 2=RED, 3=GREEN, 4=BLUE, 5=TURQUOISE
15300		 6=PURPLE, 7=YELLOW, 8=ORANGE, 9=BROWN, 10=PINK)",COLOR,1)
15400			    END "CALCOMP ONLY";
15500			    OUTSTR("  OVERLAY NEXT PLOT   Y/N [NO] =");
15600			    IF  (OVERLAY[FILE]_INCHWL="Y")
15700			    THEN
15800			    BEGIN
15900				OUTSTR("  STEREO SEPARATION DISTANCE   [0] =");
16000				STEREO[FILE]_REALSCAN(S_INCHWL,BRK);
16100			    END;
16200			    IF  LENGTH(COMSTR)>0
16300			    THEN
16400			    BEGIN
16500				OUTSTR(
16600				    "APPLY THESE PARAMETERS TO ALL SUBSEQUENT FILES  Y/N [N] =");
16700				IF  LOP(INCHWL)="Y"
16800				THEN SAMEPARMS_1;
16900			    END;
17000			END "DEFAULTS";
17100		    END "CHANGE PARMS";
17200		END "DIALOG";
17300		IF  PAPERS[FILE]>MAXPAPERSIZE
17400		THEN MAXPAPERSIZE_PAPERS[FILE];
17500		RETURN(1);
17600	    END;
     
00100	COMMENT PAGEMARK;
00200	COMMENT MAIN EXECUTION;
00300	
00400	    USE(NULL);
00500	    INTENSIFY_TRUE;
00600	    OUTSTR("AUTOMATIC OR MANUAL OPERATION" & CL);
00700	    OUTSTR(
00800		"    A=PLOT WITH DEFAULT OPTIONS  ALL PLX FILES IN YOUR AREA" &
00900		CL);
01000	    OUTSTR("    M=PLOT SPECIFIED PLX FILES ONLY    (A OR M) [M] =");
01100	    QUICK_INCHWL="A";
01200	    OUTSTR("PLOTTER TYPE   (1=CALCOMP, 2=COM, 3=ZETA) [1] =");
01300	    PLOTTER_CVD(INCHWL);
01400	    IF  PLOTTER=0
01500	    THEN PLOTTER_1;
01600	    OPEN(USRCHN_GETCHAN,"DSK",'13,2,0,200,IDSK,IDSK);
01700	    OPEN(UFDCHN_GETCHAN,"DSK",'13,1,0,200,IDSK,UFDEOF);
01800	    UFDBUF[0]_CALL(1,"GETPPN");
01900	    UFDBUF[1]_'654644000000;
02000	"UFD"
02100	    UFDBUF[3]_'1000001;
02200	"1,,1"
02300	    START!CODE
02400		MOVE 1,UFDBUF;
02500		'76101000000;
02600		SETOM UFDEOF;
02700	    END;
02800	    GLOBALERROR_MAXPAPERSIZE_FILE_0;
02900	    IF  NOT QUICK
03000	    THEN
03100	    BEGIN
03200		OUTSTR("GIVE PLX FILES, IN ORDER   [ALL,IN DIRECTORY ORDER] = ");
03300		COMSTR_INCHWL;
03400	    END;
03500	    IF  QUICK OR LENGTH(COMSTR)=0 OR EQU(COMSTR,"ALL")
03600	    THEN
03700	    BEGIN
03800		WHILE NOT UFDEOF AND FILE NEQ MAXFILE DO
03900		BEGIN
04000		    ARRYIN(UFDCHN,UFDBUF[0],2);
04100		    IF  (UFDBUF[1] LAND '777777000000)='605470000000
04200		    THEN INI(UFDBUF[0]);
04300	"INITIALIZE THAT FILE"
04400		END;
04500	    END
04600	    ELSE
04700	    BEGIN "DO USER'S FILES AS PER COMMAND"
04800		WHILE FILE NEQ MAXFILE AND LENGTH(COMSTR) DO
04900		BEGIN
05000	
05100		    STRING S;
05200	
05300		    S_NULL;
05400		    WHILE LENGTH(COMSTR) AND COMSTR=" " DO
05500			COMSTR_COMSTR[2 TO INF];
05600		    WHILE LENGTH(COMSTR) AND COMSTR NEQ "," AND COMSTR NEQ " "
05700			DO
05800			S_S & LOP(COMSTR);
05900		    IF  INI(CVSIX(S))=-1
06000		    THEN
06100		    BEGIN
06200			WHILE LENGTH(S)<6 DO
06300			    S_"0" & S;
06400			INI(CVSIX(S));
06500		    END;
06600		    IF  COMSTR=","
06700		    THEN COMSTR_COMSTR[2 TO INF]
06800		    ELSE
06900			WHILE LENGTH(COMSTR) AND (COMSTR="," OR COMSTR=" ") DO
07000			    COMSTR_COMSTR[2 TO INF];
07100		END;
07200	    END;
07300	    RELEASE(UFDCHN);
07400	    IF  FILEMAX_FILE
07500	    THEN
07600	    BEGIN "PLOT IT"
07700		PLOTTERINI;
07800		FOR FILE_1 STEP 1 UNTIL FILEMAX DO
07900		BEGIN
08000		    PLOTTERFIRST;
08100		    PLOTERROR_FALSE;
08200		    DOIT;
08300		    IF  PLOTERROR
08400		    THEN GLOBALERROR_TRUE;
08500		END;
08600		PLOTTERCLOSE;
08900	IF DELETEFILES="Y"
09000		THEN FOR FILE_1 STEP 1 UNTIL FILEMAX DO
09100		    BEGIN
09200			CLOSE(USRCHN);
09300			LOOKUP(USRCHN,FILNAM[FILE],PTR);
09400			IF  NOT PTR
09500			THEN RENAME(USRCHN,NULL,0,IDSK);
09600		    END;
09700		RELEASE(USRCHN);
09800	    END "PLOT IT"
09900	    ELSE OUTSTR("NO FILES TO PLOT
10000	"       );
10100	    CALL(1,"EXIT");
10200	END
