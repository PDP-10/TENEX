;<SOURCES>MHALT.MAC;1    25-JUN-75 03:51:11    EDIT BY HEDBERG

	TITLE	MHALT
	SUBTTL	MAKES UP THE HALT FILE
	SEARCH	STENEX

DEFINE	TABLE	<
..TB==.
	0
>	

DEFINE	TEND	<
..TE==.
	LOC	..TB
	.-..TE+1
	LOC	..TE
PURGE ..TE,..TB
>
	
DEFINE	T (N,AME,ADDR)	<
IFNB <ADDR>, <..A==ADDR>
IFB  <ADDR>, <..A==.'N'AME>
	XWD [XWD [ASCIZ \AME\],..A],"'N'"
>

DEFINE	CHOICE	(TAB,FAIL<CMDIN4>,REP<CMDIN4>)	<
	MOVEI	16,TAB
	MOVEI	15,FAIL
	MOVEI	14,REP
	CALL	$CHOI
>

DEFINE	TYPE	(MESS)	<
	HRROI	1,[ASCIZ MESS]
	PSOUT
>
		;ACS
P=17
; 16 & 15 & 14 ARE USED BY "CHOICE"
HALTN==12			;THE INDEX OF THE HALT WERE ON
KWV==13
$DOWN==0
$UP==1				;INDECES FROM HALTN
$FLAGS==2

OPDEF	CALL	[PUSHJ	P,0]
OPDEF	RET	[POPJ	P,0]

	LOC	140

START:	MOVE	P,[IOWD STACK,40]
	RESET

	MOVEI	1,400000
	SETOB	2,3		;MUST BE ENABLED TO DO THIS KIND OF STUFF
	EPCAP

	MOVE	2,[[LEV1PC	;SET UP INTERRUPTS FOR ^Q & ^C & ^O
		    LEV2PC
		    LEV3PC],,[CHNTAB: 2,,CTRLC
				      3,,CTRLQ
				      REPEAT ^D33, <0>  ]]
	SIR
	MOVSI	1,3		;^C TO CHANNEL 0
	ATI
	MOVE	1,[ ^D17,,1 ]	;^Q TO CHANNEL 1
	ATI
	MOVEI	1,400000
	MOVSI	2,600000
	AIC
	EIR

	MOVSI	1,1
	HRROI	2,[ASCIZ \<SYSTEM>DOWNTIME.\]
	GTJFN			;GET THE JFN OF THE DOWNTIME FILE
	 CALL	JERR
	MOVE	2,[7B5!3B20]	;READ/WRITE
	OPENF			;AND OPEN IT
	 CALL	JERR
	HRLZ	1,1
	HRLI	2,400000
	HRRI	2,FILE/1000
	MOVSI	3,(3B3)		;READ/WRITE
	PMAP			;MAP IN THE FIRST PAGE
	MOVE	1,[SFILE,,SPAGE]
	BLT	1,EPAGE		;AND MOVE IT TO THE EDIT SPACE
	MOVEI	3,0		;COUNT THE NUMBER OF HALTS ON THE FILE
	SKIPE	PAGE(3)
	AOJA	3,.-1
	IDIVI	3,3
	MOVEM	3,NHLTS

	GTAD
	MOVEM	1,NOW

	TYPE	<
MAKE HALTS>					;WEIRD HEADER

CMDIN4:	MOVE	P,[IOWD 40,STACK] ;RESET STACK EVERY TIME
	SETZM	TDOWN
	SETZM	TUP
	SETZM	TFLAGS
	CALL	CRIF
	MOVEI	1,"-"		;AND ALWAYS WRITE A PROMPT
	PBOUT
CMDN7:	PBIN			;GET THE COMMAND LETTER
	CAIN	1,37
	JRST	CMDIN4
	CALL	CAPS
	CHOICE	(COMS)		;LOOK IT UP IN THE TABLE
	CALL	(KWV)		;AND GO THERE
	JRST	CMDIN4

COMS:	TABLE
	T (D,elete)
	T (E,xit)
	T (H,alt)
	T (L,ist)
	T (Q,uit)
	TEND

.DELET:	CALL	GHNUM		;GET THE HALT NUMBER
	SKIPN	FLAGS(2)	;SKIP IF IT AINT THERE
	JRST	[TYPE	< That halt doesn't exist>
		 JRST	CMDIN4	]
	SETZM	PAGE+0(2)
	SETZM	PAGE+1(2)
	SETZM	PAGE+2(2)
	SOS	NHLTS
	JRST	CMDIN4

.EXIT:	TYPE	<and update old file [CONFIRM] >
	CALL	WFCR		;WAIT FOR CONFIRMATION
	GTAD
	MOVEM	1,NOW
	MOVE	6,NHLTS
	SETZB	4,5
	JUMPE	6,FL2		;NO HALTS, JUST ZAP THE FILE
FLOOP:	CAIL	4,1000
	JRST	FL2
	MOVE	1,DOWN(4)	;GET THE FLAGS
	MOVE	2,UP(4)		;THEN THE DOWNTIME
	MOVE	3,FLAGS(4)	;AND THEN THE UPTIME
	JUMPE	1,[ADDI	4,3	;ZERO DOWNTIME MEANS THE HALT AINT THERE
		   JRST FLOOP ]
	JUMPL	3,FL1
	CAMG	1,NOW		;IS THE DOWNTIME FOR ONE-TIME HALTS IN THE
	JRST	[ADDI 4,3	;FUTURE?  IF NOT, THEN DELETE
		 JRST	FLOOP ]

FL1:	MOVEM	1,FILE+$DOWN(5)	;HALT PASSED THE TESTS, PUT IT IN THE FILE
	MOVEM	2,FILE+$UP(5)
	MOVEM	3,FILE+$FLAGS(5)
	ADDI	4,3		;INCREMENT POINTERS
	ADDI	5,3
	SOJG	6,FLOOP
	
FL2:	SETZM	FILE(5)		;WE'RE ALL DONE, ZERO THE REST OF THE FILE
	HRRI	1,FILE+1(5)
	HRLI	1,-1(1)
	BLT	1,EFILE
FUNMAP:	SETO	1,		;UNMAP IT (USED BY ^C AND QUIT)
	MOVE	2,[400000,,FILE/1000]
	PMAP
	RESET
	MOVEI	1,37
	PBOUT
	HALTF
	JRST	.-1

.HALT:
	TYPE	<at >
	CALL	GETSTR		;GET A STRING
	HRROI	1,BUF
	SETZ	2,
	IDTIM			;WILL IDTIM LIKE IT
	JRST	CHALT		;NO, MUST BE CYCLICAL
	GTAD
	CAMG	2,1
	JRST	[TYPE	< That time has already passed
 Halt >
		 JRST	.HALT]
	MOVEM	2,TDOWN		;YES, IT IS ONCE ONLY
	SETZM	TFLAGS
	TYPE	< ** [Single] **
>
OHALTT:	TYPE	< until >
	CALL	GETSTR
	HRROI	1,BUF
	SETZ	2,
	IDTIM
	 JRST	[HRROI	1,BUF	;TRY DEFAULTING TO DATE IN DOWNTIME
		 MOVSI	2,(1B0)
		 IDTNC
		 JRST	[TYPE	< Can read that time
>
			 JRST	OHALTT ]
		 PUSH	P,4
		 MOVE	2,TDOWN
		 SETZ	4,
		 ODCNV
		 POP	P,4
		 IDCNV
		 JRST	[TYPE	< Tried default day, no go
>
			 JRST	OHALTT ]
		 JRST	.+1  ]
	CAMG	2,TDOWN
	ADD	2,[ 1,,0 ]	;WRAP AROUND MIDNIGHT
	CAMG	2,TDOWN
	JRST	[TYPE	< Weird halt, start after finish
>
		JRST	OHALTT]

	MOVEM	2,TUP
	JRST	DUE

CHALT:				;HANDLE A CYCLICAL HALT
	CALL	EATDAT		;RETURNS +1 CAN'T FIND DAY
	 JRST	[TYPE	< Can't find a day in there
 Halt >
		 JRST	.HALT	]
	HRRZM	1,MDAY		;SAVE THE DAY NUMBER
	MOVE	1,[POINT 7,BUF]
	ILDB	2,1
	CAIE	2,40		;FIND THE SPACE BETWEEN DAY AND TIME
	JRST	.-2
	MOVSI	2,(1B0)
	IDTNC			;AND INPUT JUST THE TIME
	 JRST	[TYPE	< Can't find a time
 Halt >
		 JRST	.HALT	]
	HRL	4,MDAY
	MOVEM	4,TDOWN
	MOVSI	2,400000
	IORM	2,TFLAGS	;MAKE IT NEG TO INDICATE CYCLICAL
	TYPE	< ** [Cyclical] **
>

CHALTT:	TYPE	< until >
	CALL	GETSTR
	CALL	EATDAT
	JRST	[MOVE	1,[POINT 7,BUF]
		 JRST	CHALT1	]

	HRRZM	1,MDAY	
	MOVE	1,[POINT 7,BUF]
	ILDB	2,1
	CAIE	2,40		;FIND THE SPACE BETWEEN DAY AND TIME
	JRST	.-2
CHALT1:	MOVSI	2,(1B0)
	IDTNC			;AND INPUT JUST THE TIME
	 JRST	[TYPE	< Can't find a time
>
		 JRST	CHALTT	]

	TLZ	4,-1
	HRRZ	3,MDAY
	HLRZ	2,TDOWN
	CAMN	2,3
	JRST	[HRRZ	3,TDOWN
		 CAML	4,3
		 JRST	.+1
		 MOVE	3,MDAY
		 AOJ	3,
		 CAILE	3,6
		 SUBI	3,7
		 MOVEM	3,MDAY
		 JRST	.+1]
	HRL	4,MDAY
	MOVEM	4,TUP		;SAVE IT
	JRST	DUE		;GET THE REASON

EATDAT:	MOVE	3,[POINT 7,BUF]
	ILDB	1,3		;GET THE FIRST AS A CAP
	ANDI	1,137
	MOVE	2,1
	ILDB	1,3
	ANDI	1,137		;AND THE SECOND
	ROT	2,7
	IOR	1,2
	MOVSI	4,-7
EAT2:	MOVE	2,DAYS(4)	;AND TRY TO MATCH WITH "DAYS"
	CAMN	2,1
	 JRST	[AOS	0(P)	;FOUND IT, SKIP RETURN
		 HRRZ	1,4
		 RET	]
	AOBJN	4,EAT2
	SETZ	1,		;NO SKIP ON ERROR
	RET
DAYS:	"MO"
	"TU"
	"WE"
	"TH"
	"FR"
	"SA"
	"SU"
	
GETSTR:	HRROI	1,BUF		;INPUTS AN ASCIZ STRING INTO BUF
	MOVEI	2,^D30
	MOVEI	3,"?"
	PSTIN
	LDB	2,1
	CAIN	2,"?"
	JRST	[TYPE	<
 Enter a halt time: >
		 JRST	GETSTR	]
	SETZ	3,
	DPB	3,1
	CALL	CRIF
	RET

DUE:	TYPE	< due to >
	PBIN			;GET A CAPITAL COMMAND LETTER
	CALL	CAPS
	CHOICE	(WHY,DUE,DUE)	;AND LOOK IT UP IN THE TABLE
	CALL	WFCR		;WAIT FOR A CR
	DPB	KWV,[POINT 4,TFLAGS,35] ;PUT THE INFORMATION AWAY
	MOVEI	2,0
	SKIPE	PAGE(2)
	AOJA	2,.-1
	MOVE	1,TDOWN		;PUT THE PARAMS IN ONLY IF THEY ARE COMPLETE
	MOVEM	1,DOWN(2)
	MOVE	1,TUP
	MOVEM	1,UP(2)
	MOVE	1,TFLAGS
	MOVEM	1,FLAGS(2)
	AOS	NHLTS
	JRST	CMDIN4

WHY:	TABLE
	T (B,ackup,6)
	T (E,mergency,11)
	T (H,ardware,10)
	T (P,M,5)
	T (S,oftware,7)
	TEND

.LIST:	CALL	WFCR		;WAIT FOR THAT CR
	SETZ	HALTN,
	MOVE	10,NHLTS
	JUMPE	10,[TYPE < No halts>
		    JRST CMDIN4  ]

LISTL:	SKIPN	FLAGS(HALTN)
	JRST	[ADDI HALTN,3
		 JRST LISTL	]

	CALL	LIST1			;SHOW WITHOUT THE CONFIRM
	ADDI	HALTN,3
	SOJG	10,LISTL
	JRST	CMDIN4

LIST1:	CALL	CRIF
	MOVEI	1,40
	PBOUT
	CALL	PRINTH
	TYPE	<  >
	SKIPGE	FLAGS(HALTN)
	JRST	LCYC		;TAKE CARE OF CYCLICAL HALTS
	MOVE	2,DOWN(HALTN)
	CALL	ODOUT
	TYPE	<  >
	MOVE	2,UP(HALTN)
	CALL	ODOUT
	TYPE	<  >
	CALL	REASON
	RET
LCYC:
	MOVE	4,DOWN(HALTN)
	CALL	CDOUT
	TYPE	< (weekly)  >
	MOVE	4,UP(HALTN)
	CALL	CDOUT
	TYPE	< (weekly)  >
	CALL	REASON
	RET 

ODOUT:				;OUTPUT THE TIME OF A ONCE ONLY HALT
	PUSH	P,2
	SETZ	4,
	ODCNV
	HRL	4,3
	CALL	CDOUT
	MOVEI	1,40
	PBOUT
	MOVEI	1,101
	POP	P,2
	MOVSI	3,045400
	ODTIM
	RET

CDOUT:				;OUTPUT THE TIME OF A CYCLICAL HALT
	JUMPE	4,@ODOUT
	HLRZ	1,4
	CALL	DOUT
	MOVEI	1,40
	PBOUT
	MOVEI	1,101
	SETZB	2,3
	TLZ	4,-1
	MOVSI	5,400200
	ODTNC
	RET

DOUT:	TRZ	1,777770
	HRRO	1,FDAY(1)
	PSOUT
	RET

FDAY:
	[ASCIZ \MON\]
	[ASCIZ \TUE\]
	[ASCIZ \WED\]
	[ASCIZ \THU\]
	[ASCIZ \FRI\]
	[ASCIZ \SAT\]
	[ASCIZ \SUN\]

REASON:	MOVE	4,FLAGS(HALTN)
	ANDI	4,17
	HRRO	1,REASNS(4)
	PSOUT
	MOVEI	1,37
	PBOUT
	RET

REASNS:	[0]
	[0]
	[0]
	[0]
	[0]
	[ASCIZ \for preventive maintenance\]
	[ASCIZ \for system backup\]
	[ASCIZ \for software work\]
	[ASCIZ \for hardware work\]
	[ASCIZ \due to emergency\]

.QUIT:	TYPE	<and don't update file [Confirm] >
	CALL	WFCR
	JRST	FUNMAP

PRINTH:	MOVEI	1,"#"
	PBOUT
	MOVE	2,HALTN
	IDIVI	2,3		;CONVERTS HALTN TO A HALT NUMBER
	AOJ	2,
	CALL	DNOUT
	RET
CTRLQ:	TYPE	<^Q>
	MOVEI	1,CMDIN4	;CNTL-Q GETS YOU BACK TO THE PROMPT
	MOVEM	1,LEV3PC
	DEBRK

CTRLC:	MOVEI	1,FUNMAP	;CNTL-C ABORTS AFTER UNMAPPING THE
	MOVEM	1,LEV2PC	;FILE PAGE
	TYPE	<^C>
	DEBRK

GHNUM:	TYPE	<halt #>	;INPUT A HALT NUMBER
	HRROI	1,BUF		;REALLY A NIN ON A PSTIN STRING
	MOVEI	2,5
	MOVEI	3,"?"
	PSTIN
	LDB	2,1
	CAIN	2,"?"
	JRST	[TYPE	<
 Enter a decimal number between 1 and 169
 halt #>
		 JRST	GHNUM+1	]
	HRROI	1,BUF
	MOVEI	3,12
	NIN
	 JRST	[TYPE	< NIN: Nope -- >
		 JRST	GHNUM ]
	JUMPLE	2,[TYPE < Out of range -- >
		   JRST	GHNUM ]
	CAIL	2,^D170
	JRST	@.-2
	SOJ	2,
	IMULI	2,3
	RET

WFCR:	PBIN			;WAIT UNTIL A CR IS TYPED
	CAIN	1,37
	RET
	CAIN	1,"?"
	JRST	[TYPE	<
Confirm with CR >
		 JRST	WFCR	]
	CAIE	1,"X"-100
	CAIN	1,177
	JRST	CMDIN4
	TYPE	< ? >
	JRST	WFCR

CRIF:	PUSH	P,1		;PRINT AN EOL IF NOT IN COL 0
	PUSH	P,2
	MOVEI	1,101
	RFPOS			;GET THE POSITION OF THE PRIMARY OUTPUT
	MOVEI	1,37
	TLZ	2,-1
	SKIPE	2		;IN COL 0?
	PBOUT			;NO, PRINT IT
	POP	P,2		;YES, WE SKIPED
	POP	P,1
	RET
DNOUT:	MOVEI	1,101		;DECIMAL NOUT
	MOVEI	3,12
	JRST	.+3
ONOUT:	MOVEI	1,101		;AND OCTAL NOUT
	MOVEI	3,10
	NOUT
	 JRST	[TYPE	< NOUT: Nope >
		 JRST	.+1	]
	RET

CAPS:
	CAIL	1,"A"
	CAILE	1,"z"
	JRST	.+2
	ANDI	1,137		;MAKE IT A CAP
	RET

	
$CHOI:	HRL	16,(16)		;ROUTINE CALLED BY THE CHOICE MACRO TO
	HRRI	16,1(16)	;DO TABLE LOOKUPS
	CAIN	1,"?"
	JRST	HELP		;GIVE HELP ON "?"
$CHOI1:	HRRZ	2,(16)		;GET A COMMAND CHARACTER
	CAMN	2,1		;IS IT THE ONE WE WANT?
	JRST	[		;YES
		 HLRZ	16,(16)
		 HLRO	1,(16)
		 PSOUT		;FINISH THE COMMAND
		 MOVEI	1,40
		 PBOUT
		 HRRZ	KWV,(16)  ;AND RETURN THE KEYWORD VALUE IN KWV
		 RET	]

	AOBJN	16,$CHOI1
	TYPE	< ? >		;NOT THERE
	SUB	P,[1,1]		;POP THE STACK
	JRST	(15)		;GO TO ERROR LOCATION
HELP:
	TYPE	<

 One of the following:
>
HL:	
	MOVEI	1,40
	PBOUT
	HRRZ	1,(16)		;GET THE FIRST CHAR AND OUTPUT IT
	PBOUT
	HLRZ	1,(16)
	HLRO	1,(1)		;GET THE REST AND PSOUT IT TOO
	PSOUT
	MOVEI	1,37
	PBOUT
	AOBJN	16,HL
	SUB	P,[1,,1]
	JRST	(14)
JERR:	MOVE	2,1		;PRINT JSYS ERROR MESSAGE
	CALL	CRIF
	TYPE	< Jsys error >
	CALL	ONOUT
	TYPE	< @ >
	POP	P,2
	TLZ	2,-1
	CALL	ONOUT
	MOVEI	1,37
	JRST	FUNMAP
	
NHLTS:	0
MTIME:	0			;CYCLICAL TIME (SECS SINCE MIDNIGHT)
MDAY:	0			;CYCLICAL DAY NUMBER (MON = 0)
TDOWN:	0
TUP:	0
TFLAGS:	0
NOW:	0			;CURRENT TAD
LEV1PC:	0			;INTERRUPT PC'S
LEV2PC:	0
LEV3PC:	0
BUF:	BLOCK	8		;HANDY BUFFER
STACK:	BLOCK	40		;HANDIER STACK
LITS:	LIT

	LOC	<.!777>+1

;  The halt file has the following format:
;	For a single halt:
;
;  Word			Contents
;   0		Flags (described below)
;   1		Tenex format date & time of shutdown
;   2		Tenex format date & time of reincarnation
;
;	For a cyclical halt:

;   0		Flags (described below)
;   1		MHALT format date & time of shutdown
;   2		MHALT format date & time of reincarnation
;   .
;   .

;  MHALT format date & time is:
;  LH: Day of week  (0 = Monday)
;  RH: Seconds since midnight local time

;  Flags are as follows:
;  Negative => This is a cyclical halt
;  B32-35  The 4 bit code for the reason for downage

SFILE==.
FILE:	BLOCK	1000		;FILE PAGE IS MAPPED HERE
EFILE=.-1
SPAGE=.
PAGE:	BLOCK	1000		;EDITING IS DONE HERE
EPAGE==.-1
DOWN==$DOWN+PAGE
UP==$UP+PAGE			;OFFSETS FROM HALTN
FLAGS==$FLAGS+PAGE
	END	START
