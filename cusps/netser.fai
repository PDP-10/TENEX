;<SOURCES>NETSER.FAI;3    19-JUN-75 00:52:37    EDIT BY GEOFF
;Put in SUMEX-AIM for header on socket connections (was BBNTENEX).
;<SOURCES>NETSER.FAI;2     9-SEP-74 11:17:58    EDIT BY TOMLINSON
;NOP'ED LOGMESSAGE ROUTINE
;<TOMLINSON>NETSER.FAI;1    10-APR-74 23:14:22	EDIT BY TOMLINSON
; ADDED LOGGER FOR SOCKET 23
;<SOURCES>NETSER.FAI;51    16-JAN-73 12:35:03	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;1     8-JAN-73 15:46:43	EDIT BY TOMLINSON
; CHANGED SOCKET NUMBERS
;<SOURCES>NETSER.FAI;49    12-SEP-72 17:59:07	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;48    12-SEP-72 17:34:19	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;47    12-SEP-72 10:19:04	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;46    12-SEP-72 10:02:29	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;45    12-SEP-72  9:58:08	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;44     6-SEP-72  9:36:49	EDIT BY TOMLINSON
;<SOURCES>NETSER.FAI;43     5-SEP-72 17:07:56	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;2    24-AUG-72 10:12:30	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;1    24-AUG-72 10:04:21	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;51    20-JUL-72 13:36:55	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;50    19-JUL-72 17:11:08	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;49    19-JUL-72 16:41:18	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;48    19-JUL-72 14:02:55	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;47    19-JUL-72 13:58:56	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;46    19-JUL-72 11:46:15	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;45    19-JUL-72 10:44:13	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;44    19-JUL-72 10:36:40	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;43    19-JUL-72 10:06:49	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;42    18-JUL-72 15:01:32	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;41    18-JUL-72 14:24:13	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;40    18-JUL-72 13:16:12	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;39    18-JUL-72 12:49:32	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;38    18-JUL-72 11:39:00	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;37    18-JUL-72 11:06:42	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;36    18-JUL-72 10:39:25	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;35    15-JUL-72 11:32:21	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;34    15-JUL-72 11:28:41	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;33    15-JUL-72 11:20:26	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;32    14-JUL-72 22:08:18	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;31    14-JUL-72 21:59:35	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;30    14-JUL-72 21:51:54	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;29    14-JUL-72 21:28:54	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;28    14-JUL-72 14:12:26	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;26    14-JUL-72 13:45:47	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;25    14-JUL-72 12:13:22	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;24    14-JUL-72 11:00:22	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;23    14-JUL-72 10:56:18	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;22    14-JUL-72  9:46:51	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;21    13-JUL-72 21:26:34	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;20    13-JUL-72 21:16:43	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;19    13-JUL-72 21:09:58	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;18    13-JUL-72 20:55:59	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;17    12-JUL-72 23:42:06	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;16    12-JUL-72 23:17:24	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;15    12-JUL-72 22:32:07	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;14    12-JUL-72 22:26:08	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;13    12-JUL-72 21:11:56	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;12    12-JUL-72 17:02:11	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;11    12-JUL-72 16:56:43	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;10    12-JUL-72 16:44:49	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;9    12-JUL-72 16:26:47	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;8    12-JUL-72 16:18:15	EDIT BY TOMLINSON
;<TOMLINSON>NETSER.FAI;7    12-JUL-72 16:09:16	EDIT BY TOMLINSON

	TITLE	NETSER
	SUBTTL	R.S.TOMLINSON 13 FEB 72

IFNDEF STRUCTURE,<
PRINTX \
NETSER MUST BE ASSEMBLED WITH STALLM.FAI
\>

; STRUCTURES

STRUCTURE(TASKZ,<<PTRS,=36>,<PRMBIT,1>,<USRTSK,1>,<TTYBIT,1>,<BSYBIT,1>,<LSKT,=32>,<TSKNAM,=36>,<TJFN,6>,<LIFTIM,6>,<PROCNT,6>,<FORKSA,=18>>)

STRUCTURE(PROCZ,<<PTRS,=36>,<FORK,=18>,<TASKP,=18>,<KILTIM,=36>,<FAILRE,=18>,<BSYJFN,1>>)

; ACCUMULATORS

?VREG_1
?P_17
?FREG_16
?T1_5
?T2_6
?T3_7

; PARAMETERS

LSNG__3
PNDG__2
RFCR__4
OPND__7
PDL_200000
LPDL__2000
?PRIVATE__0
NFREE__1000
NBLKS__=100
ITMSIZ__4

; GLOBAL VARIABLES

INTEGER FRELST,TASKS,PRLST,TTYJFN,SKTCNT,DTACHF,RETPC1,RETPC2
INTEGER	SUMFLG,WATLCK,FREBLK
ARRAY	FRESTO[ITMSIZ*NFREE]
ARRAY	BLKSTO[NBLKS*=30]


FORWARD(EXTASK,1,0)
FORWARD(LOGMES,0,1)
FORWARD(CLRJFN,1,0)

ROUTINE(SETINT)
	MOVEI 1,400000
	MOVE 2,[XWD LEVTAB,CHNTAB]
	SIR
	EIR
	MOVE 2,[1B19+1B1]
	AIC
	MOVE 1,[XWD 23,1]
	ATI
	SETOM WATLCK
	ENDR

ROUTINE(WATINT)
	MOVEI 1,=10000
	AOSN WATLCK
	DISMS
^WATCON:SETOM WATLCK
	ENDR

INTINT:	MOVMS WATLCK
	SKIPE WATLCK
	DEBRK
	MOVE 1,[XWD 10000,WATCON]
	MOVEM 1,RETPC2
	DEBRK

SUMINT:	SETOM SUMFLG
	PUSH P,1
	PUSH P,2
	MOVEI 1,400000
	MOVEI 2,1B19
	IIC
	POP P,2
	POP P,1
	DEBRK

LEVTAB:	RETPC1
	RETPC2
	0

CHNTAB:	0
	XWD 1,SUMINT
	REPEAT =17,<0>
	XWD 2,INTINT
	REPEAT =36-=19-1,<0>

ROUTINE(SCNTSK,,,<<STRING,20>,BEGSTR>,TASK)
	SKIPN SUMFLG
	 JRST NOSUM
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	MOVEM 1,BEGSTR
	HRROI 2,[ASCIZ /SUMMARY
/]
	SETZ 3,
	SOUT
	HRRZ TASK,TASKS
SLOOP:	CAIN TASK,TASKS
	 JRST ESUM
	HRROI 2,[ASCIZ /               /]
	SETZ 3,
	SOUT
	LOAD(3,TASKZ,TSKNAM,TASK)
	MOVEI T2,7
LP1:	SETZ 2,
	ROTC 2,6
	ADDI 2,40
	IDPB 2,1
	SOJG T2,LP1
	LOAD(2,TASKZ,PROCNT,TASK)
	MOVE 3,[1B2+3B17+=10]
	NOUT
	 JFCL
	HRROI 2,[ASCIZ / ACTIVE PROCESSES
/]
	SETZ 3,
	SOUT
	HRRZ TASK,0(TASK)
	JRST SLOOP

ESUM:	CALL(LOGMESSAGE,BEGSTR)
	SETZM SUMFLG
NOSUM:	HRRZ TASK,TASKS
LOOP:	CAIN TASK,TASKS
	 JRST EXIT
	CALL(EXTASK,TASK)
	HRRZ TASK,0(TASK)
	JRST LOOP
	ENDR

ROUTINE(SCNPRC,,,<<STRING,20>>,<PROCES,NOW>)
	TIME
	MOVEM 1,NOW
	HRRZ PROCES,PRLST
LOOP:	CAIN PROCES,PRLST
	 JRST EXIT
	LOAD(1,PROCZ,FORK,PROCES)
	RFSTS
	HRRZ T2,1
	LDB T1,[POINT 6,1,17]
	CAIE T1,3
	 JRST NODEAD
	ZERO(T1,PROCZ,KILTIM,PROCES)
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	STORE(1,PROCZ,FAILRE,PROCES)
	HRROI 2,[ASCIZ /FORK DIED CHAN /]
	SETZ 3,
	SOUT
	MOVE 2,T2
	MOVEI 3,12
	NOUT
	 JFCL
NODEAD:	CAMGE NOW,2(PROCES)
	 JRST ELOOP
	MOVE 1,PROCES
	HRRZ PROCES,0(PROCES)
	PUSHJ P,KLPROC
	JRST LOOP

ELOOP:	HRRZ PROCES,0(PROCES)
	JRST LOOP
	ENDR

ROUTINE(MAPFRK,FKH)
	HRLZ 2,1
	HRLZI 1,400000
	HRLZI 3,160000
	MOVEI T1,777
MAPLP:	CAIN T1,677
	 MOVE T1,TOPPAG
	HRR 1,T1
	HRR 2,T1
	PMAP
	SOJGE T1,MAPLP
	ENDR

ROUTINE(FILEMESSAGE,JFN,MSG)
	DOBE
	SETO 2,
	MOVSI 3,45240
	ODTIM
	MOVEI 2," "
	BOUT
	BOUT
	MOVE 2,MSG
	SETZ 3,
	SOUT
	MOVEI 2,37
	BOUT
	ENDR

ROUTINE(LOGMESSAGE,,MSG,JFN)
	JRST EXIT		; JFCL THIS INSTRUCTION TO TURN LOG BACK ON
	CALL(FILEMESSAGE,<TTYJFN,MSG>)
	MOVSI 1,400001
	HRROI 2,[ASCIZ /<SYSTEM>NETSER.LOG;1/]
	GTJFN
	 JRST EXIT
	MOVEM 1,JFN
	MOVE 2,[XWD 70000,20000]
	OPENF
	 JRST RLJF
	CALL(FILEMESSAGE,<1,MSG>)
	CLOSF
	 JFCL
	JRST EXIT

RLJF:	MOVE 1,JFN
	RLJFN
	 JFCL
	ENDR

ROUTINE(SGNON,,<NAME,FHOST,FSKT,FORK>,<<STRING,24>,BEGSTR>)
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	MOVEM 1,BEGSTR
	MOVE T1,[POINT 6,NAME]
	MOVEI T2,6
LOOP:	ILDB T3,T1
	ADDI T3,40
	IDPB T3,1
	SOJG T2,LOOP
	MOVEI T1," "
	IDPB T1,1
	IDPB T1,1
	MOVE 2,FHOST
	MOVEI 3,10
	CVHST			; CONVERT HOST NUMBER TO STRING
	 NOUT			; OR TO NUMBER
	 JFCL
	MOVEI T1,"-"
	IDPB T1,1
	MOVE 2,FSKT
	NOUT
	 JFCL
	HRROI 2,[ASCIZ / FORK /]
	SETZ 3,
	SOUT
	MOVE 2,FORK
	ANDI 2,177777
	MOVEI 3,=10
	NOUT
	 JFCL
	CALL(LOGMESSAGE,BEGSTR)
	ENDR

ROUTINE(SGNOFF,,<NAME,FORK,FAILF,CPUTIM>,<<STRING,24>,BEGSTR>)
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	MOVEM 1,BEGSTR
	MOVE T1,[POINT 6,NAME]
	MOVEI T2,6
LOOP:	ILDB T3,T1
	ADDI T3,40
	IDPB T3,1
	SOJG T2,LOOP
	HRROI 2,[ASCIZ / FORK /]
	SETZ 3,
	SOUT
	MOVE 2,FORK
	ANDI 2,177777
	MOVEI 3,=10
	NOUT
	 JFCL
	HRROI 2,[ASCIZ / USED /]
	SETZ 3,
	SOUT
	MOVE 2,CPUTIM
	MOVE 3,[024100040200]
	FLOUT
	 JFCL
	MOVEI T1," "
	IDPB T1,1
	SKIPN 2,FAILF
	 MOVEI 2,[ASCIZ /SUCCESSFUL COMPLETION./]
	HRLI 2,(<POINT 7,0>)
	SETZ 3,
	SOUT
	CALL(LOGMESSAGE,BEGSTR)
	ENDR

ROUTINE(LINK,<ITEM,BASE>)
	HLRZ T1,0(BASE)
	HRLM T1,0(ITEM)
	HRRM BASE,0(ITEM)
	HRRM ITEM,0(T1)
	HRLM ITEM,0(BASE)
	ENDR

ROUTINE(UNLINK,ITEM)
	HRRZ T1,0(ITEM)
	HLRZ T2,0(ITEM)
	HRLM T2,0(T1)
	HRRM T1,0(T2)
	HRRM ITEM,0(ITEM)
	HRLM ITEM,0(ITEM)
	ENDR

ROUTINE(GETITM)
	HRRZ VREG,FRELST
	CAIN VREG,FRELST
	 JRST EXIT
	CALL(UNLINK,VREG)
	SKIPRT
	ENDR

ROUTINE(RELEAS,ITEM)
	CALL(LINK,<ITEM,<<MOVEI .A.,FRELST>,.A.>>)
	ENDR

ROUTINE(GETBLK)
	MOVEI VREG,=25
	ADD VREG,FREBLK
	CAIL VREG,BLKSTO+NBLKS*=25
	 JRST EXIT
	EXCH VREG,FREBLK
	SKIPRT
	ENDR

ROUTINE(CRTASK,,<NAM,SKT,FRK,TIM,PRM,UTSK,TTYF>)
	CALL(GETITM)
	 JRST EXIT
	MOVE T1,SKT
	STORE(T1,TASKZ,LSKT,VREG)
	MOVE T1,NAM
	STORE(T1,TASKZ,TSKNAM,VREG)
	MOVE T1,FRK
	STORE(T1,TASKZ,FORKSA,VREG)
	MOVE T1,TIM
	IDIVI T1,=10
	STORE(T1,TASKZ,LIFTIM,VREG)
	MOVE T1,PRM
	STORE(T1,TASKZ,PRMBIT,VREG)
	MOVE T1,UTSK
	STORE(T1,TASKZ,USRTSK,VREG)
	MOVE T1,TTYF
	STORE(T1,TASKZ,TTYBIT,VREG)
	SETZ T1,
	STORE(T1,TASKZ,TJFN,VREG)
	STORE(T1,TASKZ,BSYBIT,VREG)
	STORE(T1,TASKZ,PROCNT,VREG)
	CALL(LINK,<VREG,<<MOVEI .A.,TASKS>,.A.>>)
	SKIPRT
	ENDR

ROUTINE(CRPROC,,TSK,<<ACS,20>>,PROCES)
	CALL(GETITM)
	 JRST EXIT
	MOVEM VREG,PROCES
	MOVSI 1,200000
	CFORK
	 JRST [	CALL(RELEASE,PROCES)
		JRST EXIT]
	STORE(1,PROCZ,FORK,PROCES)
	CALL(MAPFRK,1)
	MOVE T1,TSK
	STORE(T1,PROCZ,TASKP,PROCES)
	LOAD(T2,TASKZ,LIFTIM,T1)
	IMULI T2,=10000
	TIME
	ADD T2,1
	STORE(T2,PROCZ,KILTIM,PROCES)
	MOVEI T2,[ASCIZ /TIMED-OUT/]
	STORE(T2,PROCZ,FAILRE,PROCES)
	MOVEI T2,1
	STORE(T2,TASKZ,BSYBIT,T1)
	STORE(T2,PROCZ,BSYJFN,PROCES)
	LOAD(T2,TASKZ,PROCNT,T1)
	AOS T2
	STORE(T2,TASKZ,PROCNT,T1)
	MOVEM PROCES,1+ACS
	MOVE T2,[XWD -LPDL,PDL-1]
	MOVEM T2,P+ACS
	LOAD(1,PROCZ,FORK,PROCES)
	MOVEI 2,ACS
	SFACS
	LOAD(2,TASKZ,FORKSA,T1)
	LOAD(T2,TASKZ,USRTSK,T1)
	SKIPE T2
	MOVEI 2,DOUSRT
	SFORK
	CALL(LINK,<PROCES,<<MOVEI .A.,PRLST>,.A.>>)
	SKIPRT
	ENDR

ROUTINE(KLPROC,PROC,,CPUTIM,<TASK,PROCES>)
	MOVE PROCES,PROC
	LOAD(TASK,PROCZ,TASKP,PROCES)
	LOAD(1,PROCZ,FORK,PROCES)
	FFORK
	RUNTM
	FSC 1,233
	FSC 2,233
	FDVR 1,2
	MOVEM 1,CPUTIM
	LOAD(1,PROCZ,FORK,PROCES)
	KFORK
	CALL(SGNOFF,<<<2(TASK)>>,1,<<LOAD(T1,PROCZ,FAILRE,PROCES)>,T1>,CPUTIM>)
	LOAD(T1,TASKZ,PROCNT,TASK)
	SOS T1
	STORE(T1,TASKZ,PROCNT,TASK)
	LOAD(T1,PROCZ,BSYJFN,PROCES)
	JUMPE T1,KLPR1
	SETZ T1,
	STORE(T1,TASKZ,BSYBIT,TASK)
	CALL(CLRJFN,<<<LOAD(.A.,TASKZ,TJFN,TASK)>,.A.>>)
	SETZ T1,
	STORE(T1,TASKZ,TJFN,TASK)
KLPR1:	CALL(UNLINK,PROCES)
	CALL(RELEASE,VREG)
	ENDR

ROUTINE(PNDGP,,SKT,<STSN,LSKN>)
IFN PRIVATE,<
	GJINF
	ADDI 3,=100000
	LSH 3,=15
	ADDM 3,SKT
>
	MOVE 1,[SIXBIT /NETSTS/]
	SYSGT
	HRRZM 2,STSN
	MOVE 1,[SIXBIT /NETLSK/]
	SYSGT
	HRRZM 2,LSKN
	HLLZ T1,2
LOOP:	MOVE 1,STSN
	HRL 1,T1
	GETAB
	 JRST EXIT
	LDB T2,[POINT 4,1,3]
	CAIE T2,PNDG
	 JRST ELOOP
	MOVE 1,LSKN
	HRL 1,T1
	GETAB
	 JRST EXIT
	CAME 1,SKT
	 JRST ELOOP
	AOSA RETURN
ELOOP:	AOBJN T1,LOOP
	ENDR

ROUTINE(MKICPF,,SOCKET,<<STRING,24>>)
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	HRROI 2,[ASCIZ /NET:/]
	SETZ 3,
	SOUT
	MOVE 2,SOCKET
	MOVEI 3,10
	NOUT
	 JRST EXIT
IFN PRIVATE,<HRROI 2,[ASCIZ /.;T/]>
IFE PRIVAT,<HRROI 2,[ASCIZ /#./]>
	SETZ 3,
	SOUT
	MOVSI 1,400001
	HRROI 2,STRING
	GTJFN
	 JRST EXIT
	MOVEM 1,SOCKET
	MOVE 2,[XWD 400000,100000]
	OPENF
	 JRST [	MOVE 1,SOCKET
		RLJFN
		 JRST EXIT
		JRST EXIT]
	MOVSI 3,777700+=19
	MOVEI 2,24
	MTOPR
	SKIPRT
	ENDR

ROUTINE(EXTASK,TSK,,<FHST,FSKT>,<TASK,PROCESS>)
	MOVE TASK,TSK
	LOAD(T1,TASKZ,BSYBIT,TASK)
	JUMPN T1,EXIT
	LOAD(1,TASKZ,TJFN,TASK)
	JUMPN 1,CHECK
	LOAD(T2,TASKZ,PRMBIT,TASK)
	JUMPN T2,GJFN
	CALL(PNDGP,<<<LOAD(T1,TASKZ,LSKT,TASK)>,T1>>)
	 JRST EXIT		; NO PENDING RFC, EXIT
GJFN:	CALL(MKICPF,<<<	LOAD(T1,TASKZ,LSKT,TASK)>,T1>>)
	 JRST EXIT
	STORE(VREG,TASKZ,TJFN,TASK)
CHECK:	GDSTS
	JUMPE 3,DIED
	MOVEM 3,FHST
	MOVEM 4,FSKT
	LDB T1,[POINT 4,2,3]
	CAIE T1,RFCR
	 JRST NOTRFC
	CALL(CRPROC,TASK)
	 JRST EXIT
	MOVEM VREG,PROCES
	CALL(SGNON,<<<2(TASK)>>,FHST,FSKT,<<LOAD(T1,PROCZ,FORK,PROCES)>,T1>>)
	JRST EXIT

NOTRFC:	LOAD(T2,TASKZ,PRMBIT,TASK)
	CAIN T1,LSNG
	 JUMPN T2,EXIT
DIED:	CALL(CLRJFN,<<<LOAD(.A.,TASKZ,TJFN,TASK)>,.A.>>)
	SETZ T1,
	STORE(T1,TASKZ,TJFN,TASK)
	ENDR

ROUTINE(CLRJFN,JFN)
	JUMPLE JFN,EXIT
	MOVEM JFN,T1
	CLOSF
	 MOVE JFN,T1
	RLJFN
	 JFCL
	ENDR

ROUTINE(GETSKT)
	AOS VREG,SKTCNT
	ANDI VREG,177
	LSH VREG,1
	ENDR

ROUTINE(INITTASKS,,THINGS,,RTHING)
	MOVE RTHING,THINGS
LOOP:	MOVE T1,0(RTHING)
CALL(CRTASK,<<<0(T1)>>,<<1(T1)>>,<<2(T1)>>,<<3(T1)>>,<<4(T1)>>,<<[0]>>,<<[0]>>>)
	 JFCL
	AOBJN RTHING,LOOP
	ENDR

ROUTINE(IUSRT,,,<JFN,USRF,TTYF,LSNF,SKT,NAM,<STRING,=10>>,<BLK>)
	HRROI 2,[ASCIZ /<SYSTEM>NETSER.USER-TASKS/]
	MOVSI 1,100001
	GTJFN
	 JRST EXIT		; NO TASKS
	MOVEM 1,JFN
	MOVE 2,[XWD 70000,200000]
	OPENF
	 JRST [	MOVE 1,JFN
		RLJFN
		 JFCL
		JRST EXIT]
LP1:	CALL GETBLK
	 JRST FULL
	MOVEM VREG,BLK
	SETZM 5(BLK)
	MOVEI 2,6(BLK)
	HRLI 2,(<POINT 7,0>)
	MOVE 1,JFN
	MOVEI 3,=99
	MOVEI 4,","
	MOVEM 2,0(BLK)
	SIN
	JUMPE 3,ILLFMT
	SETZ T3,
	DPB T3,2
	MOVEM 2,1(BLK)
	SIN
	DPB T3,2
	JUMPE 3,ILLFMT
	MOVEM 2,2(BLK)
	MOVEI T2,NAM
	HRLI T2,440600
	MOVEI T1,6
	SETZM NAM
NMLP:	BIN
	JUMPE 2,ILLFMT
	CAIN 2,","
	 JRST ENMLP
	SOJL T1,ILLFMT
	SUBI 2,40
	CAIL 2,100
	SUBI 2,40
	IDPB 2,T2
	JRST NMLP

ENMLP:	MOVE 2,2(BLK)
	SIN
	DPB T3,2
	JUMPE 3,ILLFMT
	SETOM USRF
	SETZM TTYF
	SETZM LSNF
FLGLP:	BIN
	JUMPE 2,ILLFMT
	CAIN 2,","
	 JRST EFLGLP
	CAIN 2,"T"
	 SETOM TTYF
	CAIN 2,"L"
	 SETOM LSNF
	CAIN 2,"S"
	 SETZM USRF
	CAIN 2,"W"
	 JRST [	MOVEI T1,400000
		JRST SETMOD]
	CAIN 2,"O"
	 JRST [	MOVEI T1,200000
		JRST SETMOD]
	CAIE 2,"C"
	 JRST FLGLP
	MOVEI T1,100000
SETMOD:	IORM T1,5(BLK)
	JRST FLGLP

EFLGLP:	MOVEI 3,10
	NIN
	 JRST ILLFMT
	MOVEM 2,SKT
	MOVEI 3,=10
	NIN
	 JRST ILLFMT
	MOVEM 2,3(BLK)
	NIN
	 JRST ILLFMT
	MOVEM 2,4(BLK)
	MOVE 1,1(BLK)
	MOVEI 3,=10
	NIN
	 JRST SACT
	TLNE 2,-1
	 JRST SACT
	TLO 2,500000
	MOVEM 2,1(BLK)
SACT:	SKIPN USRF
	 JRST SYSTSK
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	HRROI 2,[ASCIZ /NET:/]
	SETZ 3,
	SOUT
	MOVE 2,0(BLK)
	MOVEI 3,=41
	MOVEI 4,">"
	SOUT
	MOVE 2,SKT
	MOVEI 3,10
	NOUT
	 JFCL
	MOVEI 2,"."
	IDPB 2,1
	SETZ 2,
	IDPB 2,1
	HRROI 2,STRING
	MOVSI 1,1
	GTJFN
	 JRST ILLFMT
	CVSKT
	 JRST ILLFMT
	IORI 2,1
	MOVEM 2,SKT
	RLJFN
	 JFCL
SYSTSK:	CALL(CRTASK,<NAM,SKT,BLK,[=10],LSNF,[1],TTYF>)
	 JRST FULL
	MOVE 1,JFN
	BKJFN
	 JFCL
EOLLP:	BIN
	JUMPE 2,EOF
	CAIE 2,37
	CAIN 2,12
	 JRST [	BIN
		JUMPE 2,EOF
		BKJFN
		 JFCL
		JRST LP1]
	JRST EOLLP

ILLFMT:	HRROI VREG,[ASCIZ /ILLEGAL USER TASK FILE FORMAT/]
	JRST EOF1

FULL:	HRROI VREG,[ASCIZ /NO ROOM FOR ALL TASKS/]
	JRST EOF1

EOF:	SETZ VREG
EOF1:	EXCH VREG,JFN
	CLOSF
	 JFCL
	MOVE VREG,JFN
	ENDR

ROUTINE(FNDSKT,,<LCL,FHST,FSKT>,<STSN,LSKN,AWDN,FSKN>)
	MOVE 1,[SIXBIT /NETSTS/]
	SYSGT
	HLLZ T1,2		; COUNT OF SOCKETS
	HRRZM 2,STSN		; NETSTS TABLE NUMBER
	MOVE 1,[SIXBIT /NETLSK/]
	SYSGT
	HRRZM 2,LSKN
	MOVE 1,[SIXBIT /NETAWD/]
	SYSGT
	HRRZM 2,AWDN
	MOVE 1,[SIXBIT /NETFSK/]
	SYSGT
	HRRZM 2,FSKN
LOOP:	MOVE 1,STSN
	HRL 1,T1
	GETAB
	 JRST ELOOP
	ROT 1,4
	ANDI 1,17		; GET STATE OF THIS CONNECTION
	CAIE 1,RFCR
	 JRST ELOOP		; IGNORE ALL NOT RFCR
	MOVE 1,LSKN
	HRL 1,T1
	GETAB
	 JRST ELOOP
	CAME 1,LCL
	 JRST ELOOP
	MOVE 1,AWDN
	HRL 1,T1
	GETAB
	 JRST ELOOP
	LDB 1,[POINT 9,1,17]
	CAME 1,FHST
	 JRST ELOOP
	MOVE 1,FSKN
	HRL 1,T1
	GETAB
	 JRST ELOOP
	CAME 1,FSKT
	 JRST ELOOP
	HRRZ VREG,T1
	SKIPRT
	JRST EXIT

ELOOP:	AOBJN T1,LOOP
	ENDR

ROUTINE(DOICP,,<IJFN,LCLSKT,TSK,PROC>,<SJFN,RJFN,SYSSKT,FSKT,FHST,<STRING,24>,STSN,BALN>,<FAILF,PROCES>)
	MOVE PROCES,PROC
	SETZB FAILF,SJFN
	SETZM RJFN
	MOVE 1,IJFN
	CVSKT
	 JRST FAIL
	IORI 2,1
	MOVEM 2,SYSSKT
	GDSTS
	MOVEM 3,FHST
	MOVEM 4,FSKT
	CALL(FNDSKT,<SYSSKT,FHST,FSKT>)
	 JRST FAIL		; ABANDONED
	MOVEM VREG,SYSSKT
	MOVEI 1,STRING
	HRLI 1,(<POINT 7,0>)
	HRROI 2,[ASCIZ /NET:/]
	SETZ 3,
	SOUT
	MOVE 2,LCLSKT
	MOVEI 3,8
	NOUT
	 JRST FAIL
	MOVEI 2,"."
	IDPB 2,1
	MOVE 2,FHST
	NOUT
	 JRST FAIL
	MOVEI T1,"-"
	IDPB T1,1
	MOVE 2,FSKT
	ADDI 2,2
	NOUT
	 JRST FAIL
	HRROI 2,[ASCIZ /;T/]
	SETZ 3,
	SOUT
	MOVSI 1,1
	HRROI 2,STRING
	GTJFN
	 JRST FAIL
	MOVEM 1,SJFN
	MOVSI 1,1
	HRROI 2,STRING
	GTJFN
	 JRST FAIL
	MOVEM 1,RJFN
	CVSKT			; GET LOCAL SOCKET FOR CONNECTIONS
	 JRST FAIL
	MOVEM 2,LCLSKT
	MOVE 1,IJFN
	MOVEI 2,20
	MTOPR			; ACCEPT CONNECTION
	MOVE 1,[SIXBIT /NETBAL/]
	SYSGT
	HRRZM 2,BALN
	MOVE 1,[SIXBIT /NETSTS/]
	SYSGT
	HRRZM 2,STSN
	MOVEI FAILF,[ASCIZ /BIT ALLOC NOT REC'VD/]
	STORE(FAILF,PROCZ,FAILRE,PROCES)
WATLP:	MOVE 1,BALN
	HRL 1,SYSSKT
	GETAB
	 JRST FAIL
	CAIGE 1,=32
	 JRST [	MOVEI 1,=500
		DISMS
		JRST WATLP]
	MOVEI FAILF,[ASCIZ /MESSAGE ALLOC NOT REC'VD/]
	STORE(FAILF,PROCZ,FAILRE,PROCES)
WATLP2:	MOVE 1,STSN
	HRL 1,SYSSKT
	GETAB
	 JRST FAIL
	ANDI 1,177777
	SKIPA
;	CAIGE 1,1
	 JRST [	MOVEI 1,=500
		DISMS
		JRST WATLP2]
	MOVEI FAILF,[ASCIZ /Timed-out/]
	STORE(FAILF,PROCZ,FAILRE,PROCES)
	MOVE 1,IJFN
	MOVE 2,LCLSKT
	BOUT
	CLOSF
	 JFCL
	SETZB T1,IJFN
	ZERO(T1,PROCZ,BSYJFN,PROCES)
	MOVE T2,TSK
	STORE(T1,TASKZ,TJFN,T2)
	STORE(T1,TASKZ,BSYBIT,T2)
	MOVE 1,SJFN
	MOVE 2,[XWD 103000,100000]
	MOVEI FAILF,[ASCIZ /CAN'T OPEN SEND/]
	STORE(FAILF,PROCZ,FAILRE,PROCES)
	OPENF
	 JRST FAIL1
	MOVE 1,RJFN
	MOVE 2,[XWD 100000,200000]
	MOVEI FAILF,[ASCIZ /CAN'T OPEN RECV/]
	STORE(FAILF,PROCZ,FAILRE,PROCES)
	OPENF
	 JRST FAIL1
	MOVE VREG+1,SJFN
	SKIPRT
	JRST EXIT

FAIL:	CALL(CLRJFN,<<<MOVE .A.,IJFN>,.A.>>)
	MOVE T2,TSK
	SETZ T1,
	STORE(T1,PROCZ,BSYJFN,PROCES)
	STORE(T1,TASKZ,TJFN,T2)
	STORE(T1,TASKZ,BSYBIT,T2)
FAIL1:	CALL(CLRJFN,<<<MOVE .A.,SJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,RJFN>,.A.>>)
	SKIPN VREG,FAILF
	MOVEI VREG,[ASCIZ /ICP FAILED/]
	ENDR


ROUTINE(DOLGC,,<KPROCS,NEWNVF>,<SJFN,RJFN,PTY>,<PROCES,TASK>)
	MOVE PROCES,KPROCS
	LOAD(TASK,PROCZ,TASKP,PROCES)
	CALL(GETSKT)
	CALL(DOICP,<<<LOAD(T1,TASKZ,TJFN,TASK)>,T1>,VREG,TASK,PROCES>)
	 JRST [	STORE(1,PROCZ,FAILRE,PROCES)
		JRST ENDD]
	MOVEM 1,RJFN
	MOVEM 2,SJFN
	MOVEI T1,[ASCIZ /TIMED-OUT AFTER ICP/]
	STORE(T1,PROCZ,FAILRE,PROCES)
	SKIPE NEWNVF		; NEW STYLE NVT?
	 HRLI 1,(1B2)		; YES, SET BIT2
	ATPTY
	 JRST SORRY
	MOVEM 1,PTY
	MOVSI 1,100001
	HRROI 2,[ASCIZ /<SYSTEM>NETWORK-LOGINMESSAGE/]
	GTJFN
	 JRST NOMSG
	MOVEM 1,SJFN
	MOVE 2,[XWD 70000,200000]
	OPENF
	 JRST [	MOVE 1,SJFN
		RLJFN
		 JFCL
		JRST NOMSG]
MSGLP:	MOVE 1,SJFN
	BIN
	JUMPE 2,EMSGLP
	MOVE 1,PTY
	BOUT
	JRST MSGLP

EMSGLP:	CLOSF
	 JFCL
NOMSG:	MOVE 1,PTY
	MOVEI 2,3
	STI
	ZERO(T1,PROCZ,FAILRE,PROCES)
	JRST ENDD

SORRY:	MOVE 1,SJFN
	HRROI 2,[ASCIZ /
SORRY, ALL NETWORK TERMINALS ARE IN USE.  PLEASE TRY AGAIN LATER.
/]
	SETZ 3,
	SOUT
	CLOSF
	 JFCL
	MOVE 1,RJFN
	CLOSF
	 JFCL
	MOVEI T1,[ASCIZ /ATPTY FAILURE/]
	STORE(T1,PROCZ,FAILRE,PROCES)
ENDD:	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

ROUTINE(DOLOG,,,,)
	CALL(DOLGC,<1,[0]>)
ENDR

ROUTINE(DONLG)
	CALL(DOLGC,<1,[-1]>)
ENDR

ROUTINE(DODATE,,,<SJFN,RJFN>,PROCES)
	MOVEM 1,PROCES
	CALL(GETSKT)
	CALL(DOICP,<<<LOAD(T1,PROCZ,TASKP,PROCES)
			LOAD(T2,TASKZ,TJFN,T1)>,T2>,VREG,T1,PROCES>)
	 JRST FAIL
	MOVEI T1,[ASCIZ /TIMED-OUT AFTER ICP/]
	STORE(T1,PROCZ,FAILRE,PROCES)
	MOVEM VREG,RJFN
	MOVEM VREG+1,SJFN
	MOVE 1,VREG+1
	SETO 2,
	MOVSI 3,322060
	ODTIM
	MOVEI 2,15
	BOUT
	MOVEI 2,12
	BOUT
	CALL(CLRJFN,<<<MOVE .A.,RJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,SJFN>,.A.>>)
	SETZ VREG,
FAIL:	STORE(VREG,PROCZ,FAILRE,PROCES)
	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

ROUTINE(DOECHO,,,<SJFN,RJFN>,<PROCES,TASK>)
	MOVEM 1,PROCES
	CALL GETSKT
	CALL(DOICP,<<<	LOAD(TASK,PROCZ,TASKP,PROCES)
			LOAD(T2,TASKZ,TJFN,TASK)>,T2>,VREG,TASK,PROCES>)
	 JRST FAIL
	MOVEM VREG,RJFN
	MOVEM VREG+1,SJFN
	HRLOI T1,377777
	STORE(T1,PROCZ,KILTIM,PROCES)
LOOP:	MOVE 1,RJFN
	BIN
	JUMPE 2,[GTSTS
		TLNE 2,1000
		 JRST EOF
		SETZ 2,
		JRST .+1]
	MOVE 1,SJFN
	BOUT
	JRST LOOP

EOF:	CALL(CLRJFN,<<<MOVE .A.,RJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,SJFN>,.A.>>)
	ZERO(T1,PROCZ,FAILRE,PROCES)
	JRST ENDD

FAIL:	STORE(VREG,PROCZ,FAILRE,PROCES)
ENDD:	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

ROUTINE(CPYFIL,,<FJFN,TJFN,BSIZ,FMODE,TMODE,APPF>,<NTOF,PNTR,COUNT,<CPYBUF,400>>)
	MOVEI T1,=36
	IDIV T1,BSIZ		; BYTES PER WORD
	IMULI T1,400		; BYTES PER BUFFER
	MOVEM T1,COUNT
	MOVE 1,TJFN
	DVCHR
	LDB T1,[POINT 9,2,17]	; GET DEVICE TYPE
	SETZM NTOF
	CAIN T1,16
	SETOM NTOF		; TO FILE IS NET
	MOVE 1,FJFN
	GTSTS
	JUMPL 2,FOPN		; TO IS ALREADY OPEN
	MOVE 3,FMODE
	SETZ 2,
	ROTC 2,-4
	MOVE 3,BSIZ
	ROTC 2,-6
	HRRI 2,200000
	OPENF
	 JRST EXIT
FOPN:	MOVE 1,TJFN
	GTSTS
	JUMPL 2,TOPN
	SETZ 2,
	MOVE 3,TMODE
	ROTC 2,-4
	MOVE 3,BSIZ
	ROTC 2,-6
	HRRI 2,100000
	SKIPE APPF
	HRRI 2,020000
	OPENF
	 JRST EXIT
TOPN:	MOVE T1,BSIZ
	ROT T1,-=12
	TLO T1,440000
	HRRI T1,CPYBUF
	MOVEM T1,PNTR
CPYLP:	MOVE 1,FJFN
	MOVE 2,PNTR
	MOVN 3,COUNT
	SIN
	MOVNS T1,3
	SUB 3,COUNT
	JUMPE 3,EXIT
	MOVE 2,PNTR
	MOVE 1,TJFN
	SOUT
	JUMPN T1,EXIT
	SKIPN NTOF
	 JRST CPYLP
	GDSTS
	LDB T1,[POINT 4,2,3]
	CAIN T1,OPND
	 JRST CPYLP
	ENDR

ROUTINE(CMPSTR,,<ST1,ST2>)
LOOP:	ILDB T1,ST1
	ILDB T2,ST2
	CAME T2,T1
	 JRST EXIT
	JUMPN T1,LOOP
	SKIPRT
	ENDR

ROUTINE(STRIN,JFN,<PTR,MAX>)
	MOVE 2,PTR
	MOVE 3,MAX
	MOVEI 4,":"
	SIN
	SETZ T1,
	DPB T1,2
	ENDR

ROUTINE(DOCOPY,,,<SJFN,RJFN,FILJFN,DIRCTN,BYTSIZ,MODE,<USRBUF,8>,<PSWBUF,8>,<NAMBUF,=32>,<DIRBUF,8>,<DIRTAB,=13>,<FILTAB,=13>>,<PROCES,TASK>)
	MOVEM 1,PROCES
	CALL GETSKT
	CALL(DOICP,<<<	LOAD(TASK,PROCZ,TASKP,PROCES)
			LOAD(T1,TASKZ,TJFN,TASK)>,T1>,VREG,TASK,PROCES>)
	 JRST FAIL
	MOVEM VREG,RJFN
	MOVEM VREG+1,SJFN
	MOVEI T1,[ASCIZ /TIMED-OUT AFTER ICP/]
	STORE(T1,PROCZ,FAILRE,PROCES)
	SETZM FILJFN
	CALL(STRIN,<<<MOVE .A.,RJFN>,.A.>,<<HRROI .A.,USRBUF>,.A.>,<<[=39]]>>>)
	CALL(STRIN,<<<MOVE .A.,RJFN>,.A.>,<<HRROI .A.,PSWBUF>,.A.>,<<[=39]]>>>)
	BIN
	SETZ T1,
	CAIN 2,"R"
	 MOVEI T1,200000
	CAIN 2,"W"
	 MOVEI T1,100000
	CAIN 2,"A"
	 MOVEI T1,020000
	MOVEM T1,DIRCTN
	JUMPE T1,[MOVEI VREG,[ASCIZ /UNRECOGNIZED DIRECTION/]
		JRST FAIL1]
	BIN
	MOVEI 3,8
	NIN
	 JRST [	MOVEI VREG,[ASCIZ /NO MODE/]
		JRST FAIL1]
	CAIL 2,0
	CAILE 2,17
	 JRST [	MOVEI VREG,[ASCIZ /ILLEGAL MODE/]
		JRST FAIL1]
	MOVEM 2,MODE
	MOVEI 3,=10
	NIN
	 JRST [	MOVEI VREG,[ASCIZ /NO BYTE SIZE/]
		JRST FAIL1]
	CAILE 2,0
	CAILE 2,=36
	 JRST [	MOVEI VREG,[ASCIZ /ILLEGAL BYTE SIZE/]
		JRST FAIL1]
	MOVEM 2,BYTSIZ
	MOVEI 2,NAMBUF
	HRLI 2,(<POINT 7,0>)
	MOVEI 3,6+=39+=39+6+5
	MOVEI 4,0
	SIN
	JUMPE 3,[MOVEI VREG,[ASCIZ /NAME TOO LONG/]
		JRST FAIL1]
	MOVSI T1,774000
	TDNN T1,USRBUF		; NULL NAME?
	 JRST [	SETZM 6+DIRTAB
		SETZM =11+DIRTAB
		JRST CHKACC]
	MOVEI 1,1
	HRROI 2,USRBUF
	STDIR
	 JFCL
	 JRST [	MOVEI VREG,[ASCIZ /NO SUCH USER/]
		JRST FAIL1]
	HRRZS 1
	MOVEI 2,DIRTAB
	MOVEI 3,DIRBUF
	HRLI 3,(<POINT 7,0>)
	GTDIR
	CALL(CMPSTR,<1+DIRTAB,<<MOVEI .A.,PSWBUF
				HRLI .A.,(<POINT 7,0>)>,.A.>>)
	 JRST [	MOVEI VREG,[ASCIZ /INCORRECT PASSWORD/]
		JRST FAIL1]
CHKACC:	MOVE T1,DIRCTN
	MOVSI 1,400001
	CAIE T1,100000
	MOVSI 1,100001
	HRROI 2,NAMBUF
	GTJFN
	 JRST [	MOVEI VREG,[ASCIZ /FILE NOT FOUND/]
		JRST FAIL1]
	MOVEM 1,FILJFN
	DVCHR
	LDB T1,[POINT 9,2,17]
	JUMPN T1,NOTDSK		; NOT DISK FILE
	MOVE 2,FILJFN
	MOVEI 1,DIRBUF
	HRLI 1,(<POINT 7,0>)
	MOVSI 3,010000
	JFNS
	SETZ 1,
	HRROI 2,DIRBUF
	STDIR
	 JRST 4,.
	 JRST 4,.
	HRRZS 1
	MOVEI 2,FILTAB
	SETZ 3,
	GTDIR
	MOVE 1,FILJFN
	MOVE 2,[XWD 1,4]
	MOVEI 3,3
	GTFDB
	MOVE T1,6+FILTAB
	CAMN T1,6+DIRTAB
	 JRST [	ROT 3,-1
		JRST CHK1]
	MOVE T1,=11+DIRTAB
	TDNE T1,=12+FILTAB
	 JRST [	ROT 3,5
		JRST CHK1]
	ROT 3,=11
CHK1:	TDNN 3,DIRCTN
	 JRST [	MOVEI VREG,[ASCIZ /ACCESS NOT ALLOWED/]
		JRST FAIL1]
NOTDSK:	MOVE 1,RJFN
	HRLI 1,400000
	CLOSF
	 HALT
	MOVE 1,SJFN
	SETZ 2,
	BOUT
	HRLI 1,600000
	CLOSF
	 HALT
	HRLOI T1,377777
	STORE(T1,PROCZ,KILTIM,PROCES)
	MOVE T1,DIRCTN
	CAIE T1,200000
	 JRST CPYWRT
	PUSH P,FILJFN
	PUSH P,SJFN
	PUSH P,BYTSIZ
	PUSH P,MODE
	PUSH P,[6]
	PUSH P,[0]
	JRST DCPY1

CPYWRT:	PUSH P,RJFN
	PUSH P,FILJFN
	PUSH P,BYTSIZ
	PUSH P,[0]
	PUSH P,MODE
	PUSH P,[0]
	CAIN T1,020000
	 SETOM 0(P)
DCPY1:	PUSHJ P,CPYFIL
	ZERO(T1,PROCZ,FAILRE,PROCES)
	JRST ENDD

FAIL:	STORE(VREG,PROCZ,FAILRE,PROCES)
	JRST END2

FAIL1:	STORE(VREG,PROCZ,FAILRE,PROCES)
	HRRO 2,VREG
	MOVE 1,SJFN
	SETZ 3,
	SOUT
ENDD:	CALL(CLRJFN,<<<MOVE .A.,RJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,FILJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,SJFN>,.A.>>)
END2:	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

ROUTINE(DOSUBSYS,,<FILE,NAME,DRTEXT>,<IFILE,SJFN,RJFN,SUBFRK,DRFILE>,<PROCES,TASK,FAILF>)
	MOVEM 1,PROCES
	LOAD(TASK,PROCZ,TASKP,PROCES)
	CALL(GETSKT)
	CALL(DOICP,<<<LOAD(T1,TASKZ,TJFN,TASK)>,T1>,VREG,TASK,PROCES>)
	 JRST FAIL
	MOVEM VREG,RJFN
	MOVEM VREG+1,SJFN
	MOVEI T1,[ASCIZ /TIMED-OUT AFTER ICP/]
	STORE(T1,PROCZ,FAILRE,PROCES)
	TIME
	ADDI 1,=60000
	STORE(1,PROCZ,KILTIM,PROCES)
	SETOM DRFILE
	SKIPN DRTEXT
	 JRST RUNSUB
	LOAD(1,PROCZ,FORK,PROCES)
	ANDI 1,177777
	MOVEI FAILF,[ASCIZ /NO DRIVER FILE/]
	HRLI 1,400001
	HRROI 2,[ASCIZ /<SYSTEM>NETSER-DRIVERFILE/]
	GTJFN
	 JRST CANT
	MOVEM 1,DRFILE
	MOVE 2,[XWD 70000,100000]
	OPENF
	 JRST [	MOVE 1,DRFILE
		RLJFN
		 JFCL
		 JRST CANT]
	MOVE T1,DRTEXT
	HRLI T1,(<POINT 7,0>)
L1:	ILDB 2,T1
	JUMPE 2,L1E
	CAIN 2,"?"
	 JRST [	ILDB 2,T1
		CAIN 2,"?"
		 JRST .+1
		ANDI 2,37
		JRST .+1]
	BOUT
	JRST L1

L1E:	HRLI 1,400000
	CLOSF
	 HALT
	HRRZS 1
	MOVE 2,[XWD 70000,200000]
	OPENF
	 HALT
RUNSUB:	MOVEI FAILF,[ASCIZ /NO INTERMEDIATE FILE/]
	LOAD(1,PROCZ,FORK,PROCES)
	ANDI 1,177777
	HRLI 1,400001
	HRROI 2,[ASCIZ /<SYSTEM>NETSER-INTERMEDIATE/]
	GTJFN
	 JRST CANT1
	MOVEM 1,IFILE
	MOVE 2,[XWD 70000,100000]
	OPENF
	 JRST [	MOVE 1,IFILE
		RLJFN
		 JFCL
		JRST CANT1]
	MOVSI 1,(1B1)
	MOVEI FAILF,[ASCIZ /NO FORKS/]
	CFORK
	 JRST CANT2
	MOVEM 1,SUBFRK
	MOVEI FAILF,[ASCIZ /SUBSYS NOT FOUND/]
	MOVSI 1,100001
	HRRO 2,FILE
	GTJFN
	 JRST CANT2
	HRL 1,SUBFRK
	GET
	MOVE 1,SUBFRK
	MOVE 2,IFILE
	HRL 2,DRFILE
	SKIPGE 2
	HRLI 2,377777
	SPJFN
	SETZ 2,
	SFRKV
	WFORK
	KFORK
	SKIPG 1,DRFILE
	 JRST NODRF
	DELF
	 JFCL
	CLOSF
	 JFCL
NODRF:	MOVE 1,IFILE
	HRLI 1,400000
	CLOSF
	 HALT
	HRRZS 1
	MOVE 2,[XWD 70000,200000]
	OPENF
	 HALT
CPYLP:	MOVE 1,IFILE
	BIN
	JUMPE 2,[GTSTS
		TLNE 2,1000
		 JRST EOF
		SETZ 2,
		JRST CPYLP]
	MOVE 1,SJFN
	CAIN 2,37
	 JRST [	MOVEI 2,15
		BOUT
		MOVEI 2,12
		JRST .+1]
	BOUT
	JRST CPYLP

EOF:	MOVE 1,IFILE
	DELF
	 JFCL
	CLOSF
	 JFCL
	ZERO(T1,PROCZ,FAILRE,PROCES)
	JRST ENDD

CANT2:	MOVE 1,IFILE
	CLOSF
	 JFCL
CANT1:	SKIPL 1,DRFILE
	CLOSF
	 JFCL
CANT:	MOVE 1,SJFN
	HRROI 2,[ASCIZ /
SORRY, /]
	SETZ 3,
	SOUT
	HRRO 2,NAME
	SOUT
	HRROI 2,[ASCIZ / IS NOT AVAILABLE BECAUSE /]
	SOUT
	HRRO 2,FAILF
	SOUT
	STORE(FAILF,PROCZ,FAILRE,PROCES)
ENDD:	MOVE 1,RJFN
	CLOSF
	 JFCL
	MOVE 1,SJFN
	CLOSF
	 JFCL
	JRST END2

FAIL:	STORE(VREG,PROCZ,FAILRE,PROCES)
END2:	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

ROUTINE(DOSYSTAT)
CALL(DOSUBSYS,<<<[[ASCIZ /<SYSTEM>EXEC.SAV/]]>>,<<[[ASCIZ /SYSTAT/]]>>,<<[[ASCIZ /SYSTAT?_QUIT?_/]]>>>)
	ENDR

ROUTINE(XEFACT,,<CONNECT,CPU,ACCOUNT>,<<FACTBLK,40>>)
	ENDR

ROUTINE(DOUSRT,,,<SJFN,RJFN,FORKH,CUTOFF,TTYF,<FACS,20>,<FACT,20>,<CHNTAB,=36>,<LEVTAB,3>,INTPC,ST1>,<BLK,PROCES>)
	MOVEM 1,PROCES
	MOVSI T1,1+CHNTAB
	HRRI T1,CHNTAB
	SETZM CHNTAB
	BLT T1,=35+CHNTAB
	MOVEI T1,INTPC
	MOVEM T1,LEVTAB
	MOVSI T1,1
	HRRI T1,FKTRM
	MOVEM T1,=19+CHNTAB
	MOVEI 1,400000
	MOVSI 2,LEVTAB
	HRRI 2,CHNTAB
	SIR
	EIR
	MOVEI 2,1B19
	AIC
	CALL GETSKT
	CALL(DOICP,<<<	LOAD(T1,PROCZ,TASKP,PROCES)
			LOAD(T2,TASKZ,TJFN,T1)>,T2>,VREG,T1,PROCES>)
	 JRST FAIL
	MOVEI T1,[ASCIZ /COULD NOT GET FILE/]
	STORE(T1,PROCZ,FAILRE,PROCES)
	MOVEM VREG,RJFN
	MOVEM VREG+1,SJFN
	GDSTS
	MOVEM 3,1+FACS
	MOVEM 4,2+FACS
	LOAD(T1,PROCZ,TASKP,PROCES)
	LOAD(BLK,TASKZ,FORKSA,T1)
	LOAD(T2,TASKZ,TTYBIT,T1)
	MOVEM T2,TTYF
	MOVE 2,0(BLK)
	MOVSI 1,100001
	GTJFN
	 JRST NAV
	MOVEM 1,FORKH
	SETZ 1,
	CFORK
	 JRST [	MOVE 1,FORKH
		RLJFN
		 JFCL
		JRST NAV1]
	EXCH 1,FORKH
	HRL 1,FORKH
	GET
	HRLOI T1,377777
	STORE(T1,PROCZ,KILTIM,PROCES)
	MOVE 1,FORKH
	MOVSI 3,200000
	HRR 3,5(BLK)
	MOVE 2,3
	EPCAP
	SKIPN TTYF		; NEEDS TO RUN WITH A TTY?
	 JRST NOTTY
	MOVE 1,RJFN
	MOVE 2,SJFN
	ATPTY
	 JRST NAV0
	MOVEM 1,TTYF
	ASND
	 JFCL
	MOVE 1,TTYF
	MOVE 2,[XWD 52531,515125]
	MOVE 3,[XWD 252525,653000]
	SFCOC
	MOVE 2,[XWD 401002,4010]
	MOVE 4,2
	MOVE 3,[XWD 20040,100200]
	STABS
	MOVE 2,[XWD 60510,175120]
	SFMOD
	MOVE 2,TTYF
	HRL 2,2
	JRST SETPJF

NOTTY:	HRLZ 2,RJFN
	HRR 2,SJFN
SETPJF:	MOVE 1,FORKH
	SPJFN
	SKIPN 1,TTYF
	MOVE 1,SJFN
	HRROI 2,[ASCIZ /SUMEX-AIM /]
	SETZ 3,
	SOUT
	MOVE 2,2(BLK)
	SOUT
	HRROI 2,[BYTE (7)15,12,0]
	SOUT
	TIME
	ADD 1,4(BLK)
	MOVEM 1,CUTOFF
	MOVE 1,FORKH
	MOVEI 2,FACS
	SFACS
	MOVEI 2,0
	SFRKV
WLP:	MOVEI 1,=10000
	DISMS
EWLP:	MOVE 1,FORKH
	RFSTS
	HLRZ T1,1
	CAIN T1,2
	 JRST [	SETZ VREG,
		JRST DONE]
	CAIN T1,3
	 JRST [	MOVEI VREG,[ASCIZ /TASK CRASHED./]
		JRST DONE]
	MOVE 1,FORKH
	RUNTM
	CAML 1,2(BLK)
	 JRST [	MOVEI VREG,[ASCIZ /CPU ALLOTMENT EXCEEDED/]
		JRST DONE]
	TIME
	CAML 1,CUTOFF
	 JRST [	MOVEI VREG,[ASCIZ /CONNECT TIME EXCEEDED/]
		JRST DONE]
	JRST WLP

FKTRM:	MOVEM T1,ST1
	HRRZ T1,INTPC
	CAIG T1,EWLP
	CAIGE T1,WLP
	 JRST FKTRMX
	MOVE 1,[XWD 10000,EWLP]
	MOVEM T1,INTPC
FKTRMX:	MOVE T1,ST1
	DEBRK

NAV0:	MOVE 1,FORKH
	KFORK
	HRROI 2,[ASCIZ /NETWORK TERMINAL/]
	JRST NAVC

NAV1:	HRROI 2,[ASCIZ /FORKS/]
	JRST NAVC

NAV:	MOVE 2,0(BLK)
NAVC:	MOVE 1,SJFN
	SETZ 3,
	SOUT
	HRROI 2,[ASCIZ / NOT AVAILABLE.
/]
	SOUT
	MOVEI VREG,[ASCIZ /TASK NOT AVAILABLE/]
	JRST FINISH

DONE:	STORE(VREG,PROCZ,FAILRE,PROCES)
	CALL(XEFACT,<<<	TIME
			SUB VREG,CUTOFF
			ADD VREG,4(BLK)>,VREG>,<<
			MOVE 1,FORKH
			RUNTM>,VREG>,<<1(BLK)>>>)
	MOVE 1,FORKH
	KFORK
	JRST FINI1
FINISH:	STORE(VREG,PROCZ,FAILRE,PROCES)
FINI1:	SKIPE 1,TTYF
	 JRST [	DOBE
		RELD
		 JFCL
		JRST FAIL1]
	CALL(CLRJFN,<<<MOVE .A.,RJFN>,.A.>>)
	CALL(CLRJFN,<<<MOVE .A.,SJFN>,.A.>>)
	JRST FAIL1

FAIL:	STORE(VREG,PROCZ,FAILRE,PROCES)
FAIL1:	ZERO(T1,PROCZ,KILTIM,PROCES)
	HALTF
	ENDR

; MAIN PROGRAM

START:	TDZA 1,1
REENT:	MOVNI 1,1
	MOVEM 1,DTACHF
	MOVE P,[XWD -LPDL,PDL-1]
	MOVE FREG,P
MLOOP:	RESET
	MOVEI 1,400000
	RPCAP
	IORI 3,600000
	EPCAP
	MOVE 1,LOGDES
	MOVEM 1,TTYJFN
	MOVEI 1,400000
	MOVE 2,[XWD 400000,400000]
	SKIPE DTACHF
	 SPJFN
IFN PRIVATE,<MOVEI 1,16
		MOVEM 1,SKTCNT>
IFE PRIVATE,<SETZM SKTCNT>
	GTAD
	JUMPL 1,[MOVEI 1,=10000
		DISMS
		JRST .-1]
	MOVE 1,[SIXBIT /NETRDY/]
	SYSGT
	JUMPGE 1,[MOVEI 1,=10000
		DISMS
		JRST .-2]
	CALL(LOGMESSAGE,<<<[POINT 7,[ASCIZ \NETSER 3.3 7/19/72 IN OPERATION\]]>>>)
	MOVE T1,[XWD TASKS,TASKS]
	MOVEM T1,TASKS
	MOVE T1,[XWD PRLST,PRLST]
	MOVEM T1,PRLST
	MOVE T1,[XWD FRELST,FRELST]
	MOVEM T1,FRELST
	MOVEI 15,FRESTO
IFRELP:	CALL(RELEASE,15)
	ADDI 15,ITMSIZ
	CAIGE 15,FRESTO+NFREE*ITMSIZ
	 JRST IFRELP
	MOVEI T1,BLKSTO
	MOVEM T1,FREBLK
	CALL(INITTASKS,<<<[
XWD -5,[[	SIXBIT /LOGGER/
		1
		DOLOG
		=10
		1]
	[	SIXBIT /NLOGER/
		=23
		DONLG
		=10
		1]
	[	SIXBIT /DATE/
		15
		DODATE
		=10
		1]
	[	SIXBIT /ECHO/
		7
		DOECHO
		=10
		0]
	[	SIXBIT /CPYNET/
		=69
		DOCOPY
		=10
		1]
	[	SIXBIT /SYSTAT/
		=13
		DOSYST
		=10
		1]]]>>>)
	CALL(IUSRT)		; INIT USER TASKS
	CALL(SETINT)

MLP1:	MOVE 1,[SIXBIT /NETRDY/]
	SYSGT
	JUMPGE 1,IMPDED
	CALL(SCNTSK)
	CALL(SCNPRC)
	CALL WATINT
	JRST MLP1

IMPDED:	CALL(LOGMESSAGE,<<<[POINT 7,[ASCIZ /IMP DOWN -- NETSER RESTART/]]>>>)
	MOVEI 1,=30000
	DISMS
	JRST MLOOP

LOGDES:	377777

LIT
VAR
TOPPAG:	./1000
END START
