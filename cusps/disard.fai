00100	TITLE ARDS STORAGE TUBE DISPLAY
00200	
00300	;ARDS CODE
00400	
00500	PHASE 0			;START PHASING ALL CODE
00600	
00700	BLOCK PCHBRK		;LEAVE ROOM FOR LANGUAGE PART
00800				;EXCEPT FOR THE DISPLAY NUMBER AND NAME
00900	
01000	
01100		3		;DISPLAY NUMBER
01200		SIXBIT /ARDS/	;AND A NAME FOR IT.
01300	
01400	DISPATCH		;GENERATE DISPATCH TABLE.
01500	
01600	SMID _ <1080.0>		;SIZE OF SQUARE SCREEN
01700	SMIDH _ <540.0>		;HALF-SIZE
01800	YVIEW _ <1.309>
01900	XVIEW _ <1.0>
02000	
02100	;MAGIC NUMBERS FOR THE CHARACTERS ON THIS BEAST.  IT TURNS OUT
02200	;THAT THE CHARACTER SIZES ARE COMPLETELY UNRELATED TO THE COORDINATE
02300	;SYSTEM USED FOR DRAWING VECTORS.  THIS IS A GREAT GREAT NUISANCE.
02400	
02500	CCHW _ <11.294>		;CHARACTER WIDTH
02600	CCHH _ <14.69>		;CHARACTER HEIGHT
02700	
02800	
02900	DISNUM__3		;DISPLAY SEGMENT NUMBER 3.
03000	
03100	
03200	;MISCELLANEOUS DATA AREAS.
03300	
03400		XR (LEFTM)
03500		XR (.COD3)
03600		XR (IX)
03700		XR (TXTSCAL)
03800	
03900		XR (CYBEAM)		;BEAM LOCATION DURING INTERP.
04000		XR (CXBEAM)
04100		XR (MODE)		;MODE TERMINAL IS IN.
04200	
04300	ENQTAB:	1.0		;YES -- IT IS A STORAGE TUBE
04400		0.0		;NO THREE-D HARDWARE
04500		0.0		;NO TABLET (YET)
04600		0.0		;NO KEYS
04700		SMID		;NUMBER OF POINTS IN VIEWPORT OF 1.
04800		6.375		;NUMBER OF INCHES IN VIEWPORT OF 1.
04900		XVIEW		;X VIEWPORT MAX.
05000		YVIEW		;Y VIEWPORT MAX.
05100	
05200	CHARTB:  BEGIN CHARACTER 
05300		N__0
05400		Y__3
05500		T__1		;TRANSLITERATE
05600	
05700		BYTE (2) N,N,N,N,N,N,N,N,N,N,Y,N,N,Y,N,N,N,N	; 0-21
05800		BYTE (2) N,N,N,N,N,N,N,N,N,N,N,N,N,N,Y,Y,Y,Y	; 22-43
05900		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 44-65
06000		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 66-107
06100		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 110-131
06200		BYTE (2) Y,Y,N,Y,Y,Y,N,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 132-153
06300		BYTE (2) Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y,Y	; 154-175
06400		BYTE (2) Y,N					; 176-177
06500		BEND
06600	
06700	
06800	
06900	; ....
07000	
07010	
07030	QRAST:
07140	
09800	QINT:	POP	P,A		;ADJUST STACK.
09900		JRST	@.RET(S)	;RETURN ....
10000	
10100	
10200	;QTEXT 	CALLED FROM LANGUAGE FOR EACH CHARACTER TO OUTPUT.
10300	;	A HAS CHARCTER
10400	;	A=-1 	START STRING
10500	;	A=-2	END STRING
10502	; ALL ACCUMULATORS CONSIDERED VOLATILE.  MAY BE DESTROYED.
10600	
10700	QTEXT:	CAME	A,[-1](S)	;START OF STRING?
10800		 JRST	 NOTBEG(S)	;NO
10810		SKIPGE	A,TSCAL(R)		;GET SCALE PARM
10813		 TLZA	 TEXTON		;IF USER WANTS TEXT ONLY IN WINDOW.
10816		 TLO	 TEXTON
10819		MOVE	A,[CCHW](S)	;CHARACTER WIDTH.
10822		MOVE	E,[PUSHJ P,CODE2(S)](S) ;GET INSTRUCTION.
10825		MOVE	F,[PUSHJ P,CONV2(S)](S)
10828		TLNE	LAST3D		;IF LAST POSITION WAS 3-D
10831		 JRST	 [FDVR A,.X3M(R) ;GET NORMALIZED VIEWPORT COORD
10834			  FMPR A,.ZBEAM(R) ;AND FIX FOR THIS DEPTH.
10837			  TRC E,CODE2CODE3 ;CHANGE TO TEST CODE3.
10840			  TRC F,CONV2CONV3 ;CHANGE TO POSITION WITH CONV3
10843			  JRST .+2(S)](S)
10846		FDVR	A,.XPM(R)	;CONVERT TO PAGE COORDINATES.
10849		MOVEM	A,CHARW(R)	;AND SAVE.
10852		FMPR	A,[1.19975](S)  ;MULTIPLY BY 13.55/11.294
10855		MOVEM	A,BOXW(R)	;BOX WIDTH.
10858		MOVEM	E,CHART(R)	;CHARACTER TEST ROUTINE.
10861		MOVEM	F,CHARP(R)	;AND CHARACTER POSITION ROUTINE.
10864		MOVE	A,[CCHH](S)	;GET CHARACTER HEIGHT
10867		TLNE	LAST3D		;IF LAST POINT INSTRUCTION WAS 3D.
10870		 JRST	 [FDVR A,.Y3M(R) ;GET NORMALIZED VIEWPORT
10873			  FMPR A,.ZBEAM(R) ;AND FIX FOR DEPTH.
10876			  JRST .+2(S)](S)
10879		FDVR	A,.YPM(R)	;CONVERT TO PAGE COORDINATES.
10882		MOVEM	A,CHARH(R)	;AND SAVE.
10885		FMPR	A,[1.9251](S)	;CONVERT TO BOX HEIGHT
10888		MOVEM	A,BOXH(R)	;AND SAVE IT.
10900		MOVE	A,.XBEAM(R)	;GET CURRENT BEAM POSITION
11000		MOVEM	A,LEFTM(R)	;SAVE AS LEFT MARGIN.
11100		TLO	FTEMP1		;WE HAVE NOT YET PUT OUT A CHAR.
11200		TLZ	DISIFY		;IN CASE WE NEEDA POINT-MODE INSTRUCTION.
11300		JRST	QREN(S)		;INITIALIZE STORAGE.
11400	
11500	NOTBEG:	TLNE	A,-1		;CHARACTER?
11600		 JRST	 ENDC(S)	;END STRING.
11700		CAIN	A,15		;CARRIAGE RETRUN
11800		 JRST	 CR(S)
11900		CAIN	A,12
12000		 JRST	 LF(S)		;LINE FEED.
12100		PUSH	P,A		;SAVE CHAR.
12200		MOVE	B,.XBEAM(R)	;GET CURRENT BEAM
12300		MOVE	C,.YBEAM(R)	;
12400		MOVE	D,.ZBEAM(R)	;
12500		XCT	CHART(R)	;GET CHARACTER TEST.
12600		JUMPN	A,TXT0(S)	;NOT VISIBLE.
12700		FADR	B,BOXW(R)
12800		FADR	C,BOXH(R)	;SEE IF UPPER RIGHT HAND CORNER TOO
12900		XCT	CHART(R)	;CHARACTER TEST.
13000	TXT0:	MOVE	B,.XBEAM(R)
13100		MOVE	C,.YBEAM(R)	;GET BEAM COORDS BACK.
13200		XCT	CHARP(R)	;GET CHARACTER POSITION.
13300		JUMPN	A,TRYTXT(S)	;NOT ON SCREEN -- SEE WHAT USER WANTS.
13400	TXT1:	ADDI	C,=13		;MUST POSITION Y-BEAM IN FUNNY SPOT
13500		CAMN	B,.IXBEAM(R)	;IF BEAM NEEDS MOVING,
13600		CAME	C,.IYBEAM(R)	;THEN DO IT:
13700		 JRST	 [PUSHJ P,ENDC(S) ;DUMP ANY CHARACTERS.
13800			  PUSHJ P,PGEN(S) ;PUT OUT POINT-MODE INSTRUCTION.
13900			  JRST .+1(S)](S) ;AND REJOIN CODE.
14000	
14100	CC:	;TLZN	FTEMP1		;ARE CHARACTERS GOING YET?
14200	;	 JRST	 CC1(S)		;YES
14300	;	MOVE	A,TXTSCAL(R)	;GET SCALE SIZE.
14400	;	HRLI	A,%OSCL		;SET SCALE.
14500	;	PUSHJ	P,STOBYT(S)
14600	CC1:	SKIPN	.COD1(R)	;ENOUGH ROOM?
14700		 PUSHJ	 P,QTST(S)	;NO -- MAKE SOME.
14800		SOS	.COD1(R)	;NOW ONE LESS CHAR.
14900		MOVE	A,(P)		;GET CHARACTER
15000		IDPB	A,.COD2(R)	;STORE IT AWAY.
15100	UPDT:	MOVE	A,BOXW(R)	;NOW UPDATE BEAM POSITION.
15200		FADM	A,.XBEAM(R)	;BUMP XBEAM
15300		MOVEI	A,=13		;HUM HUM .. THIS SHOULD BE 13.55
15400		ADDM	A,.IXBEAM(R)	;AND IXBEAM
15500		JRST	POPAJ(S)	;POP OFF STACK AND RETURN.
15600	
15700	TRYTXT:	TLNE	TEXTON		;DOES HE WANT IT ON?
15800		 JRST	 UPDT(S)	;YES -- RETURN WITHOUT DISPLAYING.
15900		JUMPL	B,UPDT(S)	;SEE IF OFF SCREEN.
16000		JUMPL	C,UPDT(S)
16100		CAIG	B,=1400		;OR AT TOP.
16200		CAILE	C,=1400
16300		 JRST	 UPDT(S)
16400		JRST	TXT1(S)		;NO -- RETURN AND DISPLAY IT.
16500	
16600	LF:	MOVN	A,BOXH(R)	;DECREMENT YBEAM
16700		FADM	A,.YBEAM(R)
16800		JRST	ENDC(S)		;AND DUMP BUFFER.
16900	
17000	CR:	MOVE	A,LEFTM(R)	;GET MARGIN
17100		MOVEM	A,.XBEAM(R)	;STORE IT AND DUMP CHARACTERS
17200	
17202	
17204	;SUBROUTINE TO DUMP CHARACTER BUFFER.
17206	; CLOBBERS A; CAREFULLY PRESERVES B,C
17208	
17300	ENDC:	MOVE	A,.COD1(R)	;SEE HOW MANY BYTES REMAIN
17400		CAIN	A,4		;IF SOME ARE ALREADY STORED,
17500		 POPJ	 P,
17600	QTST:	PUSH	P,B		;SAVE X COORDINATE IN CASE STOBYT CLOBBERS
17650		PUSH	P,C		;Y COORDINATE
17675		MOVE	A,.COD3(R)	;PICK UP WORD OF BYTES.
17700		TLZ	A,740000	;INSTALL OP-CODE
17800		TLO	A,%OTXT
17900		PUSHJ	P,STOBYT(S)	;AND STORE IT.
17902		POP	P,C
17904		POP	P,B		;RESTORE COORDINATES
18000	QREN:	MOVEI	A,4		;THIS MANY BYTES.
18100		MOVEM	A,.COD1(R)	;
18200		MOVE	A,[POINT 8,.COD3(R),3](S) ;NEW POINTER.
18300		MOVEM	A,.COD2(R)
18400		SETOM	.COD3(R)	;NO ACCUMULATED CHARACTER.
18500		POPJ	P,		;DONE.
     

00100	
00200	
00300	;ROUTINES FOR ACTUALLY TYPING THINGS AT THE TERMINAL.
00400	
00500	IFN 1,< ;DEBUGGING STUFF
00600	
00700	DEFINE OUTP (X) <
00800		PUSH	P,X
00900		PUSHJ	P,TYP(S)	;TYPE IT
01000	>
01100	
01200	;ROUTINE TO COMPUTE EVEN PARITY AND TYPE THE CHARACTER.
01300	; CLOBBERS AC 'E'
01400	
01500	TYP:	PUSH	P,A		;SAVE AN AC.
01600		MOVE	A,-2(P)		;CHARACTER
01700		ANDI	A,177		;SEVEN BITS.
01800		MOVEI	E,(A)		;GET ANOTHER COPY.
01900		LSH	E,-4		;SHIFT 4 BITS.
02000		TRC	E,(A)		;XOR CHARACTER WITH SHIFTED CHARACTER.
02100		TRCE	E,14
02200		TRNN	E,14
02300		TRC	A,200		;COMPLEMENT PARITY BIT.
02400		TRCE	E,3
02500		TRNN	E,3
02600		TRC	A,200
02700		JRST TERM(S)
02800		TTCALL	3,[ASCIZ /OUTPUT: /](S)
02900		A+012000000000
03000		TTCALL	3,[ASCIZ /
03100	/](S)
03200		JRST	NOTERM(S)
03300	TERM:	TTCALL 15,A		;OUTPUT IN IMAGE MODE.
03400	NOTERM:	POP	P,A
03500		SUB	P,[XWD 2,2](S)
03600		JRST	@2(P)		;RETURN.
03700	
03800	>
03900	
04000	
04100	MOD0:	SKIPN	MODE(R)		;SEE WHAT MODE
04200		 POPJ	 P,
04300		MOVEI	D,0		;GET OUT...
04400		JRST	MODGO(S)
04500	GETGS:	SKIPA	D,[35](S)	;GET 4-BYTE MODE.
04600	GETRS:	MOVEI	D,36		;GET 2-BYTE MODE.
04700		CAMN	D,MODE(R)	;ARE WE ALREADY IN CORRECT MODE?
04800		 POPJ	P,		;YES
04900	MODGO:	OUTP	<D>		;SEND THE CORRECT ENTERING CODE.
05000		MOVEM	D,MODE(R)	;AND SAVE IT.
05100		POPJ	P,
05200	
05300	CURSOR:	SKIPE	A,CURMOV(R)	;GET THE CURSOR POSITION.
05400		PUSHJ	P,INTERP(S)	;INTERPRET IT.
05500		MOVEI	A,3		;GET TEXT SCALE BACK.
05600		PUSHJ	P,DSCL(S)	;BY INTERPRETING APPROPRIATELY.
05700		JRST	MOD0(S)		;AND RETURN TO MODE 0.
05800	
05900	
06000	ERASE:	SETZM	MODE(R)		;SAFETY FACTOR.
06100		OUTP	<[14](S)>	;PRINT ERASE CODE
06200		MOVEI	C,1		;SLEEP FOR 1 SECOND.
06300		CALLI	C,31		;SLEEP ZZZZZZZZZZZ WHILE BLINDING GREEN FLASHES
06400		POPJ	P,
06500	
06600	
06700	INTERP:	MOVE	C,MODE(R)	;FOR REFERENCE
06800		LDB	B,[POINT 4,A,3](S) ;GET OP-CODE
06900		ADDI	B,(S)		;RELOCATE
07000		JRST	@DISP(B)	;DISPATCH
07100	
07200	DISP:	XWD S,DHLT		;HALT (END OF BLOCK)
07300		XWD S,DMOV		;MOVE
07400		XWD S,DMOV		;DOT
07500		XWD S,DDRW		;DRAW
07600		XWD S,DTXT		;TEXT
07700		XWD S,DSCL		;SCALE INFO
07800	
07900	DHLT:	AOS	(P)		;SKIP RETURN TO CALLER.
08000		POPJ	P,		;LIKE SO.
08100	
08200	TMIT:	MOVEI	D,100		;TRANSMIT COORDS IN B.
08300		SKIPGE	B
08400		 TRO	 D,1		;SIGN BIT.
08500		MOVMS	B		;GET MAGNITUDE
08600		ANDI	B,1777		;SAVE ONLY A FEW BITS
08700		DPB	B,[POINT 5,D,34](S)
08800		OUTP	D
08900		LSH	B,-5
09000		TRO	B,100		;SAY INTENSIFY
09100	;	TLNN	FTEMP		;INTENSIFY?
09200	;	 TRO	 D,40		;NO
09300		OUTP	B		;SECOND PART.
09400		POPJ	P,
09500	
09600	DMOV:	PUSHJ	P,GETGS(S)	;SET-POINT MODE.
09700		LDB	B,[POINT 11,A,17](S) ;GET X
09800		SUBI	B,=540		;RELOCATE TO CENTER
09900		PUSHJ	P,TMIT(S)	;TRANSMIT.
10000		HRRZ	B,A		;Y
10100		SUBI	B,=707		;SUBTRACT SO SIGN EXTENDS
10200		PUSHJ	P,TMIT(S)	;AND TRANSMIT IT.
10300		LDB	B,[POINT 4,A,3](S) ;GET OP CODE AGAIN.
10400		CAIE	B,%ODOT/40000	;DOT ?
10500		 JRST	 STOVAL(S)	;NO -- STORE BEAM LOCN.
10550		PUSHJ	P,STOVAL(S)	;SAVE CXBEAM, CYBEAM
10600		ADDI	A,1		;YES -- ARRANGE SHORT VECTOR.
10700	DDRW:	PUSHJ	P,GETRS(S)	;GET CORRECT MODE
10800		HRRZ	C,A		;GET Y COORDINATE.
10900		SUB	C,CYBEAM(R)
11000		PUSH	P,C		;SAVE DELTA Y.
11100		LDB	B,[POINT 11,A,17](S)
11200		SUB	B,CXBEAM(R)	;COMPUTE DIFFERENCE
11300		PUSH	P,B		;SAVE DELTA X.
11400		MOVMS	C
11500		MOVMS	B
11600		CAIGE	B,1777		;CANNOT SEND A DELTA OF > 10 BITS.
11700		CAILE	C,1777		;...
11800		 JRST	 HARD(S)	;IT WILL BE HARDER.
11900		POP	P,B		;GET DELTA X COORD BACK.
12000		PUSHJ	P,TMIT(S)
12100		POP	P,B		;GET DELTA Y COORD BACK.
12200		PUSHJ	P,TMIT(S)
12300	STOVAL:	HRRZM	A,CYBEAM(R)	;SAVE Y BEAM LOCN.
12400		TLZ	A,740000
12500		HLRZM	A,CXBEAM(R)	;AND X BEAM LOCN.
12600		POPJ	P,		;NO -- FINISHED.
12700	HARD:	POP	P,B		;DELTA X COORDINATE.
12800		ASH	B,-1		;DIVIDE BY 2.
12900		ADD	B,CXBEAM(R)	;HERE IS WHERE TO GO.
13000		POP	P,C		;DELTA Y COORDINATE.
13100		ASH	C,-1		;DIVIDE BY 2
13200		ADD	C,CYBEAM(R)	;AND HERE IS WHERE TO GO.
13300		PUSH	P,A		;SAVE ORIGINAL DESTINATION.
13400		HRLZ	A,B		;GET FUDGED X
13500		HRR	A,C		;AND FUDGED Y.
13600		PUSHJ	P,DDRW(S)	;GO DRAW THEM.
13700		POP	P,A		;NOW DO THE CORRECT THING.
13800		JRST	DDRW(S)		;AGAIN WITH DDRW.
13900	
14000	DSCL:
14100	IFN 0,<				;*** NOT ALL ARDS HAVE THIS ***
14200		PUSHJ	P,GETGS(S)	;GET MODE.
14300		OUTP	<[45](S)>
14400		MOVEI	B,-3(A)		;B IN RANGE 0-3
14500		LSH	B,3
14600		TRO	B,100-3(A)	;AND PUT IN ANOTHER COPY.
14700		OUTP	B
14800	>
14900		POPJ	P,
15000	
15100	
15200	
15300	DTXT:	PUSHJ	P,MOD0(S)	;GET IT IN SINGLE-BYTE MODE.
15400		ROT	A,4		;GET RID OF STUFF.
15500		MOVEI	D,4
15600	DTXL:	MOVEI	B,0
15700		ROTC	A,8		;GET FIRST CHARACTER IN B
15800		CAIN	B,377		;ALL 1'S ?
15900		 POPJ	 P,		;YES -- FINISHED.
16000		OUTP	<B>		;PRINT IT.
16100		SOJG	D,DTXL(S)	;LOOP FOR MORE.
16200		POPJ	P,		;DONE....
16300	
16400	
16500	QEVENT:	SUB	P,[XWD 2,2](S)
16600	QOUT:	ERR	<NO SUCH OPERATION>,13
16700		JRST	QINT(S)		;AND DISCARD
16800	
17000	QCODE:	PUSHJ	P,TYP(S)	;TYPE THE CHARACTER
17100		JRST	@.RET(S)	;AND RETURN.
17200	
