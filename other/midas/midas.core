.qmtch==1
if1,[
ifndef	cachel,cachel== 20
ifndef	vers1,vers1== 0
ifndef	vers2,vers2== 0
ifndef	vers3,vers3== 0
ife vers1+vers2+vers3,[
	printx	|No version specified; assuming core already saved (version 2)|
	vers2== 1]
define	v1
ifn vers1!termin
define	v2
ifn vers2!termin
define	v3
ifn vers3!termin
define	v12
ifn vers1+vers2!termin
define	v23
ifn vers3+vers2!termin
define	v13
ifn vers1+vers3!termin

printx	/
Assembling version /
v1,[
vers1== 1
printx /1 (no saved core)
/]
v2,[
vers2== 1
printx /2 (core already saved)
/]
v3,[
vers3== 1
printx /3 (Main routines in Hi core to be saved)
/]

ifg vers1+vers2+vers3-1,.fatal Too many versions specified

v2,[
define	defrtn rtn
rtn=:	coradr+.irpcnt
termin
coradr== 320000
];v2

maxuuo==0

define uuolis foo		;This will accumulate a list of UUOS.
foo				;it is bascially a string variable.
termin

define adduuo newuuo		;This used to add a uuo to the list
uuolis [define uuolis foo
foo]newuuo
termin
termin

pstin=	jsys	611

define	defuuo	name,routin

if1,[
ifb	routin,	adduuo	.!name
ifnb	routin,	adduuo	routin
maxuuo==maxuuo+1
name=	maxuuo_33
]
termin

define	asc &str
[asciz str]termin

define	ptr str
[440700,,str]termin

define	point	#size#?addr?#pos#
ifb pos,[44_]ifnb pos,[<43-pos>_]30.+size_24.+addr!termin

define	fld	byte?field
<.dpb byte,.bp field>termin

define bit (num)
<1_<35.-num>>termin

define	setint	lev,chn,bits

	movei	1,400000
	move	2,[lev,,chn]
	sir
	eir
	move	2,[bits]
	aic
termin

define	.ati	#code,chn

	move	1,[code,,chn]
	ati
termin

define	rscan	cond
	backup	[100]
	pbin
ifb	cond,	caie	1,40
ifnb	cond,	cai!cond	1,40
termin

ifndef	p,p=17
ifndef	pdlen,pdlen==100

call=	pushj	p,
ret=	popj	p,
save=	push	p,
rest=	pop	p,

	defuuo	print
	defuuo	tmsg
	defuuo	uerr
	defuuo	ttnout
	defuuo	dofrk
	defuuo	backup

nfatal=	uerr	0,
pfatal=	uerr	1,
sfatal=	uerr	2,
fatal=	uerr	3,
nwarn=	uerr	4,
pwarn=	uerr	5,
swarn=	uerr	6,
warn=	uerr	7,

v2,[
define	rcore
rdcore:	movei	1,.fhslf
	gevec
	save	2
	movsi	1,(gj%old\gj%sht)
	hrroi	2,asc |<rubenstein>core.sav|
	gtjfn
	 jrst [	save	1
		hrroi	1,asc |
Can't get core.  Send a note to Rubenstein.
|
		psout
		rest	2
		movei	1,.priou
		setz	3,
		erstr
		 jfcl
		 jfcl
		haltf
		jrst	rdcore]
	hrli	1,.fhslf
	get
	rest	2
	movei	1,.fhslf
	sevec
	movei	1,"%"
	movem	1,eschar
	movei	1,deftab
	movem	1,esctab
	movei	1,.priou
	movem	1,priou
	setzm	acflgs
	ret
termin
];v2

define	$start
v3,printx	/You shouldn't do $start in version 3!!!/
v2,	rcore
v1,[	intern	.uuos,	start
	.require	core.rel
	.fnam1];v1

start:	reset
	move	p,[-pdlen,,pdl-1]
v2,	call	rdcore
ifndef	nrcrd,	call	record
termin

define	uuos
.uuos:	maxuuo
	uuolis
termin

define	core
irps routin,,[.ttnout:.tmsg:.dofrk:.print:.uerr:.backup:.uuoh:confrm:encap:cpopj:skpret:deftab:.crlf:newlin:record:getyn:savacs:resacs]
	defrtn	routin
termin
termin

define	$end
v2,[	
oloc==.
	loc	114
	.fnam1
	.uuos
	loc	41
	call	.uuoh
	loc	oloc
	core
];v2
v12,[
if1,ifndef pdl,	pdl:	block	pdlen ? .pdlp==1
if2,ifdef .pdlp,pdl:	block	pdlen
	uuos
];v12
oloc==.
	loc	326000
pnam:	block	2
eschar:	block	1
esctab:	block	1
priou:	block	1
acflgs:	block	1
cachec:	block	1
cache:	block	cachel
cacheu:	block	cachel
cachev:	block	cachel

acs:	block	20.*36.
	loc	oloc
v12,[
lits:	constants
vars::	variables
endp:
];v12
termin ]
