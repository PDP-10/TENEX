00100	The Do program:
00200	  The DO program reads a text file and puts the characters from
00300	the file into your tty input buffer.  Then the
00400	program exits, and the system continues with the
00500	new tty input.
00600		The file must be edited by SOS and then exited leaving
00700	the line numbers in the file.  The file format:
00800		<break chars> <command name>
00900		<command text>
01000		<more text>
01100		...
01200		<break chars> <next command name>
01300		...
01400		<break chars>	(on last line of file)
01500	The break chars are currently 4 #'s.  The command name
01600	is an alpha name from 1-5 chars, in UPPER case.  
01700		The command text is put into the tty input buffer
01800	exactly as-is, with the following exceptions:
01900	Carriage returns, line-feeds, tabs, and
02000	SOS line numbers  are ignored.
02100	A number of special purpose characters are interpreted differently.
02200	
02300		DO recognizes the following special purpose characters
02400	and makes the following conversions:
02500	
02600		<CR>	IGNORED.
02700	
02800		<LF>	IGNORED.
02900	
03000		/	INSERT A <CR> AT THIS POINT(THE MONITOR
03100			USUALLY ECHO'S THIS AS <CR><LF>).
03200	
03300		-	INSERT AN <LF> AT THIS POINT.
03400	
03500		$	INSERT AN ALTMODE.
03600	
03700		&	INSERT A DELAYED ^C.
03800			This doesnt work right.
03900	
04000		+	ADD CTRL BIT TO THE NEXT CONVERTED CHARACTER.
04100			(Actually, subtract octal 100 from the octal value.)
04200	
04300		%	The text between any two %'s will be printed
04400			while the DO program is compiling the file. (Useful
04500			for comments.  None of the text between the %'s is 
04600			put into the input stream.)  If the last char of the 
04700			comment is "=", then the DO program waits for
04800			teletype input (typed by the user), and inserts
04900			the input directly into the stream (unconverted).
05000			(Keep pairs of %'s on the same line.)
05100	
05200		=	QUOTE THE NEXT CHARACTER.(PASS IT WITH NO CONVERSION.)
05300			(Needed only for all the special characters.)
05400	
05500	
05600	RUNNING DO:
05700	
05800		If you say "do <command name>", DO will read in the
05900	file called "DO.CMD" on your area, and do the 
06000	command text which follows that command name.
06100		If you say "do .<filename> <command name>", DO
06200	will read in the file called filename, and look for
06300	the command name on that file.
06400	
06500	Example:
06600	  A typical DO.CMD file:
06700	####D
06800	da/
06900	####TE
07000	te dm/
07100	te nvt/
07200	####FAIL
07300	fail/foo.r_%File=%/
07400	e!/
07500	link10/foo.r/=/g/s/
07600	####
07700	
07800	"do d<carriage return>"  would load the input buffer with 
07900	  "da<cr>"  and exit.
08000	"do TE<cr>"  would change terminal characteristics.
08100	"do fail<cr>"  would ask for a filename,
08200	  then compile the file with fail,
08300	  load it with link10, and start its execution.
08400	
08500	Notes:
08600		The current version is DOO, due to conflict with
08700	a system program called DO.
08800		Remember to leave the line numbers in, after editing the
08900	command file with SOS.
09000		The command name typed to the program can be in either
09100	upper or lower case.  In is converted to upper case by the DO
09200	program, and then matched against the upper case commands in the
09300	command file.
09400		The control chars such as control-c and control-t
09500	that are formed by + are immediately gobbled up
09600	by the monitor when they are put into the tty input
09700	buffer.  This means that a control-c is immediate, and
09800	doesnt do what you would want.
09900		The program is currently an ephemeral, which means
10000	that it runs in a special core space, and doesnt clobber
10100	your current core space.  This means if you are running
10200	lisp, and want to input a standard sexpr from a file,
10300	you can do it without clobbering lisp.
10400		The current maximum tty input string (after the
10500	command text has been converted) is 119 characters.
