
(LAP SYMDEF FSUBR) 
       (PUSH P 1) 
 TAG1  (MOVE 1 0 P) 
       (JUMPE 1 TAG3) 
       (HLRZ@ 1 0 P) 
       (PUSH P 1) 
       (CALL 1 (E *GETSYM) S) 
       (MOVEI 3 (QUOTE SYM) S) 
       (MOVE 2 1) 
       (POP P 1) 
       (CALL 3 (E PUTPROP) S) 
       (HRRZ@ 1 0 P) 
       (MOVEM 1 0 P) 
       (JRST 0 TAG1) 
 TAG3  (MOVEI 1 (QUOTE NIL)) 
       (SUB P (C 1 0 1 0)) 
       (POPJ P) 
       NIL 

(LAP SYMOFF FSUBR) 
       (PUSH P 1) 
 TAG1  (MOVE 1 0 P) 
       (JUMPE 1 TAG3) 
       (HRRZ@ 1 0 P) 
       (HLRZ@ 1 1) 
       (PUSH P 1) 
       (HLRZ@ 1 -1 P) 
       (CALL 1 (E *GETSYM) S) 
       (HRRZ@ 2 -1 P) 
       (HRRZ@ 2 2) 
       (HLRZ@ 2 2) 
       (CALL 2 (E *PLUS) S) 
       (MOVEI 3 (QUOTE SYM) S) 
       (MOVE 2 1) 
       (POP P 1) 
       (CALL 3 (E PUTPROP) S) 
       (HRRZ@ 1 0 P) 
       (CALL 1 (E CDDR) S) 
       (MOVEM 1 0 P) 
       (JRST 0 TAG1) 
 TAG3  (MOVEI 1 (QUOTE NIL)) 
       (SUB P (C 1 0 1 0)) 
       (POPJ P) 
       NIL 

(OPS A 1 B 2 C 3 R 13)
(OPS JFCL 255000 ILDB 134000 IDPB 136000 
	IDIV 230000 $ODTIM 220 $RUNTM 15 SETOM 476000
	DBLQT 42 HRLZI 515000 HRROI 561000 SETZM 402000 SKIPN 336000
	$ODCNV 222 $RAND 612 $DIRST 41 $GJINF 13 $JFNS 30 SUBI 275000
	SKIPE 332000]

(DEPOSIT 116 (EXAMINE (EXAMINE 770001]

(SYMDEF FNAREA DFAREA READP1 FIX1A MAKNUM INUM0 PRINTA 
	GETAD GETCH GETFN PUTAD PUTCH PUTFN)


Defines channel table as in TNXLSP.MAC, p 22.
(OPS CHNAM 0 CHSYS 1 CHFLAG 2 CHEOF 3 CHBUF 4 CHALT 5 CHCHAR 6 CHCTR 7 CHPTR 10
	CHOCH 11 CHLL 11 CHPAGE 12 CHLCT 12 CHLINE 13 CHFN 14)
(OPS TLNN 607000 BLT 251000 HRLI 505000]



Returns time of day as a LISP string.
One optional arg, the bits to pass along to ODTIM
(LAP DAYTIME FSUBR)
	(JUMPE A NOARG)		if no arg given, use default
	(HLRZ A 0 A)
	(CALL 1 (E EVAL) S)	eval car of arg
	(PUSHJ P NUMVAL)	get it as integer
NOARG
	(SKIPN C A)
	(HRLZI C 200001)	our defaults
	(MOVE A (C 440700 0 FNAREA 0))
	(MOVEM A DFAREA)	set pointer
	(MOVEI 5 DBLQT)		leading double quote
	(IDPB 5 A)
	(SETOM 0 B)
	(JSYS 0 $ODTIM)		expand date and time
	(IDPB 5 A)		trailing double quote
	(MOVEI A GETBYT)
	(JRST 0 READP1)		read up and return string
GETBYT
	(ILDB A DFAREA)
	(POPJ P 0)
	NIL

Return connect time in seconds.  No args
(LAP CONNECT-TIME SUBR)
	(HRROI A -5)
	(JSYS 0 $RUNTM)		get connect time for job
	(IDIV C B)		convert to seconds
	(MOVE A C)
	(JRST 0 FIX1A)		return value
	NIL

Return time in seconds since midnight. No args.
(LAP LOCAL-TIME SUBR)
	(SETOM 0 B)
	(SETZM 0 4)	
	(JSYS 0 $ODCNV)		get time
	(HRRZ A 4)
	(JRST 0 FIX1A)		return it
	NIL

Return random number between 0 and 1 (as a FLONUM).
No args.
(LAP RAND SUBR)
	(JSYS 0 $RAND)		generate the number
	(MOVEI B (QUOTE FLONUM) S)
	(JRST 0 MAKNUM)		return flonum
	NIL

Return login directory as a string.  No args.
(LAP LOGDIR SUBR)
	(JSYS 0 $GJINF)		get job info
	(PUSHJ P FIX1A)
	(JCALL 1 (E DIRST) S)
	NIL

Return connected directory as a string.  No args.
(LAP CONDIR SUBR)
	(JSYS 0 $GJINF)
	(MOVE A B)		use connected directory
	(PUSHJ P FIX1A)
	(JCALL 1 (E DIRST) S)
	NIL

Return as a string the name of the directory whose
number is the arg.
(LAP DIRST SUBR)
	(PUSHJ P NUMVAL)
	(MOVE B A)		directory number to B
	(MOVE A (C 440700 0 FNAREA 0))
	(MOVEM A DFAREA)	init pointer
	(MOVEI 5 DBLQT)		leading double quote
	(IDPB 5 A)
	(JSYS 0 $DIRST)		expand to string
	(JRST 0 NODIR)
	(IDPB 5 A)		closing double quote
	(MOVEI A GETBYT)
	(JRST 0 READP1)		read it up and return it
GETBYT
	(ILDB A DFAREA)
	(POPJ P 0)
NODIR
	(MOVEI A (QUOTE ((QUOTE "No such directory - DIRST") '252)) S)
	(JCALL 17 (E ERROR) S)
	NIL

Return a string which is the dir, name, ext, and ver for the
file open on the jfn which is the first argument.  If a second
arg is given, use it as bit pattern for JFNS call.
(LAP JFNS FSUBR)
	(HRRZ B 0 A)		cdr of arg
	(HLRZ A 0 A)		car of arg	
	(SKIPE 0 B)
	(HLRZ B 0 B)		cadr of arg, if any
	(PUSH P B)		save that for now
	(CALL 1 (E EVAL) S)	eval jfn
	(EXCH A 0 P)		save jfn
	(SKIPE 0 A)
	(CALL 1 (E EVAL) S)	eval flag bits if any
	(SKIPE 0 A)
	(PUSHJ P NUMVAL)
	(POP P B)		jfn
	(SUBI B INUM0)		convert to a number
	(SKIPN 3 A)
	(MOVE 3 (C 211110 0 000001 0))
	(MOVE A (C 440700 0 FNAREA 0))
	(MOVEM A DFAREA)	set pointer
	(MOVEI 5 DBLQT)
	(IDPB 5 A)		leading double quote
	(JSYS 0 $JFNS)		expand string
	(IDPB 5 A)		trailing double quote
	(MOVEI A GETBYT)
	(JRST 0 READP1)		expand to string and ret
GETBYT
	(ILDB A DFAREA)
	(POPJ P 0)
	NIL




(SYMDEF TABSR1)
(OPS SKIPG 337000 ADDI 271000 MOVN 210000 $DELNF 317)

Return integer 18 bit jfn open on channel which is arg.
(LAP TNXJFN SUBR)
	(MOVE B A)
	(PUSHJ P TABSR1)	look for channel
	(JUMPE A NOCHAN)	if not found
	(SKIPG 0 CHSYS C)
	(JRST 0 NOJFN)		if not a tenex channel
	(HRRZ A CHSYS C)	load up 18 bit jfn
	(ADDI A INUM0)		make it an inum
	(POPJ P 0)

NOCHAN  
	(MOVEI 1 (QUOTE ((QUOTE "CANT FIND CHANNEL - TNXJFN
") '253)) S)
	(CALL 17 (E ERROR) S)
NOJFN
	(MOVEI 1 (QUOTE ((QUOTE "NO JFN OPEN ON CHANNEL - TNXJFN
") '254)) S)
	(CALL 17 (E ERROR) S)
	NIL

Return integer 18 bit flags from GTJFN for channel which is arg.
(LAP TNXJFNF SUBR)
	(MOVE B A)
	(PUSHJ P TABSR1)	look for channel
	(JUMPE A NOCHAN)	if not found
	(SKIPG 0 CHSYS C)
	(JRST 0 NOJFN)		if not tenex channel
	(HLRZ A CHFLAG C)
	(JRST 0 FIX1A)
NOCHAN
	(MOVEI 1 (QUOTE ((QUOTE "CANT FIND CHANNEL - TNXJFNF
") '255)) S)
	(CALL 17 (E ERROR) S)
NOJFN
	(MOVEI 1 (QUOTE ((QUOTE "NO JFN OPEN ON CHANNEL - TNXJFNF
") '256)) S)
	(CALL 17 (E ERROR) S)
	NIL



Return login directory number.  No args.
(LAP LOGDIRN SUBR)
	(JSYS 0 $GJINF)
	(JRST 0 FIX1A)
	NIL

Return connected directory number.  No args.
(LAP CONDIRN SUBR)
	(JSYS 0 $GJINF)
	(MOVE A B)
	(JRST 0 FIX1A)
	NIL

Delete file versions.
First arg is jfn, second number of versions to retain.
(LAP DELNF SUBR)
	(SUBI A INUM0)
	(SUBI B INUM0)
	(JSYS 0 $DELNF)
	(JRST 0 DELFAI)
	(MOVN A B)
	(ADDI A INUM0)
	(POPJ P 0)
DELFAI
	(MOVEI A (QUOTE ((QUOTE "DELNF FAILED
") '257)) S)
	(CALL 17 (E ERROR) S)
	NIL



(OPS $STDIR '40 $CNDIR '44 HRRZM '552000]

Connect to directory (assuming that user needs no password to do so).
One argument - the directory name (as an atom or string, no <>).
(LAP CNDIR SUBR)
	(MOVE B (C '440700 0 FNAREA 0))
	(MOVEM B DFAREA)
	(HRROI R PUTBYT)	no slashify
	(PUSHJ P PRINTA)	expand name string
	(MOVEI 1 0)
	(IDPB 1 DFAREA)		terminating null
	(MOVEI 1 1)		exact match required
	(MOVE 2 (C '440700 0 FNAREA 0))
	(JSYS 0 $STDIR)
	(JRST 0 NOGOOD)		no such directory
	(JRST 0 NOGOOD)		ambiguous
	(HRRZM 1 1)
	(SETZM 0 2)
	(JSYS 0 $CNDIR)		try to connect
	(JRST 0 NONO)		requires a password
	(MOVEI 1 (QUOTE T) S) 	return T
	(POPJ P 0)

PUTBYT
	(IDPB 1 DFAREA)
	(POPJ P 0)

NOGOOD
	(MOVEI A (QUOTE ((QUOTE "No such directory - CNDIR") '260)) S)
	(JCALL 17 (E ERROR) S)

NONO
	(MOVEI A (QUOTE ((QUOTE "Password required - CNDIR") '261)) S)
	(JCALL 17 (E ERROR) S)
	NIL

Restore input channel table.  Expects table addr ON STACK.  CALL BY JRST!!
(LAP INRST# SUBR)
	(MOVE C GETAD)
	(MOVEI B CHCHAR C)
	(HRLI B GETCH)
	(BLT B CHFN C)
	(POP P C)
	(MOVEM C GETAD)
	(MOVSI B CHCHAR C)
	(HRRI B GETCH)
	(BLT B GETFN)
	(POPJ P 0)	
	NIL

Restore output channel table.  Expects table addr ON STACK.  CALL BY JRST!!
(LAP OUTRST# SUBR)
	(MOVE C PUTAD)
	(MOVEI B CHCHAR C)
	(HRLI B PUTCH)
	(BLT B CHFN C)
	(POP P C)
	(MOVEM C PUTAD)
	(MOVSI B CHCHAR C)
	(HRRI B PUTCH)
	(BLT B PUTFN)
	(POPJ P 0)
	NIL

These are the specific channel read routines.  They select the desired
channel and restore the old one when done.
(LAP CREAD SUBR)
	(PUSH P GETAD)		save old channel addr
	(MOVEI B 0)
	(PUSHJ P INC)		(INC newchan NIL)
	(PUSHJ P READ)
	(JRST 0 INRST#)
	NIL

(LAP CLINEREAD SUBR)
	(PUSH P GETAD)
	(MOVEI B 0)
	(PUSHJ P INC)
	(PUSHJ P LINEREAD)
	(JRST 0 INRST#)
	NIL

One argument specific channel print routines.  Channel name, then arg.
(LAP CPRINT SUBR)
	(PUSH P PUTAD)		save old channel addr
	(PUSH P B)		save expr to print
	(MOVEI B 0)
	(PUSHJ P OUTC)		(OUTC newchan NIL)
	(POP P A)
	(PUSHJ P PRINT)
	(JRST 0 OUTRST#)
	NIL

(LAP CPRIN1 SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P PRIN1)
	(JRST 0 OUTRST#)
	NIL

(LAP CPRINC SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P PRINC)
	(JRST 0 OUTRST#)
	NIL

(LAP CTERPRI SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P TERPRI)
	(JRST 0 OUTRST#)
	NIL

(LAP CTAB SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P TAB)
	(JRST 0 OUTRST#)
	NIL

Two arg print routines.  Channel, then two args.
(LAP CSPRINT SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(PUSH P C)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P B)
	(POP P A)
	(PUSHJ P SPRINT)
	(JRST 0 OUTRST#)
	NIL

(LAP CPRINTLEV SUBR)
	(PUSH P PUTAD)
	(PUSH P B)
	(PUSH P C)
	(MOVEI B 0)
	(PUSHJ P OUTC)
	(POP P B)
	(POP P A)
	(PUSHJ P PRINTLEV)
	(JRST 0 OUTRST#)
	NIL
Functions for which we must figure out access.  Channel, followed by any
normal args.
(LAP CRFPTR SUBR)
	(PUSH P A)
	(MOVE B A)
	(PUSHJ P TABSR1)
	(JUMPE A NOCHAN)
	(MOVE C CHFLAG C)
	(MOVEI B 0)
	(TLNN C 040000)		last op read bit
	(JRST 0 LSTWRT)		if last op write
	(MOVE A GETAD)
	(EXCH A 0 P)	
	(PUSH P A)
	(PUSHJ P INC)
	(POP P A)
	(PUSHJ P RFPTR)
	(JRST 0 INRST#)
LSTWRT
	(MOVE A PUTAD)
	(EXCH A 0 P)
	(PUSH P A)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P RFPTR)
	(JRST 0 OUTRST#)
NOCHAN
	(MOVEI A (QUOTE ((QUOTE "CANT FIND CHANNEL - CRFPTR
") '262)) S)
	(JCALL 17 (E ERROR) S)
	NIL

(LAP CSIZEF SUBR)
	(PUSH P A)
	(MOVE B A)
	(PUSHJ P TABSR1)
	(JUMPE A NOCHAN)
	(MOVE C CHFLAG C)
	(MOVEI B 0)
	(TLNN C 040000)
	(JRST 0 LSTWRT)
	(MOVE A GETAD)
	(EXCH A 0 P)
	(PUSH P A)
	(PUSHJ P INC)
	(POP P A)
	(PUSHJ P SIZEF)
	(JRST 0 INRST#)
LSTWRT
	(MOVE A PUTAD)
	(EXCH A 0 P)
	(PUSH P A)
	(PUSHJ P OUTC)
	(POP P A)
	(PUSHJ P SIZEF)
	(JRST 0 OUTRST#)
NOCHAN
	(MOVEI A (QUOTE ((QUOTE "CANT FIND CHANNEL - CSIZEF
") '263)) S)
	(JCALL 17 (E ERROR) S)
	NIL

(LAP CSFPTR SUBR)
	(PUSH P A)
	(PUSH P B)
	(MOVE B A)
	(PUSHJ P TABSR1)
	(JUMPE A NOCHAN)
	(MOVE C CHFLAG C)
	(MOVEI B 0)
	(TLNN C 040000)
	(JRST 0 LSTWRT)
	(MOVE A GETAD)
	(EXCH A -1 P)
	(PUSH P A)
	(PUSHJ P INC)
	(POP P A)
	(POP P B)
	(PUSHJ P SFPTR)
	(JRST 0 INRST#)
LSTWRT
	(MOVE A PUTAD)
	(EXCH A -1 P)
	(PUSH P A)
	(PUSHJ P OUTC)
	(POP P A)
	(POP P B)
	(PUSHJ P SFPTR)
	(JRST 0 OUTRST#)
NOCHAN
	(MOVEI A (QUOTE ((QUOTE "CANT FIND CHANNEL - CSFPTR
") '264)) S)
	(JCALL 17 (E ERROR) S)
	NIL

function to return current low segment size in octal k (pages)
no args

(OPS JOBREL '44 TRO '660000 AOJ '340000 LSH '242000]

(LAP CORESIZE SUBR)
	(HRRZ A JOBREL)
	(TRO A '777)
	(AOJ A 0)
	(LSH A -9.)
	(JRST 0 FIX1A)
	NIL

