IFNDEF FTVER,<FTVER==0>		;DEFAULT TO STANDARD RELOCATABLE VERSION
IFNDEF FTCPU,<FTCPU==1>		;DEFAULT TO KI CPU (0 IMPLIES KA CPU)
IFNDEF NBTPGS,<NBTPGS==:5>	;LENGTH OF BOOTS IN PAGES

FTVER==:FTVER			;MAKE THE VERSION SWITCH INTERNAL (FOR WRTBTS)

IFL <FTVER!<4-FTVER>>,<
	PRINTX	?Illegal FTVER definition -- compilation aborted
	PASS2
	END>

IFE FTVER,<
TITLE	BOOTS	SUMEX BOOTStrap program (standard relocatable version)
IF1,<PRINTX	Assembling BOOTS -- standard relocatable version>>

IFE <1-FTVER>,<
TITLE	BOOTS	SUMEX BOOTStrap program (PHASEd relocatable version)
IF1,<PRINTX	Assembling BOOTS -- PHASEd relocatable version>>

IFE <2-FTVER>,<
TITLE	BOOTS	SUMEX BOOTStrap program (paper tape READIN version)
IF1,<PRINTX	Assembling BOOTS -- paper tape READIN version>>

IFE <3-FTVER>,<
TITLE	BOOTS	SUMEX BOOTStrap program (DECtape READIN version)
IF1,<PRINTX	Assembling BOOTS -- DECtape READIN version>>

IFE <4-FTVER>,<
TITLE	BTSUSR	SUMEX BOOTStrap program (user level debug version)
IF1,<PRINTX	Assembling BTSUSR -- user level debug version>>

IFE FTCPU,<IF1,<
PRINTX	For a KA DECsystem-10>>

IFN FTCPU,<IF1,<
PRINTX	For a KI DECsystem-10>>

IFE <FTVER*<4-FTVER>>,<
   IFDEF FTPAG,<
	PRINTX	?FTPAG should not be defined for this version -- compilation aborted
	PASS2
	END>>
SUBTTL	F. Gilmurray/FSG	5-Oct-77

COMMENT	\

BOOTS is a bootstrap program designed to load SUMEX/TENEX monitors and
diagnostics from 3330 type disks (through the SA-10).  BOOTS runs in kernel
mode with paging disabled.  It is usually loaded (via the monitor, GETBTS
or READIN mode) into the top NBTPGS pages of directly addressable memory
(i.e. not above 256K) from the last NBTPGS sectors of the disk system.

Assembly instructions:

BOOTS is composed of three files; BOOTS.PAR (this file), SAIO.MAC (Tom
Rindfleisch`s I/O package), and BOOTS.MAC, and furthermore, they must be
assembled in this order.  All of BOOTS`s I/O (disk and tty) is done via SAIO
(although BOOTS`s tty input is interrupt driven).  There are three symbols
that control the assembly of BOOTS.  The definition of the symbol FTVER
determines which version of BOOTS will be assembled and the symbol FTPAG
specifies the physical page address of where three of the five versions
will be loaded.  If FTPAG is either undefined or defined to be zero, then
it will be redefined such that BOOTS will be loaded into the top NBTPGS
pages of the first 256K.  Note that FTPAG must not be defined for the other
two versions.  Finally, the definition of the symbol FTCPU determines which
type of DECsystem-10 BOOTS will be assembled for (i.e. KA or KI).
FTVER values:

   0)	To make a standard relocatable version, just assemble as is with no
	special symbol definitions.  This is the default (i.e. FTVER==0 and
	FTPAG undefined).

   1)	To make a PHASEd relocatable version, define FTVER to be 1 and FTPAG
	to be the starting page address of BOOTS.  This version will produce
	a PHASEd listing of BOOTS (starting at page FTPAG) such that all
	addresses will appear to be absolute.

   2)	To make a paper tape READIN version, define FTVER to be 2 and FTPAG
	to be the starting page address of BOOTS.

   3)	To make a DECtape READIN version (i.e. SAVe file for DTACOP), define
	FTVER to be 3 and FTPAG to be the starting page address of BOOTS.  This
	version is identical to the paper tape READIN version except that the
	RIM10B statement is not assembled.  IDDT must be used to move BOOTS to
	page FTPAG since the loader can`t load a file past 128K.  Note that
	the NBTPGS pages that BOOTS will occupy must be zeroed before reading
	in BOOTS since the DECtape file is a zero compressed SAVe file.

   4)	To make a user level version (for debugging) that can be run under
	normal timesharing, define FTVER to be 4 and don`t define FTPAG.  Since
	the user level GETBTS will always read the user level BOOTS into the
	top NBTPGS of the first 256K, this version will produce a PHASEd
	listing starting at page 1000-BFRPGS-NBTPGS.

Note...	Those versions of BOOTS loaded with WRTBTS (i.e. 0, 1, and 4) are
	preferred to those versions not loaded with WRTBTS (i.e. 2 and 3)
	since WRTBTS sets up several runtime parameters in BOOTS before
	writing it out to the disk.  Versions 2 and 3 use assembly time
	parameters which will probably change in the not to distant future.

\
SUBTTL	Symbol definitions

;AC definitions

BF=0		;BOOTS FLAGS
;A=1		;ACS USED TO COMMUNICATE WITH SAIO (DEFINED IN SAIO)
;B=2
;C=3
		;ACS 4 AND 5 ARE FREE (NEVER REFERENCED)
NC=6		;NUMBER OF CHARACTERS IN CURRENT (INCOMPLETE) FIELD
FA=7		;DIRECTORY NUMBER OR CURRENT FILE`S FDB ADDRESS
CM=10		;ADDR OF FIRST WORD OF ELEMENT,,COMMAND LEVEL
T1=11		;VOLATILE ACS
T2=12
T3=13
T4=14
M=15		;COMMAND STRING BYTE POINTER
R=16		;RELOCATION BASE REGISTER
P=17		;PDL POINTER

;OPDEFs

OPDEF	PJRST	[JRST]	;JRST TO ROUTINE WITH POPJ RETURN

;Assembly parameters

PDLSIZ==^D20		;SIZE OF PDL STACK
CH%FLD==^D40		;MAX NUMBER OF CHARS IN A CMD FIELD (PLUS NULL AT END)
CH%WDS==^D30		;NUMBER OF WORDS IN COMMAND BUFFER (150 CHARS)
			;(NOTE THAT BUFFER SIZE ISN`T CHECKED!)
NBTWDS==:NBTPGS_^D9	;LENGTH OF BOOTS IN WORDS
BTSFLG==CONO APR,1B19	;CLEAR ALL I/O DEVICES (I.E. I/O BUS RESET)
			;(THIS INST MUST BE THE VERY FIRST WORD IN BOOTS)
BF%WDS==^D10		;NUMBER OF WORDS IN TYPE AHEAD BUFFER (50 CHARS)
CTYPIA==1		;PI ASSIGNMENT FOR CTY I/O
;Disk parameters

MINTRK==0		;LOWEST ALLOWABLE TRACK NUMBER IN DISK FILE SYSTEM
MAXTRK==4521		;FIRST TRACK NUMBER AFTER DISK FILE SYSTEM AREA
NTRK==	^D19		;NBR OF TRACKS / CYLINDER (DUAL DENSITY 3330 TYPE DISKS)
NREC==	5		;NBR OF RECORDS / TRACK (DUAL DENSITY 3330 TYPE DISKS)
DIRFMT==-1		;DIRECTORY FORMAT FLAG (I.E. OLD FORMAT)
LINADR==1B0		;LINEAR DISK ADDRESS FLAG
DSKMSK==777774		;BITS NOT USED IN LH OF LINEAR DISK ADDRESS
DIDSC0==LINADR!110431	;LINEAR DISK ADDR OF INDEX BLOCK FOR (SYSTEM)INDEX.;1

;Buffer parameters

FDADR==	PAGE.2+17	;ADDR OF ADDR OF INDEX BLOCK FOR (SYSTEM)DIRECTORY.;1
SBIDTB==PAGE.2+32	;ADDRESS OF DIRECTORY SUBINDEX DISPATCH TABLE
SYMBOT==DIRORG+3	;BOTTOM OF DIRECTORY SYMBOL TABLE
SYMTOP==DIRORG+4	;TOP OF DIRECTORY SYMBOL TABLE
DIRLOC==DIRORG+25	;TEMP USED FOR SAVING LOCATION IN DIRECTORY
DIRINP==DIRORG+26	;TEMP TO SAVE POINTER TO DIRECTORY STRING
DIRINC==DIRORG+27	;TEMP TO HOLD INCREMENT FOR SEARCHING
DIRMSK==DIRORG+30	;TEMP TO HOLD MASK FOR DIRECTORY LOOKUPS
FDBCTL==DIRORG+1	;CONTROL BITS FOR THIS FILE (IN LH)
FDBEXT==DIRORG+2	;EXTENSION ADDR,,ADDR OF NEXT FDB WITH SAME FILE NAME
FDBADR==DIRORG+3	;LINEAR DISK ADDRESS OF THIS FILE`S INDEX BLOCK
FDBVER==DIRORG+7	;VERSION NUMBER,,ADDR OF NEXT FDB WITH SAME EXTENSION

;Interesting bits (in lh of FDBCTL)

FDBTMP==1B0		;THIS IS A TEMPORARY FILE
FDBNEX==1B2		;NO EXTENSION YET (FILE IS NON-EXISTENT)
FDBDEL==1B3		;THIS FILE IS DELETED
FDBNXF==1B4		;FIRST WRITE NOT COMPLETE (FILE IS NON-EXISTENT)
FDBLNG==1B5		;LONG FILE (INDEX BLOCK CONTAINS PTRS TO INDEX BLOCKS)
FDBSHT==1B6		;COMPRESSED PAGE TABLE (NOT SUPPORTED)
FDBENV==1B7		;ENVIRONMENT DUMP FILE (NOT SUPPORTED)
FDBSUB==1B8		;SUBROUTINE FILE (NOT SUPPORTED)
FDBEPH==1B17		;THIS IS A EPHEMERAL FILE
;Character flags (in lh of CHRTAB)

CH.NFG==1B18		;CHAR NOT VALID IN COMMAND SPEC (MUST BE SIGN BIT)
CH.TYP==1B19		;ECHO THIS SPECIAL CHARACTER (IN ARROW MODE)
CH.LCL==1B20		;LOWER CASE LETTER
CH.DLM==1B21		;THIS (SPECIAL) CHARACTER IS A FIELD DELIMITER
			;BITS 29-35 RESERVED FOR SPECIAL CHAR DISPATCH INDEX

;Command levels

CM%DEV==1		;DEVICE
CM%DIR==2		;DIRECTORY
CM%FIL==3		;FILE NAME
CM%EXT==4		;EXTENSION
CM%VER==5		;VERSION NUMBER
CM%SWT==6		;SWITCH

;Temporary flags (in lh of BF)

FL.LIT==1B0		;TAKE NEXT CHARACTER LITERALLY (SET BY ^V)
FL.DIR==1B1		;PARSING A DIRECTORY (SET BY OPEN ANGLE BRACKET)
FL.SWT==1B2		;COMMAND IS JUST A SWITCH (I.E. NO FILE SPEC)
FL.NEG==1B3		;ENCODING A NEGATIVE NUMBER (IN GETDEC AND GETOCT)
FL.RUN==1B4		;START THIS FILE AFTER LOADING IT INTO CORE
FL.DLM==1B5		;THIS COMMAND ELEMENT HAS AN OPENING DELIMITER
FL.MCH==1B6		;PROCESSING A ? (TYPE ALL THAT MATCHES CURRENT FIELD)
FL.NUL==1B7		;PROCESSING A ? FOR A NULL DIRECTORY SPECIFICATION
FL.REC==1B8		;PROCESSING A ^F (RECOGNIZE THE CURRENT COMMAND FIELD)
FL.FND==1B9		;FOUND STRING WHICH CONTAINS THIS FIELD (I.E. SUPERSET)
FL.RFS==1B10		;PROCESSING AN ESCAPE (RECOGNIZE THE ENTIRE FILE SPEC)
FL.BFR==1B11		;THERE IS (AT LEAST 1) CHAR IN TYPE AHEAD BUFFER

;Permanent flags (in rh of BF)

FR.FIC==1B18		;THERE IS A RUNNABLE FILE ALREADY IN CORE
			;BITS 29-35 RESERVED FOR ASCII NULL
SUBTTL	Assembly specification and buffer allocation

;Macros to allocate page buffers (directly before start of BOOTS code)

DEFINE	PAGBFR<
	X	DIRORG,^D16	;;PAGE BUFFER FOR DIRECTORIES
	X	PAGE.1		;;GENERAL PURPOSE (DISK) PAGE BUFFERS
	X	PAGE.2
	>

DEFINE	X(.NAM,.NPG<1>)<
	BFRPGS==BFRPGS+.NPG>

BFRPGS==0			;INITIAL NUMBER OF PAGES IN BUFFER AREA

	PAGBFR			;COMPUTE THE TOTAL NUMBER OF BUFFER PAGES

IFN <FTVER*<4-FTVER>>,<
   IFNDEF FTPAG,<FTPAG==1000-BFRPGS-NBTPGS> ;DEFAULT TO TOP OF FIRST 256K IF
   IFE    FTPAG,<FTPAG==1000-BFRPGS-NBTPGS> ; UNDEFINED OR DEFINED TO BE ZERO
   IFL <FTPAG!<1000-FTPAG-BFRPGS-NBTPGS>>,<
	PRINTX	?Illegal FTPAG definition -- compilation aborted
	PASS2
	END>>
;Determine which version of BOOTS to assemble

IFE <2-FTVER>,<			;ASSEMBLING A PAPER TAPE READIN VERSION?
	LOC	FTPAG_^D9	;YES, START AT THIS LOCATION
	RIM10B>			;AND TELL MACRO TO PUNCH OUT RIM LOADER

IFE <3-FTVER>,<			;ASSEMBLING A DECTAPE READIN VERSION?
	LOC	1000		;YES, START AT THIS LOCATION
	PHASE	FTPAG_^D9>	;AND PHASE TO SPECIFIED LOCATION
				;(USE IDDT TO BLT CODE TO PHASED ADDRESS)

IFN <<2-FTVER>*<3-FTVER>>,<	;ASSEMBLING USER OR EITHER RELOCATABLE VERSION?
BTSREL==: .+<BFRPGS_^D9>	;YES, DEFINE RELOC STARTING ADDR FOR WRTBTS
				;(DON`T OVERLAY MEMORY WITH PAGE BUFFERS)
   IFE <4-FTVER>,<		;ASSEMBLING USER LEVEL DEBUG VERSION?
	SEARCH	STENEX		;YES, SAVE A FEW SYMBOL DEFINITIONS
	$USRMD==1		;TELL SAIO THAT THIS IS A USER LEVEL VERSION
	PHASE	<1000-BFRPGS-NBTPGS>_^D9> ;AND START BOOTS AT TOP OF FIRST 256K
   IFE <1-FTVER>,<		;ASSEMBLING A PHASED RELOCATABLE VERSION?
	PHASE	FTPAG_^D9>>	;YES, START AT THIS LOCATION

DEFINE	X(.NAM,.NPG<1>)<
.NAM:	BLOCK	<.NPG_^D9>>

	PAGBFR			;ALLOCATE THE PAGE BUFFERS (BEFORE BOOTS CODE)

PAGE.0==PAGE.1-1000		;PAGE 0 OF FILE LOADED HERE (BLT DOWN LATER)
SUBTTL	BOOTS Initialization

BOOTS::	BTSFLG			;FLAG WHICH INDICATES THAT THIS IS BOOTS
IFE <4-FTVER>,<			;TURN OFF ECHOING FOR USER LEVEL VERSION
	MOVEI	1,100		;SET UP PRIMARY INPUT JFN
	RFMOD			;GET OUR JFN MODE WORD
	TRZ	2,3B29		;SET BINARY DATA MODE AND DISABLE ECHOING
	SFMOD>			;(TRY TO MIMIC A STAND-ALONE MACHINE)
IFN <4-FTVER>,<			;ASSEMBLE THIS IF NOT USER LEVEL VERSION
	CONO	PI,1B23!1B27	;CLEAR AND DEACTIVATE THE PI SYSTEM
IFE FTCPU,<			;DISABLE PAGING ON A KA SYSTEM
	IFNDEF PGR,<PGR==24>	;DEFINE THE I/O BUS ADDRESS OF THE BBN PAGER
	CONO	PGR,4>		;(INSURE THAT FIRST 256K IS ADDRESSABLE)
IFN FTCPU,<			;DISABLE PAGING ON A KI SYSTEM
	MOVEI	T1,1B18!0B22	;(INSURE THAT FIRST 256K IS ADDRESSABLE)
	DATAO	PAG,T1>>
	MOVSI	R+1,(JRST (R))	;SET UP RELOCATION FOR BOOTS IN R
	JSR	R		;SET R TO FLAGS,,PC AND EXECUTE "JRST (R)"
	SUBI	R,.		;R NOW CONTAINS OUR RELOCATION VALUE
IFE <<2-FTVER>*<3-FTVER>>,<	;IF ASSEMBLING EITHER READIN VERSION,
	SETZ	0,>		;INDICATE THAT WE WEREN`T CALLED BY THE MONITOR
	JUMPE	0,.+2(R)	;JUMP IF NOT CALLED BY THE MONITOR
	  HRLI	0,(POINT 7)	;SET UP BYTE POINTER TO MONITOR`S COMMAND
	MOVEM	0,MONCMD(R)	;SAVE MONITOR COMMAND BYTE POINTER (OR ZERO)
	MOVEI	P,PDLSTK-1(R)	;INIT THE PDL POINTER
	SETZB	BF,STADDR(R)	;CLEAR ALL FLAGS AND FILE`S STARTING ADDR
	MOVEI	C,[ASCIZ \


[BOOTS]
\](R)
	PUSHJ	P,$STRO(R)	;TELL THE OPERATOR THAT WE`RE HERE
	JRST	BEGBTS(R)	;AND GO GET THE BOOTS COMMAND LINE

;Literals

	LIT			;FORCE OUT LITERALS BEFORE ASSEMBLING SAIO

IFN FTVER,<			;ONLY LIST SAIO IF ASSEMBLING DEFAULT VERSION
	XLIST
	.XCREF>
