title tboots
search stenex
;primary sa-10 tape bootstrap for TENEX - reads a compressed
;save file from mta0: assuming 9-track, 1600 bpi
;ac 1 - where data or pointer word gets returned from tape block buffer
;ac 10 - current index into tape block buffer
;ac 11 - where pointer word lives for processing data words from
;compressed save file and into core - format is iowd count,destination
;and incrementation is done with aobjn
;ac 12 - tape error countdown - initialized to nretry for each block and
;decremented for each error - die if this becomes negative
runpg==337                      ;where bootstrap
runpga==runpg*1000              ;and tendmp live
buffer==runpga+600              ;tape buffer in last 200 words of runpg
pdlsiz==10                      ;size of stack area
chnbsz==10                      ;size of channel command program buffer
nretry==4                       ;number of times to retry on tape error
;sa-10 and hardware related definitions
ssabas==300                     ;hardware set by switches on sa-10
i.tdev==200                     ;sa-10 device designator for magtapes
ssatc==0                        ;ssa subchannel for magtape controller
tch==1b1                        ;transfer in channel command program
apr==000                        ;cpu device number on pdp-10 i/o bus
pi==004                         ;pi device number on pdp-10 i/o bus
pag==010                        ;ki pager number on pdp-10 i/o bus
tty==120                        ;cty device number on pdp-10 i/o bus
ssa==274                        ;sa-10 device number on pdp-10 i/o bus
;cono to ssa
sa.ini==1b18                    ;initialize whole ssa
sa.gof==4b29                    ;go flag for channel function
sa.sts==6b29                    ;status done flag function
sa.set==1b30                    ;set/do one of the above "b29" functions
;coni from ssa
sa.mpe==1b19                    ;memory parity error flag
sa.nxm==1b20                    ;nonx memory flag
;device command word
sc.nmx==1b0                     ;no memory transfer
sc.xct==1b2                     ;execute this word
sc.chn==1b3                     ;chain to further device command words
;device status bute
id.dve==004                     ;device end
;ibm magtape command codes
ic.rdt==002                     ;read block forward
ic.rew==007                     ;rewind
ic.bsb==047                     ;backspace block
ic.skf==077                     ;skip file
;various opdefs
opdef call [pushj 17,0]
opdef ret [popj 17,0]
;"start" start of user-mode program which writes stand-alone bootstrap
;onto a binary file suitable for punching onto paper tape
start:
	reset                        ;clear all
	setz 1,                      ;clear ac 1 for checksum generation
	movsi 10,-<wrdcnt-2>         ;prepare loop to checksum all of
	add 1,header+1(10)           ;bootstrap except for checksum word
	aobjn 10,.-1                 ;and jrst word
	movem 1,header+wrdcnt-1      ;kludge because of phasing junk
	movsi 1,600001               ;output, new, short
	hrroi 2,[asciz /tboots.bin/] ;make binary file out of bootstrap
	gtjfn                        ;for direct copy to paper tape
	0                            ;burp
	move 2,[440000,,100000]      ;36-bit, write
	openf                        ;open it
	0                            ;burp
	move 2,[444400,,header]      ;first item is blki word at header
	hlro 3,header                ;make full-word negative count
	subi 3,1                     ;one more than blki to include it
	sout                         ;send blki word and bootstrap to file
	closf                        ;done, close file
	0                            ;couldn't happen...
	haltf                        ;die
	jrst .-1                     ;insist on dying
;"header" header word in iowd format for pdp-10 automatic readin mode
header:
	iowd wrdcnt,boot             ;blki word for readin mode...
phase runpga                    ;compile to run in tendmp area
;"boot" start of stand-alone bootstrap for reading in from magtape
boot:
	cono apr,200300              ;iob reset, clear errors
	cono pi,610400               ;clear all, shut off pi system
	movei 1,400000               ;prepare datao
	datao pag,1                  ;to shut off the ki pager
	setz 1,                      ;clear ac 1 for checksum generation
	movsi 10,-<wrdcnt-2>         ;prepare loop to checksum all of
	add 1,boot(10)               ;bootstrap except for checksum word
	aobjn 10,.-1                 ;and jrst word
	came 1,chksum                ;better be correct
	jrst error                   ;else die...
	cono ssa,sa.ini              ;clear the entire sa-10
	movsi 1,1                    ;then wait a while for things
	sojg 1,.                     ;to settle down
	setz 10,                     ;prepare to
	movsi 1,10                   ;clear core from permenant acs
	hrri 1,11                    ;up through location just before
	blt 1,runpga-1               ;beginning of bootstrap program
	move 17,stackp               ;set up stack
	call tapini                  ;rewind tape
	call lodblk                  ;go get very first tape record
	jrst boot2                   ;go get first pointer word
boot1:
	call lodwrd                  ;go get next data word
	movem 1,1(11)                ;put it in correct core location
	aobjn 11,boot1               ;loop if more data words
boot2:
	call lodwrd                  ;go get a pointer word
	jumpge 1,done                ;jrst word if positive, done
	movem 1,11                   ;pointer, save away
	jrst boot1                   ;go process this many data words
;"lodwrd" loads one word from tape buffer into ac 1
;reads in a new tape block if necessary
lodwrd:
	cail 10,200                  ;used up last word in tape block?
	call lodblk                  ;yes, go get another, zeroing ac 10
	move 1,buffer(10)            ;fetch word from tape block buffer
	addi 10,1                    ;increment buffer index
	ret                          ;return to caller, word in ac 1
;"tapini" rewinds magtape and sets proper density
tapini:
	movei 1,<ic.rew>b27+i.tdev   ;say rewind tape unit zero
	lsh 1,^d12                   ;properly fielded as device command word
	tlo 1,(sc.nmx+sc.xct+sc.chn) ;no data xfer, execute, chain
	movem 1,chncmd               ;put in channel command program
	movei 1,303b27+i.tdev        ;say go into 1600 bpi mode
	lsh 1,^d12                   ;properly fielded as device command word
	tlo 1,(sc.nmx+sc.xct+sc.chn) ;no data xfer, execute, chain
	movem 1,chncmd+1             ;put in channel command program
	setzm chncmd+2               ;say end of channel command program
	call setssa                  ;go execute channel command program
	tlne 1,(<id.dve>b15)         ;device end must be on, all others
	tlne 1,177510                ;except channel end, control unit end &
	jrst error                   ;unit exception must be off, else die...
	ret                          ;rewind complete, density set, return
;"lodblk" reads one record from magtape into buffer - retries nretry
;times on error and then dies if no success
lodblk:
	movei 12,nretry              ;init number of times to retry on error
lodbl1:
	movei 1,<ic.rdt>b27+i.tdev   ;read forward, magtape
	lsh 1,^d12                   ;properly fielded as device command word
	tlo 1,(22b5+sc.xct+sc.chn)   ;tape compatability, execute, chain
	movem 1,chncmd               ;put in channel command program
	movei 1,buffer               ;transfer data to tape block buffer
	hrli 1,(-200b11)             ;install word count, 200 words
	movem 1,chncmd+1             ;put in channel command program
	setzm chncmd+2               ;say end of channel command program
	call setssa                  ;go execute channel command program
	tlne 1,(<id.dve>b15)         ;device end must be on, all others
	tlne 1,177510                ;except channel end, control unit end &
	jrst retry                   ;unit exception must be off, else retry
	setz 10,                     ;re-init tape block buffer index
	ret                          ;rewind complete, density set, return
;"retry" decrements error counter and then backs up one tape record
;unless already nretry failures, in which case death
retry:
	sojl 12,error                ;die if too many read errors
	movei 1,<ic.bsb>b27+i.tdev   ;backspace block, magtape
	lsh 1,^d12                   ;properly fielded as device command word
	tlo 1,(sc.nmx+sc.xct+sc.chn) ;no data xfer, execute, chain
	movem 1,chncmd               ;put in channel command progrem
	setzm chncmd+1               ;say end of channel command program
	call setssa                  ;go execute channel command program
	tlne 1,(<id.dve>b15)         ;device end must be on, all others
	tlne 1,177510                ;except channel end, control unit end &
	jrst error                   ;unit exception must be off, else die...
	jrst lodbl1                  ;go try to re-read block
;"setssa" runs current sa channel command program and waits for
;completion - returns ending status word in ac 1
setssa:
	movei 1,chncmd               ;point to channel command buffer
	hrli 1,(tch)                 ;say channel transfer
	movem 1,ssabas+<4*ssatc>     ;put in tape channel base
	cono ssa,sa.sts+<ssatc>b32   ;reset previous status
	cono ssa,sa.gof+sa.set+<ssatc>b32    ;go do it
setss1:
	consz ssa,sa.mpe+sa.nxm      ;fatal memory error?
	jrst error                   ;yes, die
	conso ssa,1b<^d29+ssatc>     ;no, something done?
	jrst setss1                  ;no, keep checking
	move 1,ssabas+<4*ssatc>+1    ;yes, fetch status word
	ret                          ;done, return status to caller
;"error" fatal error - types error message on cty and halts processor
error:
	movei 1,errmsg               ;point to error message string
	hrli 1,440700                ;make ascii byte pointer
error1:
	ildb 2,1                     ;get next character of error string
	cain 2,0                     ;done on zero byte
	jrst 4,.                     ;kiss the world good-bye...
	call typchr                  ;type character on cty
	jrst error1                  ;go do next character if any
;"typchr" type one character from ac 2 onto the cty
typchr:
	consz tty,1b31               ;output busy?
	jrst .-1                     ;yes, wait for it to be done
	datao tty,2                  ;type character to cty
	ret                          ;done, return to caller
;"done" finished loading program from magtape - now see if operator
;wants default entry vector or eddt dispatch
done:
	cono apr,200300              ;iob reset, clear errors
	cono pi,610400               ;clear all, shut off pi system
	movei 2,400000               ;prepare datao
	datao pag,2                  ;to shut off the ki pager
	movei 2,15                   ;send a carriage return
	call typchr                  ;type character on cty
	movei 2,12                   ;send a line feed
	call typchr                  ;type character on cty
	conso tty,1b30               ;finished receiving a character yet?
	jrst .-1                     ;no, wait for it to be done
	datai tty,2                  ;yes, collect it
	andi 2,177                   ;remove parity bit
	caie 2,15                    ;carriage return typed?
	jrst 100                     ;no, go to eddt dispatch
	jrst 0(1)                    ;yes, dispatch through jrst word in ac 1
errmsg:
	asciz /
Fatal error
/
stackp:
	iowd pdlsiz,stack            ;stack pointer initialization word
chksum:
	block 1                      ;checksum of boot through stackp
endend:
	jrst boot                    ;entry vector for readin mode
wrdcnt==.-boot                  ;how many words to put on paper tape
stack:
	block pdlsiz
chncmd:
	block chnbsz                 ;buffer for channel command programs
ifg .-buffer,<
	printx Bootstrap overflows into tape block buffer!!!
	>
dephase                         ;stop assembling for runpga
end start                       ;set entry vector to user-mode program
