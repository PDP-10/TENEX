.NOERROR
.MOUNT TST
.R SETSRC
*A TST,*
;%2(12) VERSION NUMBER OF FRTBLI.CTL	17 APR 1974
; NAME:	FRTBLI.CTL
; DATE:	18 SEP 1973
;
; FUNCTION:	THIS CONTROL FILE BUILDS THE STANDARD FORTRAN COMPILER
;		FROM ITS BASIC SOURCES.  IT UTILIZES DSKB:[10,7] FOR
;		FIELD IMAGE SOFTWARE AS REQUIRED BY -10 QA.
;
; INPUT:	THE FOLLOWING FILES ARE REQUIRED BY THIS JOB IN THE
;		DISK AREAS INDICATED:
;
;	DSKB:[10,7]
;		C.MAC
;		SCNMAC.MAC
;		SCAN.REL
;		WILD.REL
;		HELPER.REL
;		DIRECT.SHR
;		JOBDAT.REL
;		LINK.SHR
;		MACRO.SHR
;		COMPIL.SHR
;
;	NEW:
;		BLIS10.SHR	VERSION 5(110) OR LATER
;
;	DSK:[AREA UNDER WHICH FRTBLI.CTL IS BEING RUN]
;
;		INDIRECT COMMAND FILES USED BY FRTBLI.CTL:
;		BLD.CMD		LOADS BUILD
;		COMMAN.CMD	COMPILES  COMMAN.REL
;		LEFT72.CMD	LOADS LEFT72
;		LEFTFM.CMD	LOADS LEFTFM
;		P0.CMD		LOADS FORTRA
;		P1.CMD		LOADS FORTB
;		P2S.CMD		LOADS FORTC
;		P2.CMD		LOADS FORTD
;		P3G.CMD		LOADS FORTE
;		P3R.CMD		LOADS FORTF
;		P3.CMD		LOADS FORTG
;
;		SOURCES FOR BUILDING SYNTAX TABLES:
;		BLIO.BLI
;		BUILD.BLI
;		DEFLT.BLI
;		ERROR0.BLI
;		ERRTB3.MAC
;		F72BNF.SYN
;		FMTLEX.BLI
;		FRMBNF.SYN
;		LEFT.BLI
;		NUMIO1.BLI
;		OUTZ.BLI
;		QTAB1.MAC
;		SCAN0.BLI
;		SCNR.BLI
;		TBL.BLI
;		TRACE1.BLI
;
;		REMAINING COMPILER SOURCES:
;
;
;
; OUTPUT:	THE FOLLOWING FILES ARE GENERATED BY THIS CONTROL JOB
;		AND WILL BE AVAILABLE ON THIS DISK AREA AT JOB TERMINATION.
;
;	DSK:[AREA UNDER WHICH FRTBLI.CTL IS BEING RUN]
;
;		FROM SYNTAX TABLE BUILDING SECTION:
;		*	INDICATES REQUIRED FORTRAN COMPILER SOURCE COMPONENT
;		BLIO.REL
;		BUILD.HGH
;		BUILD.LOW
;		BUILD.REL
;		DEFLT.REL
;		ERROR0.REL
;		ERRTB3.REL
;	       *F72BNF.BLI
;	       *FRMBNF.BLI
;		LEFT72.REL
;		LEFTFM.REL
;	       *LOOK72.BLI
;	       *LOOKFM.BLI
;	       *META72.BLI
;		METAFM.BLI
;		NUMIO1.REL
;		OUTZ.REL
;		QTAB1.REL
;		SCAN0.REL
;		SCNR.REL
;		TBL.REL
;		TRACE1.REL
;
;
;
;

P0BEG::
.SET WATCH ALL

;
;
; FIRST WE BUILD THE SYNTAX TABLE BUILDERS AND SYNTAX TABLES
;
; FIRST COMPILE AND LOAD THE TABLE BUILDING PROGRAM.

.RUN NEW:BLIS10
*BUILD_BUILD
;
;
;
; NOW COMPILE ALL I/O UTILITIES.
;
;
.RUN DSK:MACRO[10,7]
*QTAB1_QTAB1
;
;
;
.RUN DSK:MACRO[10,7]
*ERRTB3_ERRTB3
;
;
;

.RUN NEW:BLIS10
*SCAN0_SCAN0
;
;
;

.RUN NEW:BLIS10
*SCNR_SCNR
;
;
;

.RUN NEW:BLIS10
*TRACE1_TRACE1
;
;
;
.RUN NEW:BLIS10
*ERROR0_ERROR0
;
;
;

.RUN NEW:BLIS10
*BLIO_BLIO
;
;
;

.RUN NEW:BLIS10
*NUMIO1_NUMIO1
;
;
;

.RUN NEW:BLIS10
*DEFLT_DEFLT
;
;
;

.RUN NEW:BLIS10
*TBL_TBL
;
;
;

.RUN NEW:BLIS10
*OUTZ_OUTZ
;
;
;
; NOW LOAD THE BUILDER WITH I/O UTILITIES AND EXECUTE
.TYPE BLD.CMD
.RUN DSK:LINK[10,7]
*@BLD.CMD
.SAVE BUILD
;
;
;
; BUILD STATEMENT SYNTAX TABLES
.NOERROR
.RUN DSK:BUILD
*META72.BLI,F72BNF.BLI_F72BNF.SYN
*0
*N
;
;
;
; NOW BUILD FORMAT SYNTAX TABLES
.RUN DSK:BUILD
*METAFM.BLI,FRMBNF.BLI_FRMBNF.SYN
*0
*N
;
;
.NOERROR

; NOW DO THE COMPILATIONS FOR THE LOOK AHEAD TABLE BUILDERS.

.RUN NEW:BLIS10
*LEFT72_LEFT72.BLI
*LEFTFM_LEFTFM.BLI
;
;
;
; NOW LOAD, SAVE, AND EXECUTE THE GENERAL SYNTAX LOOK AHEAD BUILDER
PKLOD::
.CHKPNT PKLOD
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
;IGNORE ERRORS THROUGHOUT THIS SECTION FOR NOW......
.TY LEFT72.CMD
.RUN DSK:LINK[10,7]
*@LEFT72.CMD
.SAVE LEFT72
.RUN DSK:LEFT72
*3=LOOK72.BLI
*0
;
;
; NOW LOAD, SAVE, AND EXECUTE THE FORMAT LOOK AHEAD TABLE BUILDER
.TY LEFTFM.CMD
.RUN DSK:LINK[10,7]
*@LEFTFM.CMD
.SAVE LEFTFM
.RUN LEFTFM
*3=LOOKFM.BLI
*0
.NOERROR
;
;
; NOW REMOVE THE TABLES FROM FRMBNF.BLI AND F72BNF.BLI THAT ARE
; UNNECESSARY FOR PHASE 1
.TECO F72BNF.BLI
*NLEFTBUILDJSBIND0L.U0S;0L
*<I!0LQ0-."E0;'-L>
*NLEFTBUILDN-L.U0S;-L
=<I!0LQ0-."E0;'-L>EX
.DEL F72BNF.BAK
.TECO FRMBNF.BLI
*NLEFTBUILDJSBIND0L.U0S;0L
=<I!0LQ0-."E0;'-L>EX
.DEL FRMBNF.BAK
;
;
;
;000000000000000000000000000000000000000000000000000000000000
;*****************************************
; NOTE THAT ANY UNDEFINED GLOBALS
;IN THE LOADS INVOLVED IN THIS BUILDING PROCESS UP TO THIS POINT
;CAN SAFELY BE IGNORED.  IT IS RECOMMENDED
;THAT IF AN INSTALLATION IS NOT MODIFYING THE SYNTAX TABLES THAT
;THE BUILDING PROCESS BE STARTED HERE AT P0STR.
;****************************************************
;
;
; NOW LET'S COMPILE AND LOAD PHASE 0.
;
;
;
; ********** FORTRA.CTL **********

P0STR::
.CHKPNT P0STR
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
;
MAINCK:: .RUN NEW:BLIS10
*MAIN/S_MAIN.BLI
;
;
;
; PREPARE ONESEG.BLI  FOR POSSIBLE SINGLE SEGMENT COMPILER
ONSGCK::  .COPY  ONESEG.BLI_MAIN.BLI
.TECO  ONESEG.BLI
=NFT1SEGFS010TTEX
.DEL  ONESEG.BAK
.RUN NEW:BLIS10
*ONESEG/S_ONESEG
;
;
;

GLOBCK:: .RUN NEW:BLIS10
*GLOBAL/S_GLOBAL
;
;
;

ERR3CK:: .RUN DSK:MACRO[10,7]
*ERR3_ERR3
;
;
;

INOUCK:: .RUN NEW:BLIS10
*INOUT_INOUT
;
;
;

ERRACK:: .RUN NEW:BLIS10
*ERROVA_ERROVA
;
;
;

UNENCK:: .RUN NEW:BLIS10
*UNEND_UNEND
;
;
;

;SCNCK::.DIRECT /CHECKSUM SCANHD,C[10,7],SCNMAC[10,7],SCAN[10,7]
; .COMPILE /COMPILE SCANHD+<C[10,7],SCNMAC[10,7],SCAN[10,7]>

; THE FOLLOWING REPLACES THE ABOVE COMPILE CLASS COMMAND
;.RUN DSK:MACRO[10,7]
;*C_SCANHD,C[10,7]
;*SCNMAC_SCANHD,SCNMAC[10,7]
;*SCAN_SCANHD,SCAN[10,7]
;
;WILDCK:: .RUN DSK:MACRO[10,7]
;*WILD_C,SCNMAC,WILD
;
;
;
.TY COMMAN.CMD
COMMCK:: .RUN DSK:MACRO[10,7]
*JOBD_JOBD
*COMMAN.CMD@
;
;
;
OWNDCK:: .RUN DSK:MACRO[10,7]
*OWNDM_OWNDM
;
;
;
; ALL PHASE 0 SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 0.
P0CK::
.CHKPNT P0CK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P0.CMD
.RUN DSK:LINK[10,7]
*@P0.CMD
.SSAVE FORTRA
;
;
;
P0END::
; THIS IS THE END OF PHASE 0 BUILDING SECTION.
;000000000000000000000000000000000000000000000000000000000000
; ********** FORTB.CTL **********

;111111111111111111111111111111111111111111111111111111111111
; NOW LET'S COMPILE AND LOAD PHASE 1.
;
;
;
SRACK::
.CHKPNT SRACK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
; LEXICA.BLI REQUIRES 75K OF CORE TO COMPILE
.PLEASE SET CORMAX TO 75K FOR A LITTLE WHILE - THANK YOU
.PLEASE ANOTHER MESSAGE WILL BE SENT WHEN THE COMPILATION IS DONE
.RUN NEW:BLIS10
*SRCA/S_SRCA.BLI
;
;
;

ERRBCK:: .RUN NEW:BLIS10
*ERROVB/S_ERROVB.BLI
;
;
;

ERROCK:: .RUN NEW:BLIS10
*ERROUT/S_ERROUT.BLI
;
;
;


FLTGCK:: .RUN DSK:MACRO[10,7]
*FLTGEN_FLTGEN.MAC
;
;
;

VLTPCK:: .RUN NEW:BLIS10
*VLTPPR/S_VLTPPR.BLI
;
;
;

ARRXCK:: .RUN NEW:BLIS10
*ARRXPN/S_ARRXPN.BLI
;
;
;


DOXPCK:: .RUN NEW:BLIS10
*DOXPN/S_DOXPN.BLI
;
;
;
CNSCK:: .RUN DSK:MACRO[10,7]
*CNSTCM_CNSTCM.MAC
;
;
;
DPSICK:: .RUN DSK:MACRO[10,7]
*DPSIM_DPSIM.MAC
;
;
;

FAZ1CK:: .RUN NEW:BLIS10
*FAZ1/S_FAZ1.BLI
;
;
;

GNRCCK:: .RUN NEW:BLIS10
*GNRCFN/S_GNRCFN.BLI
;
;
;

EXPRCK:: .RUN NEW:BLIS10
*EXPRES/S_EXPRES.BLI
;
;
;

FORMCK:: .RUN NEW:BLIS10
*FORMAT/S_FORMAT.BLI
;
;
;

ACT0CK:: .RUN NEW:BLIS10
*ACT0/S_ACT0.BLI
;
;
;

ACT1CK:: .RUN NEW:BLIS10
*ACT1/S_ACT1.BLI
;
;
;
STA0CK::.RUN NEW:BLIS10
*STA0/S_STA0.BLI
;
;
;

STA1CK:: .RUN NEW:BLIS10
*STA1/S_STA1.BLI
;
;
;

STA2CK:: .RUN NEW:BLIS10
*STA2/S_STA2.BLI
;
;
;

STA3CK:: .RUN NEW:BLIS10
*STA3/S_STA3.BLI
;
;
;

LISTCK:: .RUN NEW:BLIS10
*LISTNG/S_LISTNG.BLI
;
;
;
LEXSCK:: .RUN NEW:BLIS10
*LEXSUP/S_LEXSUP.BLI
;
;
;
CODECK:: .RUN NEW:BLIS10
*CODETA/S_CODETA.BLI
;
;
;
LEXICK:: .RUN NEW:BLIS10
*LEXICA/S_LEXICA.BLI
.PLEASE CORMAX CAN BE RESET NOW - THANK YOU
;
;
;
DRIVCK:: .RUN NEW:BLIS10
*DRIVER/S_DRIVER.BLI
;
;
;
; ALL PHASE 1 SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 1.
P1CK::
.CHKPNT P1CK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P1.CMD
.RUN DSK:LINK[10,7]
*@P1.CMD
.SSAVE FORTB
;
;
P1END::
;
; THIS IS THE END OF PHASE 1 BUILDING SECTION.
;111111111111111111111111111111111111111111111111111111111111
; ********** FORTC.CTL **********
;2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S
; NOW LET'S COMPILE AND LOAD PHASE 2S.
;
;
;

MEMCK::
.CHKPNT MEMCK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR

.RUN NEW:BLIS10
*MEMCMP/S_MEMCMP.BLI
;
;
;

ERRVC:: .RUN NEW:BLIS10
*ERROVC/S_ERROVC.BLI
;
;
;

SKSTCK:: .RUN NEW:BLIS10
*SKSTMN/S_SKSTMN.BLI
;
;
;
GO2CK::.RUN NEW:BLIS10
GOPT2/S=GOPT2.BLI
;
;
;
;

INPTCK:: .RUN NEW:BLIS10
*INPT/S_INPT.BLI
;
;
;

DOPTCK:: .RUN DSK:MACRO[10,7]
*DOPT_DOPT
;
;
;

P2S1CK:: .RUN NEW:BLIS10
*P2S1/S_P2S1.BLI
;
;
;

P2S2CK:: .RUN NEW:BLIS10
*P2S2/S_P2S2.BLI
;
;
;

CANNCK:: .RUN NEW:BLIS10
*CANNON/S_CANNON.BLI
;
;
;

COMSCK:: .RUN NEW:BLIS10
*COMSUB/S_COMSUB.BLI
;
;
;
.RUN DSK:MACRO[10,7]
*DGCMN=DGCMN
;
;
;

GOPTCK:: .RUN NEW:BLIS10
*GOPTIM/S_GOPTIM.BLI
;
;
;

UTILCK:: .RUN NEW:BLIS10
*UTIL/S_UTIL.BLI
;
;
;

PH2SCK:: .RUN NEW:BLIS10
*PH2S/S_PH2S.BLI
;
;
;
; ALL PHASE 2S SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 2S.
P2SCK::
.CHKPNT P2SCK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P2S.CMD
.RUN DSK:LINK[10,7]
*@P2S.CMD
.SSAVE FORTC
;
;
P2SND::
;
; THIS IS THE END OF PHASE 2S BUILDING SECTION.
;2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S2S
; ********** FORTD.CTL **********


;222222222222222222222222222222222222222222222222222222222222
; NOW LET'S COMPILE AND LOAD PHASE 2.
;
;
;
GRACK::
.CHKPNT GRACK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.RUN NEW:BLIS10
*GRAPH/S_GRAPH.BLI
;
;
;

ERRG:: .RUN NEW:BLIS10
*ERROVD/S_ERROVD.BLI
;
;
;

MOVA:: .RUN NEW:BLIS10
*MOVA/S_MOVA.BLI
;
;
;

DNPTCK:: .RUN DSK:MACRO[10,7]
*DNPT_DNPT
;
;
;

IOPTCK:: .RUN NEW:BLIS10
*IOPT/S_IOPT
;
;
;

;
;
GCMNCK::.RUN NEW:BLIS10
GCMNSB/S=GCMNSB
;
;
;
EFPCK:: .RUN NEW:BLIS10
*DEFPT/S_DEFPT.BLI
;
;
;

PNROCK:: .RUN NEW:BLIS10
*PNROPT/S_PNROPT.BLI
;
;
;

TSTRC:: .RUN NEW:BLIS10
*TSTR/S_TSTR.BLI
;
;
;
PHA2C:: .RUN NEW:BLIS10
*PHA2/S_PHA2.BLI
;
;
;
; ALL PHASE 2 SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 2.
P2CK::
.CHKPNT P2CK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P2.CMD
.RUN DSK:LINK[10,7]
*@P2.CMD
.SSAVE FORTD
;
P2END::
;
;
; THIS IS THE END OF PHASE 2 BUILDING SECTION.
;222222222222222222222222222222222222222222222222222222222222
; ********** FORTE.CTL **********


;3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G
; NOW LET'S COMPILE AND LOAD PHASE 3G.
;
;
;

STREK::
.CHKPNT STREK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.RUN NEW:BLIS10
*STREGA/S_STREGA.BLI
;
;
;

ERRR:: .RUN NEW:BLIS10
*ERROVR/S_ERROVR.BLI
;
;
;

REGUCK::.RUN NEW:BLIS10
*REGUTL/S=REGUTL.BLI
;
;
;
CMPLCK::.RUN NEW:BLIS10
*CMPLEX/S_CMPLEX.BLI
;
;
;
CMPBCK::.RUN NEW:BLIS10
*CMPBLO/S_CMPBLO.BLI
;
;
;
ALCBCK::.RUN NEW:BLIS10
*ALCBLO/S_ALCBLO.BLI
;
;
;
;
;
;

DOALCK:: .RUN NEW:BLIS10
*DOALC/S_DOALC.BLI
;
;
;

REGAC:: .RUN NEW:BLIS10
*REGAL2/S_REGAL2.BLI
;
;
;

RELBCK:: .RUN NEW:BLIS10
*RELBUF/S_RELBUF.BLI
;
;
;
.RUN NEW:BLIS10
*DATAST/S_DATAST.BLI
;
;
;
OUTMCK:: .RUN NEW:BLIS10
*OUTMOD/S_OUTMOD.BLI
;
;
;

PH3GK:: .RUN NEW:BLIS10
*PH3G/S_PH3G.BLI
;
;
;
; ALL PHASE 3G SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 3G.
P3GCK::
.CHKPNT P3GCK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P3G.CMD
.RUN DSK:LINK[10,7]
*@P3G.CMD
.SSAVE FORTE
;
;
P3GND::
;
; THIS IS THE END OF THE PHASE 3G BUILDING SECTION.
;3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G3G
; ********** FORTF.CTL **********


;3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R
; NOW LET'S COMPILE AND LOAD PHASE 3R.
;
;
;

P3RCK::
.CHKPNT P3RCK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.RUN NEW:BLIS10
*P3R/S_P3R.BLI
;
;
;
; ALL PHASE 3R SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 3R.
.TYPE P3R.CMD
.RUN DSK:LINK[10,7]
*@P3R.CMD
.SSAVE FORTF
;
;
P3RND::
;
; THIS IS THE END OF THE PHASE 3R BUILDING SECTION.
;3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R3R
; ********** FORTG.CTL **********


;333333333333333333333333333333333333333333333333333333333333
; NOW LET'S COMPILE AND LOAD PHASE 3.
;
;
;
OPTCK::
.CHKPNT OPTCK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.RUN NEW:BLIS10
*OPTAB/S_OPTAB.BLI
;
;
;

ERRG:: .RUN NEW:BLIS10
*ERROVG/S_ERROVG.BLI
;
;
;

CGDOCK:: .RUN NEW:BLIS10
*CGDO/S_CGDO.BLI
;
;
;

CGSTCK:: .RUN NEW:BLIS10
*CGSTMN/S_CGSTMN.BLI
;
;
;

GEXCK:: .RUN NEW:BLIS10
*CGEXPR/S_CGEXPR.BLI
;
;
;
OPGNCK:: .RUN DSK:MACRO[10,7]
*OPGNTA_OPGNTA.MAC
;
;
;

PEEPCK:: .RUN NEW:BLIS10
*PEEPOP/S_PEEPOP.BLI
;
;
;

LISTCK:: .RUN NEW:BLIS10
*LISTOU/S_LISTOU.BLI
;
;
;

DEBUCK::.RUN NEW:BLIS10
DEBUG/S_DEBUG.BLI
;
;
;
;
PHA3CK:: .RUN NEW:BLIS10
*PHA3/S_PHA3.BLI
;
;
;
; ALL PHASE 3 SOURCES ARE NOW COMPILED.  LET'S LOAD PHASE 3.
P3CK::
.CHKPNT P3CK
.MOUNT TST
.R SETSRC
*A TST,*
.SET WATCH ALL
.NOERROR
.TYPE P3.CMD
.RUN DSK:LINK[10,7]
*@P3.CMD
.SSAVE FORTG
P3END::
;
; THIS IS THE END OF THE PHASE 3 BUILDING SECTION.
;333333333333333333333333333333333333333333333333333333333333
;
;
; DELETE ALL UNNECESSARY LOW FILES
.DEL  FORT?.LOW
;
;
.KJOB/F
; END OF FRTBLI.CTL
