BLIS10.DOC                                                        Page 1
VERSION 5(124) -- OCTOBER, 1974


**Copyright 1972,1973,1974 Digital Equiptment Corp., Marlboro, Mass**


1.0      SUMMARY

         This document describes version 5  of  the  BLISS-10  Compiler.
         Version   5   replaces   version   4.    BLISS-10  requires  no
         modifications for  DATE75.   Version  5  includes  several  new
         optimizations,  removal  of the run time register BREG, and bug
         fixes.



1.1      Bibliography

         BLIS10 Programmer's Reference Manual, (February  1974  Software
         Notebook   Update)  Reflecting  Version  4  of  BLISS-10.   All
         references in square brackets in this document unless otherwise
         noted refer to the above document.

         "A Collection of Readings on  the  Subject  of  BLIS10",  DECUS
         10-118 Part II



1.2      Monitors

         The BLIS10 compiler will run with any monitor supported by  DEC
         for the DECsystem-10.



1.3      Related System Software

         MACRO 47(113)
         LINK-10 1A
BLIS10.DOC                                                        Page 2
BLISS-10 VERSION 5 EXTERNAL CHANGES


2.0      BLISS-10 VERSION 5 EXTERNAL CHANGES



NOTE:    Changes to BLISS-10 as of Version 3 include the following:



         BLISS-10 CCO 2.25
         New Listing Format

         The BLISS-10 output listing format has been altered to make  it
         suitable  as  input  to the MACRO-10 assembler.  Loading of the
         REL file produced directly by BLISS-10  will  generate  a  core
         image  identical  to  that  produced  by  the  loading  of  the
         corresponding REL file produced by MACRO-10 exclusive of symbol
         table information.



         BLISS-10 CCO 2.31
         Restrictions on Global Names.

         Names declared as globals (i.e., GLOBAL, GLOBAL ROUTINE, GLOBAL
         BIND,  GLOBALLY  INDEXES,  GLOBALLY  NAMES) will be checked for
         uniqueness in 6 chars  to  all  other  names  declared  global.
         Furthermore,  it will no longer be possible to redeclare a name
         declared global as a global in an inner block.   A  name  which
         has been declared global may be redeclared in an inner block as
         a non-global at which point it will be checked  for  uniqueness
         to  10  chars with all other names declared at that blocklevel.
         In general, those names  which  would  be  passed  to  MACRO-10
         through  the  BLISS-10  output  listing  will  be  checked  for
         uniqueness to 6 characters.  All other names which would not be
         passed  to  MACRO-10  will  be  checked  for  uniqueness to ten
         characters.



         BLISS-10 CCO 2.32
         Change of Default Module Name

         The default module name for a module with no module head is now
         MAIN.   It  was  necessary  to  change the old default since it
         allowed generation of  compiler  defined  symbols  which  could
         begin  with  a  non-alphabetic.   These  symbols  if  passed to
         MACRO-10 would be flagged as illegal MACRO syntax.   Therefore,
         MAIN  will  be  the  default module name and compiler generated
         address tags will be MAIN.C, MAIN.F,  MAIN..,  MAIN.P,  MAIN.L,
         and MAIN.G which are all acceptable to MACRO-10.



NOTE:    Changes to BLISS-10 as of Version 3A include the following:
BLIS10.DOC                                                        Page 3
BLISS-10 VERSION 5 EXTERNAL CHANGES


         BLISS-10 CCO 3.5 SPR 10-9256, 10-9257-1
         CCL now works with BLISS-10.



         BLISS-10 CCO 3.6
         Changes to Command Scanner

         The command scanner now  ignores  space,  horizontal  tab,  and
         carriage  return.  A command string is terminated by line feed,
         vertical tab, or form feed.



         BLISS-10 CCO 3.12
         Change to Format of Warning and Error Messages

         BLISS-10 now outputs  '%'  with  warning  and  '?'  with  error
         messages so as to be compatible with BATCH.



NOTE:    Changes to BLISS-10 as of Version 4 include the following:



         BLISS-10  No CCO Number.
         The REQUIRE Declaration.

         The   REQUIRE   declaration   has   been   implemented.     Its
         specification  is  included  in  the BLISS-10 reference manual.
         See [1.29].



         BLISS-10  No CCO Number.
         The IFSKIP Construct.

         The syntax of this construct is as follows:

              IFSKIP E1 THEN E2 ELSE E3;

         First, E1 is evaluated;  if the last instruction of E1 causes a
         skip  (including  a  routine  call  with  no parameters), E2 is
         evaluated.  Otherwise, E3 is evaluated.



         BLISS-10  No CCO Number.
         The FSAVE (/F) Switch

         An  entry  of  "FSAVE"  in  the  module   head,   or   switches
         declaration,  or  a  "/F" in the compiler command string causes
         saving of FREG on routines calls with no parameters, locals, or
BLIS10.DOC                                                        Page 4
BLISS-10 VERSION 5 EXTERNAL CHANGES


         saved registers.



         BLISS-10  No CCO Number
         The PROLOG (/P) Switch

         Causes generation of routine prolog-epilog code in this module.



         BLISS-10  CCO 3.17
         Implementation of Special Characters within Identifiers

         The three special characters:  "%", "$", and "." are now  legal
         as  characters  within  an  identifier  when that identifier is
         immeadiately preceeded by  a  question  mark.   Therefore,  the
         following is now legal:

              EXTERNAL ?.JBSYM;   SYMADR_ .?.JBSYM<0,18>;



         BLISS-10 CCO 3.21
         Version Number Construct

         A version number construct has been added to the  module  head.
         Its syntax is as follows:

         MODULE NAME(VERSION= <vno> )=

         where:

         <vno> ::=     <major> <minor> ( <edit> ) [ - <who> ]
         <major> ::=   <octals> in range 0-777
         <minor> ::=   letter (A-Z) or null
         <edit> ::=    <octals> in range 0-777777
         <who> ::=     octal digit
         <octals> ::=  string of octal digits

         <major> and <edit> must be specified, but the other  categories
         default to:

         <minor> ::=   null (zero)
         <who> ::=     0

         This syntax is  the  same  as  that  output  by  the  "VERSION"
         command.  For example, a standard declaration might look like:

         MODULE DRIVER(VERSION=3A(51)-1))=

         This construct will generate  the  specified  standard  version
         number in location .JBVER (loc.  137).
BLIS10.DOC                                                        Page 5
BLISS-10 VERSION 5 EXTERNAL CHANGES


         BLISS-10 CCO 3.18
         English Language Diagnostics

         BLISS-10 now prints alphanumeric  error  messages  by  default.
         The  old  style  of  numbered  error messages can be invoked by
         either  a  "NOENGLISH"  in  the   module   head   or   switches
         declaration,  or  a  "/-A"  in  the  compiler  command  string.
         English mode diagnostics can be re-instated by an "ENGLISH"  in
         the  module  head  or  switches  declaration  or  a "/A" in the
         commmand string.  These messages conform to ERRSTD  -  standard
         error message format.



         BLISS-10  CCO 3.20
         Assigned Line Numbers

         The line numbers assigned by the compiler to source  files  for
         purposes  of  listing  are  no longer octal, but decimal.  This
         affects both the  standard  listing  and  the  cross  reference
         tables.



         BLISS-10  CCO 3.22
         The START (/B) Switch

         BLISS-10 no longer outputs a start block within the  .REL  file
         unless directed to do so by either a STACK or START declaration
         within the module head, the START switch,  or  a  "/B"  in  the
         command  string.   Also, the MACRO listing will reflect this by
         having no name follow the end pseudo-op unless so  directed  by
         the above criteria.



         BLISS-10  CCO 3.19   QAR 902
         Up-page References in Macro Listings

         When BLISS-10 discovers an instruction reference to a  location
         physically  "upwards"  on the page, for example the end JRST of
         an INCR or DECR loop, BLISS-10 will print "^^^" in the  comment
         field of the instruction to signify the situation.  This is the
         same as what version 2J of the compiler used to do.



         BLISS-10  CCO 3.34   QAR 996
         Precedence of FIX, FLOAT and FNEG

         The precedence of FIX and FLOAT is now 5.   The  precedence  of
         FNEG is now 7.
BLIS10.DOC                                                        Page 6
BLISS-10 VERSION 5 EXTERNAL CHANGES


         BLISS-10 CCO 3.36
         BREG eliminated

         The run time register BREG has been freed in order to  gain  an
         additional general register.  Coroutine linkage is consequently
         different.



         BLISS-10 CCO 3.42
         BREG reinstated

         CCO 3.36 has been removed  in  order  to  facilitate  releasing
         BLISS-10  without  rereleasing FORTRAN-10.  The change involved
         will be reinstalled in BLISS-10 version 5 which will  be  ready
         when FORTRAN-10 version 2 is released.



NOTE:    Changes to BLISS-10 as of Version 5 include the following:



         BLISS-10 CCO 3.43
         BREG eliminated(CCO 3.36 reinstated)

         The run time register BREG has been freed in order to  gain  an
         additional general register.  Coroutine linkage is consequently
         different.
BLIS10.DOC                                                        Page 7
BLISS-10 VERSION 5 KNOWN BUGS AND DEFICIENCIES


3.0      KNOWN BUGS AND DEFICIENCIES



         Although it is possible to generate code conditionally,  it  is
         generally  not possible to use a compile time conditional on an
         arbitrary declaration.



         Compile switches and those specified in  SWITCHES  declarations
         remain  in  effect  only for the duration of the block in which
         the compiler encounters them.  This holds true for /K and /L in
         particular.  A peculiar result occurs in the following case:

         Assume a module is divided into source files as follows:

         FILENAME:   CONTENTS:
         ---------   ---------

         MODULE.BLI  MODULE M=

         BEGIN.BLI   BEGIN(followed by a large set of declarations)

         BODY.BLI    ROUTINE SQUARE(A)=.A*.A;

         END.BLI     END

         Assume a command string to BLISS-10 as follows:

         */MBODY,BODY=MODULE,/KBEGIN,/LBODY,END

         The intent is to suppress only the  listing  of  the  BEGIN.BLI
         file.   However, the /K is processed before the block headed by
         BEGIN is opened.  Thus the BEGIN file is  not  listed.   /L  is
         processed  before the BODY file is opened thus the BODY file is
         listed.  However, after the END of file END.BLI  is  processed,
         the  effect  of  /L  must  be terminated with the block end and
         since /K was seen before the block opened, it  regains  effect.
         Thus  the  output  of  the module body code and constant areas,
         etc.   is  suppressed.   The  actual  outcome   is   thus   not
         necessarily  what  the  user might expect.  This problem can be
         circumvented by inserting a SWITCHES NOLIST at the start of the
         BEGIN.BLI file after the outermost block of the module has been
         opened (i.e., after BEGIN)  in  place  of  /K  in  the  command
         string.



         GLOBAL  BINDS  to  zero  and   negative   values   are   listed
         incorrectly.
BLIS10.DOC                                                        Page 8
BLISS-10 VERSION 5 KNOWN BUGS AND DEFICIENCIES


         SPR 10-10,404
         Entry information does not  get  to  the  MACRO  listing  file.
         Also,  a  spurious WARN 627 is generated in some cases of valid
         ENTRY information.



         Some cases of IF statements including .VREG + constant  in  the
         ELSE part generate ERROR 12.



         QAR 1409
         /X (syntax only) misses some errors.
BLIS10.DOC                                                        Page 9
CHANGES IN INSTALLATION INSTRUCTIONS.


4.0      INSTALLATION INSTRUCTIONS



         Place BLIS10.SHR, BLIS10.LOW, BLIS10.ERR (if you  wish  english
         language  diagnostics),  BLIS10.HLP  (if you wish to be able to
         type .HELP BLIS10), and BLIS10.DOC (if you wish  this  document
         to  be  readily  available to users) on SYS:.  The compiler may
         then be executed by typing .R BLIS10 or by using  CCL  (e.   g.
         .COMPILE  A,B  or  .EXECUTE  A,B).  The compiler has a 35K high
         segment and a low segment  which  is  7K  initially  and  grows
         during  the  compilation (more rapidly if /C is used) depending
         on the size of modules being compiled.
BLIS10.DOC                                                       Page 10
BLISS-10 VERSION 5 INTERNAL CHANGES


5.0      The following changes have been made to the compiler to correct
         internal problems and are not reflected in the external changes
         noted in section 2.  Changes described in  section  2  are  not
         repeated here.



NOTE:    Changes to BLISS-10 as of Version 3 include the following:



         BLISS-10 CCO 2.20 SPR 10-8570
         Infinite Loop on a Syntax Error

         In certain cases,  when  fewer  than  the  required  number  of
         arguments  were  passed  on a MACRO call, the compiler would go
         into an infinite loop.  This was the  result  of  two  internal
         errors.  First, old pointers in the MACRO formal argument block
         were not cleared properly, and second the compiler was handling
         null  MACRO  arguments  incorrectly.   Now the compiler handles
         such expansions correctly, replacing a null or missing argument
         in  a  MACRO  call  with  the  null (empty) character string as
         specified in the reference manual.



         BLISS-10 CCO 2.22 SPR 10-8574
         Certain constant pointers had a missing low order AC bit.

         The compiler lost the low order bit of what  would  be  the  AC
         field  in  a  PDP-10  instruction.   The  byte pointer building
         mechanism was utilized to build  this  type  of  constant,  and
         since  the  bit in question is not used in the standard 10 byte
         pointer, it was left zero where it should  not  have  been.   A
         field size was altered to preserve the value of the bit.



         BLISS-10 CCO 2.23 SPR 10-8574
         Number of Literals Listed at Compilation End Was Incorrect

         The total number of literals listed at the end of a compilation
         was off by 2.  This has been corrected.



         BLISS-10 CCO 2.24
         Incorrect code Generation for Certain Cases of _

         Since the  result  lexeme  of  a  previous  similar  store  was
         available,  the  result  of  the  store  in  question  was also
         available;  so that code generation wasn't required to  develop
         the  value of the store.  However, as a result the store itself
         wasn't performed.  Therefore, we should never turn on a  result
BLIS10.DOC                                                       Page 11
BLISS-10 VERSION 5 INTERNAL CHANGES


         bit  for  a store operation in order to force the store to take
         place every time.



         BLISS-10 CCO 2.26
         Incorrect Compiler Generated Names

         Some compiler generated names were  incorrectly  generated  for
         the  output listing.  The compiler incorrectly assumed that all
         module  names  contained  at  least  four  characters  and  was
         incorrectly  building  some names for modules with module names
         of 3 characters or fewer.



         BLISS-10 CCO 2.27
         Core lost from the Symbol Table

         Some symbol table entries were being detached at block end, but
         the  space  was not returned to free core.  The sense of a test
         in the symbol purge routine was incorrect.



         BLISS-10 CCO 2.28
         Simplify CT Handling

         Change the direction of insertion of literals from low to  high
         order  literal table modules instead of high to low to simplify
         debugging and general access.



         BLISS-10 CCO 2.29
         Removal of H3RINI

         The old overlay accounting module H3RINI is no longer required.
         It and hooks to it have been removed.



         BLISS-10 CCO 2.30
         Correction of module Length Message.   The  length  of  routine
         prologs  and  epilogs  was not counted in the length of modules
         which had them.



NOTE:    Changes to BLISS-10 as of Version 3A include the following:



         BLISS-10 CCO 3.1
BLIS10.DOC                                                       Page 12
BLISS-10 VERSION 5 INTERNAL CHANGES


         Appropriate Routine Names Made GLOBAL

         To compile BLISS-10 one must no  longer  use  /G  to  make  all
         routines  GLOBAL.   Only a routine referenced in a module other
         than that in  which  it  is  declared  is  explicitly  declared
         GLOBAL.



         BLISS-10 CCO 3.2
         Added Module Version Numbers

         A module version number was added to each module.  A symbol  of
         the  form  xxxxV  where  xxxx are the first four letters of the
         module name was globally bound to a decimal number to  indicate
         the  version  of  the individual module update.  These symbols,
         therefore, appear in the compiler loader map and facilitate the
         keeping  track  of  internal  changes.   This version number is
         updated in a module each time an edit is made to  that  module.
         The  standard  -10  edit  version number is updated each time a
         load is made of the the compiler during development.



         BLISS-10 CCO 3.3
         Add Compiler Name Word in Loader Name Block

         The name block in the  binary  output  file  was  increased  in
         length  by  one  word  to accommodate the code for the BLISS-10
         Compiler (octal 6) as desired by LINK-10.  This enables LINK to
         list the name of the compiler which produced each module loaded
         in the loader map.



         BLISS-10 CCO 3.4
         Incorrect Code Generation Bug.

         A combination of events resulted in the generation of incorrect
         code  in a case where the result bit in a graph table entry was
         left on after one of its component lexemes had been invalidated
         as  a  result  of  re-use of a temporary register.  The current
         solution to the problem produces correct code in  the  formerly
         bad   case,  but  turns  off  an  optimization.   The  loss  of
         optimization doesn't appear significant.  It added  only  about
         eight words to the BLISS-10 compiler.



         BLISS-10 CCO 3.7 SPR 10-9251-3
         Fix  to  Partial  Word  Declared  Register  Compare   to   Zero
         Optimization.

         Diagnosis and fix were correct and accepted as submitted on the
BLIS10.DOC                                                       Page 13
BLISS-10 VERSION 5 INTERNAL CHANGES


         SPR.    Because  the  dot  operator  was  used  inconsistently,
         incorrect code was generated for an optimization test.



         BLISS-10 CCO 3.7 SPR 10-8668
         Generation of Special Functions Within Conditional Assembly

         Diagnosis and fix were correct and accepted as submitted on the
         spr.   Some code to handle special functions was generated even
         though code generation had been turned off.  This condition was
         not tested.



         BLISS-10 CCO 3.11, 3.14, 3.15
         Default and Proper Listing File

         These three change orders standardize the listing file:

         1.  A default listing (without /M, etc.) will now not  generate
         listings  of  PLIT, CONSTANT, and LITERAL areas or the MACRO-10
         'END' pseudo-op.

         2.  Prologs and epilogs are now included  in  a  MACRO  listing
         when a binary file is not specified.

         3.   EXTERN pseudo-ops are now included in a MACRO listing when
         a binary file is not specified.



         BLISS-10 CCO 3.13
         Macro Call with a Comma Included in a Literal Actual.

         This situation  is  now  handled  correctly.   The  get  actual
         routine  did  not  differentiate  between  literals  and  other
         expressions.  Therefore, a comma  ended  a  specification  even
         though it was within a literal.



         BLISS-10 CCO 3.16 SPR 10-9352
         Multiple Store of a Non-Trivial Value Through a Half-Word Store
         of a Declared Register.

         Because of  the  method  of  determining  the  address  of  the
         non-trivial  value  when  generating  the store to the declared
         register, the availability of the temporary register (used  for
         the non-trivial value) was voided.

         The fix was a local change to the half-word store  to  register
         routine  which  causes  a  correct  call  to  the 'get address'
         routine.
BLIS10.DOC                                                       Page 14
BLISS-10 VERSION 5 INTERNAL CHANGES


         BLISS-10 CCO 3.8 SPR 10-10,066
         Bad call to RELEASESPACE from MEXTOUT.



         BLISS-10 CCO 3.9 SPR 10-10,065
         Improper handling of negative offsets.



         BLISS-10 CCO 3.10 SPR 10-10,061
         R1 not initialized in GPTR.



NOTE:    Changes to BLISS-10 as of Version 4 include the following:



         BLISS-10  CCO 3.19 QAR 902

         This CCO covers a number of internal coding improvements.  Most
         of  the  changes  were  to H3DRIV and consist of more efficient
         coding techniques.



         BLISS-10 CCO 3.23 QAR 1247-1253

         This CCO is in the same  spirit  as  CCO  3.19.   Most  of  the
         changes were to LODRIV and H3DRIV.



         BLISS-10 CCO 3.24 QAR 1395

         The error message issued when BLIS10 runs out of core could not
         be  read  in  from disk since there was no core to do so.  This
         caused an  infinite  loop.   The  out-of-core  message  is  now
         core-resident.



         BLISS-10 CCO 3.25 SPR 10-9252

         Bad register usage for REPLACEX.



         BLISS-10 CCO 3.26

         Improper message suppression in CCL mode.
BLIS10.DOC                                                       Page 15
BLISS-10 VERSION 5 INTERNAL CHANGES


         BLISS-10 CCO 3.27 QAR 1285

         Bad external declaration of .ENT.  .EXT.   type  symbols  (When
                                            _
         SWITCHES PROLOG given).



         BLISS-10 CCO 3.28 QAR 1286

         Switch table simplified.



         BLISS-10 CCO 3.29 SPR 10-8672

         Routines HASH and WRITEFINAL simplified.



         BLISS-10 CCO 3.30 SPR 10-8670

         Fatal syntax error due to duplicate forward declaration.



         BLISS-10 CCO 3.31

         Erroneous out-of-core condition during error processing.



         BLISS-10 CCO 3.32 QAR 1267

         Duplication of BLOCKPURGE.



         BLISS-10 CCO 3.33

         Bad switch table lookup.



         BLISS-10 CCO 3.35

         Bad references to compiled  literal  table(XXXX.L)  when  table
         exceeds 256 words.



         BLISS-10 CCO 3.37

         Bad SIX12 linkage.
BLIS10.DOC                                                       Page 16
BLISS-10 VERSION 5 INTERNAL CHANGES


         BLISS-10 CCO 3.38 SPR 10-10,064

         Bad listing of constant pointer area  when  CREATE  expressions
         are used.



         BLISS-10 CCO 3.39 SPR 10-12,000

         Bad code generation for rare SELECT construction.



         BLISS-10 CCO 3.40 QAR 1322 QAR 1529

         Bad code generation for a plit to a relocatable pointer with  a
         non-zero left half.



         BLISS-10 CCO 3.41

         Bad code generation for expressions of the form NAME +  LITERAL
         when the left half of the literal is non-zero.



NOTE:    Changes to BLISS-10 as of Version 5 include the following:





[End of BLIS10.DOC]
