!COPYRIGHT 1972,1973,1974 DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS. 01754
!FILENAME:	H2CNTR.BLI
!DATE:		29 MAY 73	MGM/FLD

%3.2%	GLOBAL BIND H2CNV=1;	!MODULE VERSION NUMBER
GLOBAL ROUTINE GPROLOG(RFSTE,DISPLAYP,NOFORMALS,NOLOCALS)=
  ! GENERATE CODE FOR THE PROLOG OF FCN OR RTN. PUTS OUT THE "LUNDEWORD"
  ! FOR CO-ROUTINE STACK INFORMATION.
  !	FORMALS:	DISPLAYP	1 --> FCN, 0 --> RTN
  !			NOFORMALS	# OF FORMALS
  !			NOLOCALS	# OF LOCALS (BODY OF ROUTINE NOT
  !					NECESSARILY A BLOCK)
   
  ! COMPUTES THE VALUE OF NOSAVREG (# OF REGS SAVED IN PROLOG) WHICH
  ! IS USED BY GEPILOG TO POP THE REGS.  IN THE ROUTINE CASE IT OUTPUTS
  ! THE JSP TO ENTRY CODE ONLY IF THERE ARE LOCALS, FORMALS, OR REGS SAVED

  BEGIN REGISTER I,T,S;
    IF .TTFLAG THEN TIMEIN();
    IF .LUNDEFLG THEN
	(I_CT[NEWBOT(.CODEPTR,1),1]; (.I-1)<RELOCF>_LUNDERELOC);
     IF .DEBFLG THEN DEBIN(.RFSTE);
     IF .DISPLAYP THEN
	BEGIN
        CODE(PUSH,.SREG,.FREG,0);
        INCR I FROM 1 TO .FUNCTIONLEVEL DO
    	CODE(PUSH,.SREG,.FREG^18 OR .I,0);
        CODE(HRRZ,.FREG,.SREG,0);
        IF .FUNCTIONLEVEL NEQ 0 THEN
            CODE(SUBI,.FREG,.FUNCTIONLEVEL,0);
        CODE(PUSH,.SREG,.FREG,0);
        NOSAVREG_0;
        NOLOCALS_.NOLOCALS+.NOSVR;
	INCR I FROM 0 TO 15 DO
	  IF .REGUSE^(-.I) THEN
	    BEGIN
	      CODE(MOVEM,.I,
		   (.FUNCTIONLEVEL+.DISPLAYP+.NOSAVREG+1) OR .FREG^18,0);
	      NOSAVREG_.NOSAVREG+1
	    END;
	CODE(ADD,.SREG,LITA(LITLEXEME(.NOLOCALS*(1^18 OR 1))),0);
        NOPSAV_.NOPSAV+.NOSAVREG;  !TEMP STAT PATCH
	MAXLOCAL_.MAXLOCAL-1
	END
     ELSE
	BEGIN
          LOCAL LASTONE;
          NOSAVREG_0;
          LASTONE_(INCR I FROM -15 TO 0 DO
            IF NOT .MODREGM^.I THEN
              IF .REGUSE^.I THEN NOSAVREG_.NOSAVREG+1
                            ELSE EXITLOOP .I);
          REGUSE_.REGUSE<0,-.LASTONE>;
	MAXLOCAL_.MAXLOCAL - (.NOSVR-.NOSAVREG+2);
	IF ((.MAXLOCAL+.NOFORMALS+.NOSAVREG+.REGUSE) NEQ 0) OR .LUNDEFLG OR .FFFLAG
	    THEN CODE(JSP,.JSPREG,GMA(.RENTLEX[.NOSAVREG]),0);
        IF .REGUSE NEQ 0 THEN INCR I FROM .LASTONE TO 0 DO
          IF .REGUSE^.I THEN
            (MAXLOCAL_.MAXLOCAL+1; NOSAVREG_.NOSAVREG+1;
             CODE(PUSH,.SREG,-.I,0));
	IF .NOLOCALS NEQ 0 
	    THEN CODE(ADD,.SREG,LITA(LITLEXEME(.NOLOCALS*(1^18+1))),0)
	END;
    IF .LUNDEFLG THEN
      BEGIN
	S_2+(IF .DISPLAYP THEN .FUNCTIONLEVL+1+.NOSVR ELSE .NOSAVREG);
	T_IF .MAXLOCAL NEQ 0 THEN .S+1 ELSE 0;
	.I_(.T AND 1^9-1)^27 OR ((.NOFORMALS) AND 1^9-1)^18 OR
	    ((IF (S_.S+(.MAXLOCAL+.NOFORMALS)) EQL 2 THEN 1 ELSE .S) AND 1^18-1)
      END
  END;
GLOBAL ROUTINE GEPILOG(RFSTE,DISPLAYP,NOFORMALS,NOLOCALS)=
  ! GENERATE CODE FOR EPILOG OF FCN (DISPLAYP=1) OR ROUTINE.

  BEGIN LOCAL SAVOFFSET,SUBAMOUNT;
    IF .TTFLAG THEN TIMEOUT();
    IF .DEBFLG THEN DEBOUT(.RFSTE);
    SUBAMOUNT_
      IF .DISPLAYP THEN .NOLOCALS+.NOSVR+.FUNCTIONLEVEL+1 ELSE 0;
    SAVOFFSET_0;
    IF .SUBAMOUNT NEQ 0 THEN
      BEGIN
	INCR I FROM 0 TO 15 DO
	  IF .REGUSE^(-.I) THEN
	    BEGIN
	      CODE(MOVE,.I,
		   (.FUNCTIONLEVEL+.DISPLAYP+.SAVOFFSET+1) OR .FREG^18,0);
	      SAVOFFSET_.SAVOFFSET+1
	    END;
	IF NOT .DISPLAYP THEN SUBAMOUNT_.SUBAMOUNT+.SAVOFFSET;
	CODE(SUB,.SREG,LITA(LITLEXEME(.SUBAMOUNT*(1^18 OR 1))),0);
	CODE(POP,.SREG,.FREG,0);
	CODE(POPJ,.SREG,0,0);
      END
    ELSE
      BEGIN
      IF .NOLOCALS NEQ 0 THEN
	CODE(SUB,.SREG,LITA(LITLEXEME(.NOLOCALS*(1^18+1))),0);
      IF ((.MAXLOCAL+.NOFORMALS+.NOSAVREG) EQL 0) AND NOT .LUNDEFLG AND NOT .FFFLAG
	THEN CODE(POPJ,.SREG,0,0)
        ELSE BEGIN LOCAL CONTIGIND;
               CONTIGIND_.NOSAVREG;
               IF .REGUSE NEQ 0 THEN INCR I FROM 0 TO 15 DO
                 (IF .REGUSE THEN (CODE(POP,.SREG,.I,0);
                                   CONTIGIND_.CONTIGIND-1);
                  REGUSE_.REGUSE^(-1));
               CODE(JRST,0,GMA(.RXITLEX[.CONTIGIND]),0)
             END
      END;
  END;
GLOBAL ROUTINE GFRC2(P,F,M)=
  %P IS LAST(IF ANY) PARAMETER, F IS ROUTINE(FUNCTION) NAME, AND
   M IS THE NUMBER OF PARAMETERS. RETURNS LEXEME FOR VALUE REGISTER.%
  BEGIN
    REGSEARCH(P,0);
    IF .M NEQ 0 THEN
      BEGIN
        PCIVR(.P,0);
        CODE(PUSH,.SREG,MEMORYA(.P),0);
	SAVREG(.F);
        CODE(PUSHJ,.SREG,GMA(GAT(.F)),0);
        CODE(SUB,.SREG,LITA(LITLEXEME(.M*#1000001)),0)
      END
    ELSE
      BEGIN
	SAVREG(.F);
	CODE(PUSHJ,.SREG,GMA(GAT(.F)),0)
      END;
    CLEARSOME();
    SESTOG_.SESTOG OR 4;
    GETVREG()
  END;





!END OF H2CNTR.BLI
