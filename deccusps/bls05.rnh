.SPACING 1
.FILL
.JUSTIFY
.TITLE ^^BLISS-10 COMMAND STRINGS\\
.TAB STOPS 8,15
.LEFT MARGIN 8
.RIGHT MARGIN 70
.INDENT -8
^^BLISS-10 COMMAND STRINGS\\
.BLANK 3
^^BLISS-10\\ does not  use  the  standard  -10  command  scanner.
^However,  command string interpretation is similar to that of
other -10 ^^CUSPS\\.
.BLANK 3
^^.R BLIS10
.BREAK
*RELFIL,LSTFIL=SRC1,SRC2,...\\
.BLANK 3
.INDENT -8
1.	^Each file descriptor ^^[RELFIL,LSTFIL,SRC]\\ has the form:
.BLANK 1
^^DEVICE:FILENAME.EXT[PROJECT,PROGRAMMER]\\
.BLANK 3
.INDENT -8
2.	^^RELFIL\\ receives the machine code generated by  the  compiler.
^If  no  code  is  desired,  leave  this position empty in the
command string.  ^If ^^FILESPEC\\= appears, ^^FILESPEC\\ is assumed to
be the ^^RELFIL\\ spec and no listing output is generated.
.BLANK 3
.INDENT -8
3.	^^LSTFIL\\ receives the program listing produced by the compiler.
^If  no  listing  is desired, leave this position empty in the
command string.
.BLANK 3
.INDENT -8
4.	^^SRC1,SRC2,...\\  are  the  ^^BLISS\\-10  source  files  which  when
concatenated together form one ^^BLISS\-10 module.
.BLANK 3
.INDENT -8
5.	If "^^DEVICE\\" is omitted "^^DSK\\" is assumed.
.BLANK 3
.INDENT -8
6.	^If "^^EXT\\" is omitted, ".^^REL\\" is used for the ^^RELFIL\\, ".^^LST\\" is
used  for  the  ^^LSTFIL\\,  and  ".^^BLI\\,"  ".^^B10\\",  and  the null
extension in that order are tried for the source  file  until
either a file is found or all three defaults have failed.
.BLANK 3
.INDENT -8
7.	^If ^^[PROJECT,PROGRAMMER]\\ is omitted for  any  file,  the  user
project,  programmer  number  is  supplied for that file.  ^If
^^[PROJECT, PROGRAMMER]\\ appears at  the  beginning  of  a  file
descriptor,  it  becomes  the  default  for all the following
descriptors  which  do  not   have   a   specific   ^^[PROJECT,
PROGRAMMER].\\
.FIRST TITLE
.PAGE
.INDENT -8
8.	^SWITCHES: (-) implies that -(switch name) will result in  the
opposite  of  the switch action.  * indicates that the switch
is assumed on by default.
.BLANK 2
.LEFT MARGIN 15
.INDENT -8
^^NAME	ACTION\\
.BREAK
.INDENT -8
====	======
.BLANK 1
.INDENT -8
*^A(-)	^USE ^ENGLISH LANGUAGE DIAGNOSTICS
.BLANK 1
.INDENT -8
^B	^PUT A START BLOCK IN THE ^R^E^L FILE FOR THIS MODULE
.BLANK 1
.INDENT -8
^C	^Generate a cross referenced listing.
.BLANK 1
.INDENT -8
^E(-)	^Expand all ^^MACRO\\s in the listing.
.BLANK 1
.INDENT -8
^F(-)	^Set  up  stack  frame  register  (^^FREG\\)  on  every
routine entry.
.BLANK 1
.INDENT -8
^G(-)	^All routines are to be made ^^GLOBAL ROUTINES.\\
.BLANK 1
.INDENT -8
^H	^This entire module is to be loaded into  the  high segment.
.BLANK 1
.INDENT -8
^I(-)	^Generate special inspection word immediately prior
to each routine or function body.
.BLANK 1
.INDENT -8
^K	^Disable listing of the source text (same as -^L).
.BLANK 1
.INDENT -8
*^L(-)	^ENable listing of the source text.
.BLANK 1
.INDENT -8
^M(-)	^Enable listing of the machine code generated.
.BLANK 1
.INDENT -8
^N(-)	^Do not print error  messages  on  the  controlling ^^TTY\\.
.BLANK 1
.INDENT -8
*^O(-)	^Optimize subexpressions across all ";"s.
.BLANK 1
.INDENT -8
^P	^PUT ^^PROLOG-EPILOG\\ CODE IN THIS MODULE.
.BLANK 1
.INDENT -8
^R(-)	^Do not save all  declarable  registers  around  an ^^EXCHJ\\.
.BLANK 1
.INDENT -8
^S	^Output routine names as compiled  and  compilation
statistics to ^^TTY\\.
.BLANK 1
.INDENT -8
^T(-)	^Generate calls to a timing routine  at  the  start
and end of each routine.
.BLANK 1
.INDENT -8
^U	^Do not optimize across ";"s (same as -^O).
.BLANK 1
.INDENT -8
^V	^Entire  module  is  to  be  loaded  into  the  low segment.
.BLANK 1
.INDENT -8
^X	^Perform  a  syntax  only  (no   code   generation) compilation.
.BLANK 5
.INDENT -15
[^End of ^^BLIS10.HLP]\\
