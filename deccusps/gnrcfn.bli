!COPYRIGHT 1972,1973, DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS
!AUTHOR: S. MURPHY
MODULE	GNRC(SREG=#17,VREG=#15,FREG=#16,DREGS=4,RESERVE(0,1,2,3)) =
BEGIN
	EXTERNAL
		TBLSEARCH,
		ERROUT;

SWITCHES NOLIST;
REQUIRE FIRST.BLI;
REQUIRE TABLES.BLI;
SWITCHES LIST;

GLOBAL BIND  GNRCV = 2^18+30;		!VERSION DATE: 10-APR-1974

%(
REVISION HISTORY

30	-----	-----	MAKE DOTTEDNAMES A GLOBAL SO THAT EXPRES CAN ACCESS
			IT TO RESOLVE LIBRARY FUNCTION ACTUAL PARAMETERS

			DO NOT ALLOW TYPED FUNCTION NAMES TO BE GENERIC.

)%



%(***MAKE A TABLE OF DOTTED FUNCTION NAMES. THE INDEX INTO THIS TABLE FOR
	A GIVEN FUNCTION SHOULD BE THE SAME AS THE INDEX FOR THAT FUNCTION IN
	THE FUNCTION ATTRIBUTE TABLE (WHICH IS IN
	GLOBALS )*****)%
BIND DUMMM= PLIT( DOTTEDNAMES GLOBALLY NAMES
	SIXBIT'ABS.',
	SIXBIT'ACOS.',
	SIXBIT'AIMAG.',
	SIXBIT'AINT.',
	SIXBIT'ALOG.',
	SIXBIT'ALG10.',
	SIXBIT'AMAX0.',
	SIXBIT'AMAX1.',
	SIXBIT'AMIN0.',
	SIXBIT'AMIN1.',
	SIXBIT'AMOD.',
	SIXBIT'ASIN.',
	SIXBIT'ATAN.',
	SIXBIT'ATAN2.',
	SIXBIT'CABS.',
	SIXBIT'CCOS.',
	SIXBIT'CEXP.',
	SIXBIT'CLOG.',
	SIXBIT'CMPLX.',
	SIXBIT'CONJG.',
	SIXBIT'COS.',
	SIXBIT'COSD.',
	SIXBIT'COSH.',
	SIXBIT'CSIN.',
	SIXBIT'CSQRT.',
	SIXBIT'DABS.',
	SIXBIT'DATAN.',
	SIXBIT'DATN2.',
	SIXBIT'DBLE.',
	SIXBIT'DCOS.',
	SIXBIT'DEXP.',
	SIXBIT'DFLOT.',
	SIXBIT'DIM.',
	SIXBIT'DLOG.',
	SIXBIT'DLG10.',
	SIXBIT'DMAX1.',
	SIXBIT'DMIN1.',
	SIXBIT'DMOD.',
	SIXBIT'DSIGN.',
	SIXBIT'DSIN.',
	SIXBIT'DSQRT.',
	SIXBIT'EXP.',
	SIXBIT'FLOAT.',
	SIXBIT'IABS.',
	SIXBIT'IDIM.',
	SIXBIT'IDINT.',
	SIXBIT'IFIX.',
	SIXBIT'INT.',
	SIXBIT'ISIGN.',
	SIXBIT'MAX0.',
	SIXBIT'MAX1.',
	SIXBIT'MIN0.',
	SIXBIT'MIN1.',
	SIXBIT'MOD.',
	SIXBIT'REAL.',
	SIXBIT'SIGN.',
	SIXBIT'SIN.',
	SIXBIT'SIND.',
	SIXBIT'SINH.',
	SIXBIT'SNGL.',
	SIXBIT'SQRT.',
	SIXBIT'TANH.');




GLOBAL ROUTINE MAKLIBFN(FNNAMENTRY,FNCALLNODE)=
%(***************************************************************************
	THIS ROUTINE IS CALLED FOR EVERY CALL TO A LIBRARY FN.
	THE ARG "FNNAMENTRY" IS A PTR TO THE ENTRY IN THE FUNCTION NAME
	TABLE FOR THIS FUNCTION.
	THE ARG "FNCALLNODE" IS A PTR TO THE EXPRESSION NODE FOR THE FUNCTION
	CALL BEING PROCESSED. ARG2PTR OF THIS EXPRESSION NODE POINTS TO
	THE ARGUMENT LIST FOR THIS CALL. ALL ARGS ON THIS LIST SHOULD
	ALREADY HAVE BEEN PROCESSED BY EXPRTYPER.

	THIS ROUTINE CHECKS FOR WHETHER THE FUNCTION IS A GENERIC ONE AND
	IF SO, REPLACES THE FUNCTION NAME BY THE ACTUAL FUNCTION NAME TO BE USED.

	THIS ROUTINE SUBSTITUTES A DOTTED FUNCTION NAME FOR THE NAME
	USED BY THE ORIGINAL PROGRAM.
	IT MAKES A SYMBOL TABLE ENTRY FOR THE  DOTTED FUNCTION NAME TO BE USED.
	AND SETS ARG1PTR OF THE FUNCTION CALL NODE TO POINT TO
	THAT SYMBOL TABLE ENTRY. IT SETS THE "FUNCTION
	ATTRIBUTE" AND VALUE-TYPE FIELDS OF THE SYMBOL TABLE ENTRY CREATED
	FROM THE VALUES FOUND IN THE "LIBRARY FUNCTION ATTRIBUTE TABLE" ENTRY
	FOR THE FUNCTION.

	IF THE FN IS NOT GENERIC AND THE ARG IS NOT OF THE EXPECTED TYPE, IT
	PRINTS AN ERROR MESSAGE. ALSO IF THE FN IS GENERIC BUT THE ARG IS OF
	A TYPE NOT HANDLED, IT PRINTS AN ERROR MESSAGE.

	IF THE NUMBER OF ARGS DOES NOT AGREE WITH THE REQUIRED NUMBER, PRINTS
	AN ERROR MESSAGE.
***************************************************************************)%
BEGIN
	OWN BASE  SYMENTRY;	!UN DOTTED SYMBOL TABLE ENTRY POINTER
	MAP PEXPRNODE FNCALLNODE;
	OWN PEXPRNODE FNSYMENTRY;	!SYMBOL TABLE ENTRY CREATED FOR THE FN NAME
	OWN ARGUMENTLIST ARGLST;	!THE ARGUMENT LIST UNDER THE NODE FOR THIS FN-CALL

	EXTERNAL LIBFUNTAB,LIBATTRIBUTES;
	EXTERNAL FATLEX,WARNERR;
	MAP LIBATTSTR LIBATTRIBUTES;
	OWN FNIX;		!INDEX FOR THE FUNCTION-NAME IN THE LIBATTRIBUTES TABLE
	OWN PEXPRNODE ARG1NODE;	!EXPRESSION NODE FOR THE FIRST ARG ON THE ARGLIST



	FNIX_.FNNAMENTRY-LIBFUNTAB<0,0>;
	SYMENTRY _ .FNCALLNODE[ARG1PTR];	!SET SYMBOL TABLE POINTER

	ARGLST_.FNCALLNODE[ARG2PTR];	!PTR TO THE ARGUMENT LIST
	ARG1NODE_.ARGLST[1,ARGNPTR];	!PTR TO THE FIRST ARGUMENT


	%(***CHECK THAT THE ARGS ARE OF THE EXPECTED TYPE - IF NOT GIVE AN ERROR MESSAGE***)%

	IF .ARG1NODE[VALTYPE] EQL OCTAL OR .ARG1NODE[VALTYPE] EQL LOGICAL
	THEN
	%(***FOR THE ARG OF TYPE OCTAL OR LOGICAL - ALWAYS ACCEPT IT AS IS.
		DO NO TYPE CHECKING AND DO NOT CALL SOME OTHER FN IN THE CASE
		OF A GENERIC FN
	*******)%
	BEGIN END

	ELSE
	%(***IF THE FN IS GENERIC, GET A PTR TO THE ACTUAL FN TO USE***)%
	IF .LIBATTRIBUTES[.FNIX,ATTGENERFLG]
		AND  NOT  .SYMENTRY[IDATTRIBUT(INTYPE)]	%EXPLICITLY TYPED FUNCTIONS CANNOT BE GENERIC%
	THEN
	BEGIN
		OWN ACTFN;		!PTR TO THE ENTRY IN THE LIBRARY FN NAME TABLE
					! FOR THE ACTUAL FN TO BE USED WHEN THE
					! FN NAME USED BY THE ORIG PROG WAS A GENERIC ONE
		ACTFN_.LIBATTRIBUTES[.FNIX,ATTACTFN,.ARG1NODE[VALTP1]];

		%(***IF THERE IS NO FUNCTION CORRESPONDING TO THE ARGTYPE USED,
			THEN GIVE AN ERROR MESSAGE AND USE THE ORIGINAL FN NAME***)%
		IF .ACTFN EQL ILGARGTYPE
		THEN
		BEGIN
			EXTERNAL E80;
			WARNERR(.FNNAMENTRY,.ISN,E80<0,0>);


		END
		%(***IF HAVE CHNGED THE FUNCTION NAME TO BE REFERRED TO***)%
		ELSE
		%(*** CHANGE THE VALUE OF THE INDEX INTO THE FUNCTION
			NAME TABLE***)%
		FNIX_(.ACTFN)<0,0>-LIBFUNTAB<0,0>;
	END
	ELSE
	BEGIN

		%(***FOR NON GENERIC FNS - CHECK THAT THE FIRST ARG HAS THE
			TYPE INDICATED BY THE LIBRARY-FN ATTRIBUTE TABLE -
			IF NOT, GIVE AN ERROR MESSAGE
		*******)%
		IF .ARG1NODE[VALTYPE] NEQ .LIBATTRIBUTES[.FNIX,ATTARGTYP]
		THEN 
		BEGIN
			EXTERNAL E80;
			WARNERR(.FNNAMENTRY,.ISN,E80<0,0>);
		END;
	END;


	%(***MAKE A SYMBOL TABLE ENTRY FOR THE DOTTED NAME FOR THIS FN***)%
	NAME_IDTAB;
	ENTRY[0]_.DOTTEDNAMES[.FNIX];		!SIXBIT FOR THE DOTTED NAME TO BE USED
	FNCALLNODE[ARG1PTR]_TBLSEARCH();



	%(***SET THE VALUE-TYPE AND FUNCTION ATTRIBUTE FIELDS OF THE SYMBOL TABLE ENTRY
		AND SET THE VALUE TYPE FIELD OF THE FUNCTION-CALL NODE***)%
	FNSYMENTRY_.FNCALLNODE[ARG1PTR];
	FNSYMENTRY[VALTYPE]_.LIBATTRIBUTES[.FNIX,ATTRESTYPE];
	FNCALLNODE[VALTYPE]_.FNSYMENTRY[VALTYPE];
	FNSYMENTRY[IDFNATTRIB]_.LIBATTRIBUTES[.FNIX,ATTFNATTRIB];

	FNSYMENTRY[OPERSP]_FNNAME;


	%(***CHECK THAT THE NUMBER OF ARGUMENTS AGREES WITH THE NUMBER SPECIFIED
		FOR THE FN BY THE LIBRARY FN ATTRIBUTE TABLE***)%
	IF (.LIBATTRIBUTES[.FNIX,ATTARGCT] NEQ VARGCTFLG) AND .ARGLST[ARGCOUNT] NEQ .LIBATTRIBUTES[.FNIX,ATTARGCT]
	THEN
	BEGIN
		EXTERNAL E81;
		WARNERR(.FNNAMENTRY,.ISN,E81<0,0>);
	END


	ELSE
	%(***IF THE FUNCTION HAS MORE THAN ONE ARG, SUCCESSIVE ARGS MUST HAVE
		THE SAME TYPE AS THE FIRST ARG***)%
	BEGIN
		INCR I FROM 1 TO .ARGLST[ARGCOUNT]
		DO
		BEGIN
			OWN PEXPRNODE ARGNODE;
			ARGNODE_.ARGLST[.I,ARGNPTR];
			IF .ARGNODE[VALTYPE] NEQ .ARG1NODE[VALTYPE]
			THEN
			BEGIN
				EXTERNAL E80;
				WARNERR(.FNNAMENTRY,.ISN,E80<0,0>);
			END
		END
	END;
	%(******SET OPERSP IN THE FUNCTION CALL NODE
		TO INDICATE LIBRARY FUNCTION**************)%
	FNCALLNODE[OPERSP]_LIBARY;
END;
